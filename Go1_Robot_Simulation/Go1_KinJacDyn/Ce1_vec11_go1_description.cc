/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:27:17 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t40;
  double t128;
  double t55;
  double t68;
  double t96;
  double t133;
  double t220;
  double t247;
  double t258;
  double t288;
  double t304;
  double t305;
  double t312;
  double t313;
  double t267;
  double t285;
  double t290;
  double t296;
  double t320;
  double t336;
  double t337;
  double t693;
  double t701;
  double t408;
  double t444;
  double t449;
  double t470;
  double t485;
  double t491;
  double t502;
  double t234;
  double t297;
  double t314;
  double t318;
  double t358;
  double t361;
  double t377;
  double t915;
  double t941;
  double t948;
  double t989;
  double t992;
  double t1022;
  double t1329;
  double t1335;
  double t1336;
  double t1301;
  double t1310;
  double t1311;
  double t1328;
  double t1501;
  double t1506;
  double t1453;
  double t1466;
  double t1471;
  double t1077;
  double t1088;
  double t1094;
  double t1341;
  double t1353;
  double t1354;
  double t1369;
  double t1373;
  double t1375;
  double t1414;
  double t882;
  double t883;
  double t890;
  double t185;
  double t191;
  double t215;
  double t1579;
  double t125;
  double t159;
  double t167;
  double t1564;
  double t523;
  double t539;
  double t558;
  double t351;
  double t393;
  double t402;
  double t1172;
  double t853;
  double t896;
  double t910;
  double t914;
  double t965;
  double t983;
  double t985;
  double t1028;
  double t1040;
  double t1075;
  double t1103;
  double t1133;
  double t1191;
  double t1217;
  double t1226;
  double t2133;
  double t2149;
  double t2152;
  double t2184;
  double t2195;
  double t2197;
  double t2288;
  double t2296;
  double t2297;
  double t2314;
  double t1426;
  double t1434;
  double t1498;
  double t1500;
  double t1508;
  double t1510;
  double t1523;
  double t1529;
  double t1530;
  double t2210;
  double t2214;
  double t2216;
  double t2316;
  double t2321;
  double t2322;
  double t2336;
  double t2337;
  double t2342;
  double t2346;
  double t2347;
  double t2360;
  double t2365;
  double t1673;
  double t1680;
  double t1692;
  double t1693;
  double t1695;
  double t1701;
  double t1713;
  double t1714;
  double t1729;
  double t1752;
  double t1770;
  double t1840;
  double t1844;
  double t1848;
  double t1886;
  double t1888;
  double t1899;
  double t1916;
  double t1928;
  double t1933;
  double t1991;
  double t2007;
  double t2013;
  double t2060;
  double t2068;
  double t2077;
  double t2278;
  double t2280;
  double t2286;
  double t2379;
  double t2380;
  double t2388;
  double t2254;
  double t2262;
  double t2267;
  double t2828;
  double t2836;
  double t2843;
  double t2857;
  double t2858;
  double t2860;
  double t2861;
  double t2869;
  double t3061;
  double t3082;
  double t3090;
  double t3100;
  double t3101;
  double t3104;
  double t3119;
  double t3124;
  double t3127;
  double t3025;
  double t3026;
  double t3030;
  double t3052;
  double t3056;
  double t3058;
  double t3169;
  double t3170;
  double t3173;
  double t3060;
  double t3128;
  double t3129;
  double t3233;
  double t3243;
  double t3255;
  double t3140;
  double t3145;
  double t3146;
  double t3195;
  double t3198;
  double t3203;
  double t3001;
  double t3007;
  double t3014;
  double t3256;
  double t3271;
  double t3293;
  double t3295;
  double t3296;
  double t3312;
  double t3215;
  double t3217;
  double t3218;
  double t1275;
  double t1287;
  double t1295;
  double t3688;
  double t3708;
  double t3715;
  double t3717;
  double t3722;
  double t3723;
  double t3731;
  double t3739;
  double t3626;
  double t3629;
  double t3638;
  double t3653;
  double t3765;
  double t3766;
  double t3769;
  double t3659;
  double t3741;
  double t3797;
  double t3803;
  double t3811;
  double t3823;
  double t3773;
  double t3774;
  double t3778;
  double t3813;
  double t3824;
  double t3827;
  double t3850;
  double t3853;
  double t3856;
  double t3752;
  double t1532;
  double t1533;
  double t1534;
  double t700;
  double t712;
  double t713;
  double t777;
  double t778;
  double t783;
  double t796;
  double t804;
  double t811;
  double t3400;
  double t3406;
  double t3408;
  double t3409;
  double t4075;
  double t4076;
  double t4079;
  double t4088;
  double t4092;
  double t4094;
  double t4095;
  double t4097;
  double t4102;
  double t4103;
  double t4104;
  double t4040;
  double t4043;
  double t4047;
  double t3440;
  double t3447;
  double t3451;
  double t3453;
  double t759;
  double t761;
  double t764;
  double t3516;
  double t3517;
  double t3520;
  double t3521;
  double t4133;
  double t4159;
  double t4160;
  double t4161;
  double t3584;
  double t3585;
  double t3591;
  double t3605;
  double t3867;
  double t3869;
  double t3872;
  double t3874;
  double t4233;
  double t4236;
  double t4247;
  double t4270;
  double t4271;
  double t4276;
  double t4286;
  double t4288;
  double t4332;
  double t4334;
  double t4335;
  double t3918;
  double t3923;
  double t3925;
  double t3926;
  double t3961;
  double t3972;
  double t3978;
  double t3979;
  double t4021;
  double t4024;
  double t4028;
  double t4031;
  double t4462;
  double t4464;
  double t4470;
  double t4479;
  double t4483;
  double t4484;
  double t4649;
  double t4631;
  double t4637;
  double t4638;
  double t4824;
  double t4828;
  double t4831;
  double t4852;
  double t4853;
  double t4859;
  double t4832;
  double t4837;
  double t4838;
  double t4842;
  double t4864;
  double t4867;
  double t4882;
  double t4885;
  double t4891;
  double t1231;
  double t1264;
  double t4971;
  double t4975;
  double t4979;
  double t4985;
  double t4998;
  double t5037;
  double t5041;
  double t5045;
  double t4993;
  double t5003;
  double t5006;
  double t5023;
  double t5048;
  double t5053;
  double t5072;
  double t5074;
  double t5076;
  double t4785;
  double t4790;
  double t4968;
  double t5290;
  double t5291;
  double t5294;
  double t5297;
  double t5299;
  double t5307;
  double t5318;
  double t5319;
  double t5320;
  double t5296;
  double t5308;
  double t5309;
  double t5098;
  double t5116;
  double t5122;
  double t5315;
  double t5323;
  double t5324;
  double t5329;
  double t5338;
  double t5345;
  double t5150;
  double t5201;
  double t5215;
  double t5217;
  double t4136;
  double t4156;
  double t4074;
  double t4080;
  double t4182;
  double t5500;
  double t4185;
  double t4205;
  double t4206;
  double t4253;
  double t4331;
  double t4343;
  double t4347;
  double t4378;
  double t4381;
  double t4394;
  double t4396;
  double t5478;
  double t5493;
  double t5494;
  double t3204;
  double t3332;
  double t3333;
  double t5546;
  double t5549;
  double t5550;
  double t5589;
  double t5591;
  double t5597;
  double t3496;
  double t5655;
  double t5657;
  double t5658;
  double t3529;
  double t3530;
  double t5662;
  double t5666;
  double t5667;
  double t3758;
  double t3790;
  double t3885;
  double t3886;
  double t5713;
  double t5714;
  double t5715;
  double t5732;
  double t5741;
  double t5742;
  double t3938;
  double t3943;
  double t5837;
  double t5838;
  double t5840;
  double t3991;
  double t3992;
  double t4841;
  double t4899;
  double t4900;
  double t4936;
  double t6068;
  double t4944;
  double t4947;
  double t5016;
  double t5095;
  double t5161;
  double t5202;
  double t6054;
  double t6055;
  double t6145;
  double t5313;
  double t6150;
  double t6152;
  double t5363;
  double t6183;
  double t5386;
  double t6189;
  double t5409;
  double t6193;
  double t5606;
  double t5609;
  double t5629;
  double t5633;
  double t5526;
  double t5527;
  double t5497;
  double t5499;
  double t6454;
  double t5790;
  double t5815;
  double t5674;
  double t5683;
  double t6406;
  double t6411;
  double t6069;
  double t6074;
  double t6327;
  double t6335;
  double t6429;
  double t6430;
  double t6098;
  double t6596;
  double t6455;
  double t6457;
  double t6458;
  double t6151;
  double t6506;
  double t6507;
  double t6510;
  double t6185;
  double t6653;
  double t6657;
  double t6490;
  double t6491;
  double t6492;
  double t6494;
  double t6564;
  double t6565;
  double t6569;
  double t6573;
  double t6660;
  double t6675;
  double t6682;
  double t6690;
  double t6256;
  double t6703;
  double t6705;
  double t6295;
  double t6707;
  double t6708;
  double t6793;
  double t6794;
  double t6795;
  double t6796;
  double t6797;
  double t6798;
  double t6804;
  t40 = Cos(var1[4]);
  t128 = Cos(var1[10]);
  t55 = Cos(var1[5]);
  t68 = Sin(var1[9]);
  t96 = Sin(var1[10]);
  t133 = Sin(var1[5]);
  t220 = Cos(var1[11]);
  t247 = -1.*t220;
  t258 = 1. + t247;
  t288 = Sin(var1[11]);
  t304 = -0.213*t258;
  t305 = -0.335269*t220;
  t312 = -0.006286*t288;
  t313 = t304 + t305 + t312;
  t267 = 0.1881*t258;
  t285 = 0.194386*t220;
  t290 = -0.12226899999999999*t288;
  t296 = t267 + t285 + t290;
  t320 = t128*t220;
  t336 = -1.*t96*t288;
  t337 = t320 + t336;
  t693 = Sin(var1[4]);
  t701 = Cos(var1[9]);
  t408 = t220*t313;
  t444 = -0.1881*t288;
  t449 = t296*t288;
  t470 = 0. + t408 + t444 + t449;
  t485 = -1.*t220*t96;
  t491 = -1.*t128*t288;
  t502 = t485 + t491;
  t234 = 0.1881*t220;
  t297 = -1.*t220*t296;
  t314 = t313*t288;
  t318 = 0. + t234 + t297 + t314;
  t358 = t220*t96;
  t361 = t128*t288;
  t377 = t358 + t361;
  t915 = t128*t55;
  t941 = -1.*t68*t96*t133;
  t948 = t915 + t941;
  t989 = t55*t337;
  t992 = t68*t502*t133;
  t1022 = t989 + t992;
  t1329 = -1.*t128*t220;
  t1335 = t96*t288;
  t1336 = t1329 + t1335;
  t1301 = t701*t502*t693;
  t1310 = t40*t1022;
  t1311 = t1301 + t1310;
  t1328 = 0.158015*t318*t1311;
  t1501 = -0.12226899999999999*t220;
  t1506 = t1501 + t312;
  t1453 = -0.006286*t220;
  t1466 = 0.12226899999999999*t288;
  t1471 = t1453 + t1466;
  t1077 = t55*t377;
  t1088 = t68*t337*t133;
  t1094 = t1077 + t1088;
  t1341 = t701*t1336*t693;
  t1353 = t55*t502;
  t1354 = t68*t1336*t133;
  t1369 = t1353 + t1354;
  t1373 = t40*t1369;
  t1375 = t1341 + t1373;
  t1414 = 0.158015*t470*t1375;
  t882 = t55*t96;
  t883 = t128*t68*t133;
  t890 = t882 + t883;
  t185 = t128*t55*t68;
  t191 = -1.*t96*t133;
  t215 = t185 + t191;
  t1579 = Sin(var1[3]);
  t125 = -1.*t55*t68*t96;
  t159 = -1.*t128*t133;
  t167 = t125 + t159;
  t1564 = Cos(var1[3]);
  t523 = t55*t68*t502;
  t539 = -1.*t337*t133;
  t558 = t523 + t539;
  t351 = t55*t68*t337;
  t393 = -1.*t377*t133;
  t402 = t351 + t393;
  t1172 = -1.*t701*t128*t693;
  t853 = t701*t128*t40;
  t896 = -1.*t693*t890;
  t910 = t853 + t896;
  t914 = -1.*t701*t40*t96;
  t965 = -1.*t693*t948;
  t983 = t914 + t965;
  t985 = t701*t40*t502;
  t1028 = -1.*t693*t1022;
  t1040 = t985 + t1028;
  t1075 = t701*t40*t337;
  t1103 = -1.*t693*t1094;
  t1133 = t1075 + t1103;
  t1191 = -1.*t55*t96;
  t1217 = -1.*t128*t68*t133;
  t1226 = t1191 + t1217;
  t2133 = t55*t68*t96;
  t2149 = t128*t133;
  t2152 = t2133 + t2149;
  t2184 = -1.*t55*t68*t502;
  t2195 = t337*t133;
  t2197 = t2184 + t2195;
  t2288 = t1564*t2197;
  t2296 = -1.*t1579*t1040;
  t2297 = t2288 + t2296;
  t2314 = 0.158015*t318*t2297;
  t1426 = -0.1881*t220;
  t1434 = t220*t296;
  t1498 = t220*t1471;
  t1500 = -1.*t313*t288;
  t1508 = t1506*t288;
  t1510 = t1426 + t1434 + t1498 + t1500 + t1508;
  t1523 = -1.*t220*t1506;
  t1529 = t1471*t288;
  t1530 = t408 + t1523 + t444 + t449 + t1529;
  t2210 = -1.*t55*t68*t337;
  t2214 = t377*t133;
  t2216 = t2210 + t2214;
  t2316 = -1.*t55*t68*t1336;
  t2321 = t502*t133;
  t2322 = t2316 + t2321;
  t2336 = t1564*t2322;
  t2337 = t701*t40*t1336;
  t2342 = -1.*t693*t1369;
  t2346 = t2337 + t2342;
  t2347 = -1.*t1579*t2346;
  t2360 = t2336 + t2347;
  t2365 = 0.158015*t470*t2360;
  t1673 = -1.*t40*t890;
  t1680 = t1172 + t1673;
  t1692 = t701*t96*t693;
  t1693 = -1.*t40*t948;
  t1695 = t1692 + t1693;
  t1701 = -1.*t701*t502*t693;
  t1713 = -1.*t40*t1022;
  t1714 = t1701 + t1713;
  t1729 = -1.*t701*t337*t693;
  t1752 = -1.*t40*t1094;
  t1770 = t1729 + t1752;
  t1840 = -1.*t128*t40*t68;
  t1844 = -1.*t701*t128*t693*t133;
  t1848 = t1840 + t1844;
  t1886 = t40*t68*t96;
  t1888 = t701*t96*t693*t133;
  t1899 = t1886 + t1888;
  t1916 = -1.*t40*t68*t502;
  t1928 = -1.*t701*t502*t693*t133;
  t1933 = t1916 + t1928;
  t1991 = -1.*t40*t68*t337;
  t2007 = -1.*t701*t337*t693*t133;
  t2013 = t1991 + t2007;
  t2060 = -1.*t128*t55*t68;
  t2068 = t96*t133;
  t2077 = t2060 + t2068;
  t2278 = t1564*t2152;
  t2280 = -1.*t1579*t983;
  t2286 = t2278 + t2280;
  t2379 = t1564*t2216;
  t2380 = -1.*t1579*t1133;
  t2388 = t2379 + t2380;
  t2254 = -1.*t701*t128*t40;
  t2262 = -1.*t693*t1226;
  t2267 = t2254 + t2262;
  t2828 = t1579*t2197;
  t2836 = t1564*t1040;
  t2843 = t2828 + t2836;
  t2857 = 0.158015*t318*t2843;
  t2858 = t1579*t2322;
  t2860 = t1564*t2346;
  t2861 = t2858 + t2860;
  t2869 = 0.158015*t470*t2861;
  t3061 = -1.*t701;
  t3082 = 1. + t3061;
  t3090 = 0.04675*t3082;
  t3100 = 0.107803*t701;
  t3101 = -0.032736*t128;
  t3104 = 0.003468*t96;
  t3119 = t3101 + t3104;
  t3124 = -1.*t68*t3119;
  t3127 = t3090 + t3100 + t3124;
  t3025 = -1.*t128;
  t3026 = 1. + t3025;
  t3030 = 0.1881*t3026;
  t3052 = 0.184632*t128;
  t3056 = -0.032736*t96;
  t3058 = t3030 + t3052 + t3056;
  t3169 = -1.*t55*t3127;
  t3170 = -1.*t3058*t133;
  t3173 = t3169 + t3170;
  t3060 = t55*t3058;
  t3128 = -1.*t3127*t133;
  t3129 = t3060 + t3128;
  t3233 = 0.061053*t68;
  t3243 = t701*t3119;
  t3255 = t3233 + t3243;
  t3140 = t68*t693;
  t3145 = -1.*t701*t40*t133;
  t3146 = t3140 + t3145;
  t3195 = t55*t3127;
  t3198 = t3058*t133;
  t3203 = t3195 + t3198;
  t3001 = t701*t128*t693;
  t3007 = t40*t890;
  t3014 = t3001 + t3007;
  t3256 = t3255*t693;
  t3271 = t40*t3129;
  t3293 = t3256 + t3271;
  t3295 = t40*t3255;
  t3296 = -1.*t693*t3129;
  t3312 = t3295 + t3296;
  t3215 = t40*t68;
  t3217 = t701*t693*t133;
  t3218 = t3215 + t3217;
  t1275 = -1.*t701*t96*t693;
  t1287 = t40*t948;
  t1295 = t1275 + t1287;
  t3688 = 0.04675*t3082;
  t3708 = 0.128057*t701;
  t3715 = 0.1881*t96;
  t3717 = -1.*t96*t296;
  t3722 = t128*t313;
  t3723 = 0. + t3715 + t3717 + t3722;
  t3731 = -1.*t68*t3723;
  t3739 = t3688 + t3708 + t3731;
  t3626 = 0.1881*t3026;
  t3629 = t128*t296;
  t3638 = t96*t313;
  t3653 = 0. + t3626 + t3629 + t3638;
  t3765 = -1.*t55*t3739;
  t3766 = -1.*t3653*t133;
  t3769 = t3765 + t3766;
  t3659 = t55*t3653;
  t3741 = -1.*t3739*t133;
  t3797 = 0.081307*t68;
  t3803 = t701*t3723;
  t3811 = 0. + t3797 + t3803;
  t3823 = 0. + t3659 + t3741;
  t3773 = t55*t3739;
  t3774 = t3653*t133;
  t3778 = 0. + t3773 + t3774;
  t3813 = t3811*t693;
  t3824 = t40*t3823;
  t3827 = 0. + t3813 + t3824;
  t3850 = t40*t3811;
  t3853 = -1.*t693*t3823;
  t3856 = 0. + t3850 + t3853;
  t3752 = t3659 + t3741;
  t1532 = t701*t337*t693;
  t1533 = t40*t1094;
  t1534 = t1532 + t1533;
  t700 = -1.*t128*t68*t693;
  t712 = t701*t128*t40*t133;
  t713 = t700 + t712;
  t777 = -1.*t68*t502*t693;
  t778 = t701*t40*t502*t133;
  t783 = t777 + t778;
  t796 = -1.*t68*t337*t693;
  t804 = t701*t40*t337*t133;
  t811 = t796 + t804;
  t3400 = -1.*t701*t55*t3203;
  t3406 = -1.*t3146*t3293;
  t3408 = -1.*t3218*t3312;
  t3409 = t3400 + t3406 + t3408;
  t4075 = -0.061053*t68;
  t4076 = -1.*t701*t3119;
  t4079 = t4075 + t4076;
  t4088 = 0.061053*t701;
  t4092 = t4088 + t3124;
  t4094 = t4092*t693;
  t4095 = -1.*t40*t4079*t133;
  t4097 = t4094 + t4095;
  t4102 = t40*t4092;
  t4103 = t4079*t693*t133;
  t4104 = t4102 + t4103;
  t4040 = t701*t693;
  t4043 = t40*t68*t133;
  t4047 = t4040 + t4043;
  t3440 = t3203*t2077;
  t3447 = t3014*t3293;
  t3451 = t910*t3312;
  t3453 = t3440 + t3447 + t3451;
  t759 = t68*t96*t693;
  t761 = -1.*t701*t40*t96*t133;
  t764 = t759 + t761;
  t3516 = t701*t55*t3203;
  t3517 = t3146*t3293;
  t3520 = t3218*t3312;
  t3521 = t3516 + t3517 + t3520;
  t4133 = Power(t55,2);
  t4159 = t701*t40;
  t4160 = -1.*t68*t693*t133;
  t4161 = t4159 + t4160;
  t3584 = -1.*t2152*t3203;
  t3585 = -1.*t3293*t1295;
  t3591 = -1.*t3312*t983;
  t3605 = t3584 + t3585 + t3591;
  t3867 = t701*t55*t3778;
  t3869 = t3146*t3827;
  t3872 = t3218*t3856;
  t3874 = t3867 + t3869 + t3872;
  t4233 = -0.081307*t68;
  t4236 = -1.*t701*t3723;
  t4247 = t4233 + t4236;
  t4270 = 0.081307*t701;
  t4271 = t4270 + t3731;
  t4276 = t4271*t693;
  t4286 = -1.*t40*t4247*t133;
  t4288 = t4276 + t4286;
  t4332 = t40*t4271;
  t4334 = t4247*t693*t133;
  t4335 = t4332 + t4334;
  t3918 = -1.*t3778*t2197;
  t3923 = -1.*t3827*t1311;
  t3925 = -1.*t3856*t1040;
  t3926 = t3918 + t3923 + t3925;
  t3961 = -1.*t701*t55*t3778;
  t3972 = -1.*t3146*t3827;
  t3978 = -1.*t3218*t3856;
  t3979 = t3961 + t3972 + t3978;
  t4021 = t3778*t2216;
  t4024 = t3827*t1534;
  t4028 = t3856*t1133;
  t4031 = t4021 + t4024 + t4028;
  t4462 = -1.*t3255*t693;
  t4464 = -1.*t40*t3129;
  t4470 = t4462 + t4464;
  t4479 = -1.*t68*t693;
  t4483 = t701*t40*t133;
  t4484 = t4479 + t4483;
  t4649 = t3850 + t3853;
  t4631 = -1.*t3811*t693;
  t4637 = -1.*t40*t3823;
  t4638 = t4631 + t4637;
  t4824 = 0.003468*t128;
  t4828 = 0.032736*t96;
  t4831 = t4824 + t4828;
  t4852 = t55*t3119;
  t4853 = t68*t4831*t133;
  t4859 = t4852 + t4853;
  t4832 = -1.*t55*t68*t4831;
  t4837 = t3119*t133;
  t4838 = t4832 + t4837;
  t4842 = t701*t4831*t693;
  t4864 = t40*t4859;
  t4867 = t4842 + t4864;
  t4882 = t701*t40*t4831;
  t4885 = -1.*t693*t4859;
  t4891 = t4882 + t4885;
  t1231 = t40*t1226;
  t1264 = t1172 + t1231;
  t4971 = 0.1881*t128;
  t4975 = -1.*t128*t296;
  t4979 = -1.*t96*t313;
  t4985 = t4971 + t4975 + t4979;
  t4998 = t3715 + t3717 + t3722;
  t5037 = t55*t4998;
  t5041 = t68*t4985*t133;
  t5045 = t5037 + t5041;
  t4993 = -1.*t55*t68*t4985;
  t5003 = t4998*t133;
  t5006 = t4993 + t5003;
  t5023 = t701*t4985*t693;
  t5048 = t40*t5045;
  t5053 = t5023 + t5048;
  t5072 = t701*t40*t4985;
  t5074 = -1.*t693*t5045;
  t5076 = t5072 + t5074;
  t4785 = -0.000029*t1311;
  t4790 = 1.e-6*t1375;
  t4968 = t1311*t3979;
  t5290 = -1.*t96*t1506;
  t5291 = t128*t1471;
  t5294 = t5290 + t5291;
  t5297 = t128*t1506;
  t5299 = t96*t1471;
  t5307 = t5297 + t5299;
  t5318 = t55*t5307;
  t5319 = t68*t5294*t133;
  t5320 = t5318 + t5319;
  t5296 = -1.*t55*t68*t5294;
  t5308 = t5307*t133;
  t5309 = t5296 + t5308;
  t5098 = t3778*t2197;
  t5116 = t3827*t1311;
  t5122 = t3856*t1040;
  t5315 = t701*t5294*t693;
  t5323 = t40*t5320;
  t5324 = t5315 + t5323;
  t5329 = t701*t40*t5294;
  t5338 = -1.*t693*t5320;
  t5345 = t5329 + t5338;
  t5150 = t1375*t3874;
  t5201 = -1.*t3778*t2322;
  t5215 = -1.*t3827*t1375;
  t5217 = -1.*t3856*t2346;
  t4136 = -1.*t701*t4133*t4079;
  t4156 = t55*t68*t3203;
  t4074 = -1.*t701*t128*t55*t3203;
  t4080 = t55*t4079*t2077;
  t4182 = t701*t4133*t4079;
  t5500 = Power(t133,2);
  t4185 = -1.*t55*t68*t3203;
  t4205 = -1.*t55*t4079*t2152;
  t4206 = -1.*t701*t55*t96*t3203;
  t4253 = t701*t4133*t4247;
  t4331 = -1.*t55*t68*t3778;
  t4343 = t701*t55*t502*t3778;
  t4347 = -1.*t55*t4247*t2197;
  t4378 = -1.*t701*t4133*t4247;
  t4381 = t55*t68*t3778;
  t4394 = -1.*t701*t55*t337*t3778;
  t4396 = t55*t4247*t2216;
  t5478 = -1.*t68*t3255;
  t5493 = t701*t133*t3129;
  t5494 = t5478 + t5493 + t3400;
  t3204 = t701*t133*t3203;
  t3332 = t890*t3203;
  t3333 = t3129*t2077;
  t5546 = t701*t128*t3255;
  t5549 = t890*t3129;
  t5550 = t5546 + t5549 + t3440;
  t5589 = t68*t3255;
  t5591 = -1.*t701*t133*t3129;
  t5597 = t5589 + t5591 + t3516;
  t3496 = -1.*t701*t133*t3203;
  t5655 = t701*t3255*t96;
  t5657 = -1.*t3129*t948;
  t5658 = t5655 + t3584 + t5657;
  t3529 = -1.*t2152*t3129;
  t3530 = -1.*t3203*t948;
  t5662 = t68*t3811;
  t5666 = -1.*t701*t133*t3823;
  t5667 = t5662 + t5666 + t3867;
  t3758 = t701*t55*t3752;
  t3790 = -1.*t701*t133*t3778;
  t3885 = -1.*t3778*t1022;
  t3886 = -1.*t3752*t2197;
  t5713 = -1.*t701*t3811*t502;
  t5714 = -1.*t3823*t1022;
  t5715 = t5713 + t5714 + t3918;
  t5732 = -1.*t68*t3811;
  t5741 = t701*t133*t3823;
  t5742 = t5732 + t5741 + t3961;
  t3938 = -1.*t701*t55*t3752;
  t3943 = t701*t133*t3778;
  t5837 = t701*t3811*t337;
  t5838 = t3823*t1094;
  t5840 = t5837 + t4021 + t5838;
  t3991 = t3752*t2216;
  t3992 = t3778*t1094;
  t4841 = -1.*t701*t55*t4838;
  t4899 = t2152*t3203;
  t4900 = t4838*t2077;
  t4936 = t701*t55*t4838;
  t6068 = Power(t701,2);
  t4944 = -1.*t2152*t4838;
  t4947 = -1.*t3203*t215;
  t5016 = -1.*t701*t55*t5006;
  t5095 = t5006*t2216;
  t5161 = t701*t55*t5006;
  t5202 = -1.*t5006*t2197;
  t6054 = 1.e-6*t2322;
  t6055 = -0.000029*t2197;
  t6145 = t2197*t5742;
  t5313 = -1.*t701*t55*t5309;
  t6150 = t701*t3811*t502;
  t6152 = t3823*t1022;
  t5363 = t5309*t2216;
  t6183 = t2322*t5667;
  t5386 = t701*t55*t5309;
  t6189 = -1.*t701*t3811*t1336;
  t5409 = -1.*t5309*t2197;
  t6193 = -1.*t3823*t1369;
  t5606 = t701*t3255;
  t5609 = t68*t4092;
  t5629 = -1.*t68*t3255*t96;
  t5633 = t701*t4092*t96;
  t5526 = -1.*t128*t68*t3255;
  t5527 = t701*t128*t4092;
  t5497 = -1.*t701*t3255;
  t5499 = -1.*t68*t4092;
  t6454 = t3797 + t3803;
  t5790 = -1.*t68*t4271;
  t5815 = t701*t4271*t337;
  t5674 = t68*t4271;
  t5683 = -1.*t701*t4271*t502;
  t6406 = -1.*t701*t3127;
  t6411 = t5478 + t6406;
  t6069 = t6068*t128*t4831;
  t6074 = -1.*t701*t3255*t96;
  t6327 = t701*t3127;
  t6335 = t5589 + t6327;
  t6429 = -1.*t128*t68*t3127;
  t6430 = t3058*t96;
  t6098 = t6068*t4831*t96;
  t6596 = Power(t68,2);
  t6455 = -1.*t68*t6454;
  t6457 = -1.*t701*t3739;
  t6458 = t6455 + t6457;
  t6151 = t6068*t4985*t337;
  t6506 = t68*t6454;
  t6507 = t701*t3739;
  t6510 = t6506 + t6507;
  t6185 = -1.*t6068*t4985*t502;
  t6653 = -0.000029*t701*t502;
  t6657 = 1.e-6*t701*t1336;
  t6490 = t3653*t377;
  t6491 = t701*t6454*t337;
  t6492 = -1.*t68*t3739*t337;
  t6494 = t6490 + t6491 + t6492;
  t6564 = -1.*t701*t6454*t502;
  t6565 = t68*t3739*t502;
  t6569 = -1.*t3653*t337;
  t6573 = t6564 + t6565 + t6569;
  t6660 = t701*t6458*t502;
  t6675 = t701*t6454*t502;
  t6682 = -1.*t68*t3739*t502;
  t6690 = t3653*t337;
  t6256 = t6068*t5294*t337;
  t6703 = t701*t6510*t1336;
  t6705 = -1.*t3653*t502;
  t6295 = -1.*t6068*t5294*t502;
  t6707 = -1.*t701*t6454*t1336;
  t6708 = t68*t3739*t1336;
  t6793 = 1.e-6*t502;
  t6794 = -0.000029*t337;
  t6795 = 0.012847725605*t502*t318;
  t6796 = -0.128057*t337;
  t6797 = -0.04675*t1336;
  t6798 = t6796 + t6797;
  t6804 = 0.158015*t470*t6798;
  p_output1[0]=var2[10]*(-0.5*(0.158015*t1133*t318 + 0.158015*t1040*t470 + 0.0031174510920000003*t910 - 0.029427012384*t983)*var2[4] - 0.5*(-0.029427012384*t167*t40 + 0.0031174510920000003*t215*t40 + 0.158015*t318*t40*t402 + 0.158015*t40*t470*t558)*var2[5] - 0.5*(0.0031174510920000003*t713 - 0.029427012384*t764 + 0.158015*t470*t783 + 0.158015*t318*t811)*var2[9] - 0.5*(-0.029427012384*t1264 + 0.0031174510920000003*t1295 + t1328 + t1414)*var2[10] - 0.5*(t1328 + t1414 + 0.158015*t1311*t1510 + 0.158015*t1530*t1534)*var2[11]);
  p_output1[1]=var2[10]*(-0.5*(0.158015*(-1.*t1133*t1564 - 1.*t1579*t2216)*t318 + 0.158015*(-1.*t1040*t1564 - 1.*t1579*t2197)*t470 + 0.0031174510920000003*(-1.*t1579*t2077 - 1.*t1564*t910) - 0.029427012384*(-1.*t1579*t2152 - 1.*t1564*t983))*var2[3] - 0.5*(-0.0031174510920000003*t1579*t1680 + 0.029427012384*t1579*t1695 - 0.158015*t1579*t1770*t318 - 0.158015*t1579*t1714*t470)*var2[4] - 0.5*(0.158015*t318*(t1094*t1564 + t1579*t402*t693) + 0.158015*t470*(t1022*t1564 + t1579*t558*t693) + 0.0031174510920000003*(t1579*t215*t693 + t1564*t890) - 0.029427012384*(t1579*t167*t693 + t1564*t948))*var2[5] - 0.5*(0.0031174510920000003*(-1.*t1579*t1848 - 1.*t128*t1564*t55*t701) + 0.158015*t318*(-1.*t1579*t2013 - 1.*t1564*t337*t55*t701) + 0.158015*t470*(-1.*t1579*t1933 - 1.*t1564*t502*t55*t701) - 0.029427012384*(-1.*t1579*t1899 + t1564*t55*t701*t96))*var2[9] - 0.5*(-0.029427012384*(t1564*t215 - 1.*t1579*t2267) + 0.0031174510920000003*t2286 + t2314 + t2365)*var2[10] - 0.5*(0.158015*t1510*t2297 + t2314 + t2365 + 0.158015*t1530*t2388)*var2[11]);
  p_output1[2]=var2[10]*(-0.5*(-0.029427012384*t2286 + 0.158015*t2388*t318 + 0.158015*t2297*t470 + 0.0031174510920000003*(t1564*t2077 - 1.*t1579*t910))*var2[3] - 0.5*(0.0031174510920000003*t1564*t1680 - 0.029427012384*t1564*t1695 + 0.158015*t1564*t1770*t318 + 0.158015*t1564*t1714*t470)*var2[4] - 0.5*(0.158015*t318*(t1094*t1579 - 1.*t1564*t402*t693) + 0.158015*t470*(t1022*t1579 - 1.*t1564*t558*t693) + 0.0031174510920000003*(-1.*t1564*t215*t693 + t1579*t890) - 0.029427012384*(-1.*t1564*t167*t693 + t1579*t948))*var2[5] - 0.5*(0.0031174510920000003*(t1564*t1848 - 1.*t128*t1579*t55*t701) + 0.158015*t318*(t1564*t2013 - 1.*t1579*t337*t55*t701) + 0.158015*t470*(t1564*t1933 - 1.*t1579*t502*t55*t701) - 0.029427012384*(t1564*t1899 + t1579*t55*t701*t96))*var2[9] - 0.5*(-0.029427012384*(t1579*t215 + t1564*t2267) + t2857 + t2869 + 0.0031174510920000003*(t1579*t2152 + t1564*t983))*var2[10] - 0.5*(0.158015*t1530*(t1133*t1564 + t1579*t2216) + 0.158015*t1510*t2843 + t2857 + t2869)*var2[11]);
  p_output1[3]=var2[10]*(-0.5*(1.e-6*t1040 - 0.000029*t1133 + 0.008769*t3218 + 0.158015*t318*(t1040*t3874 + t3218*t3926 + t3146*(-1.*t1040*t3827 - 1.*t1714*t3856 - 1.*t1040*t4638 - 1.*t1311*t4649) + t1311*(t3218*t3827 + t3856*t4484 + t3218*t4638 + t3146*t4649)) + 0.158015*(t1133*t3979 + t3218*t4031 + t3146*(t1133*t3827 + t1770*t3856 + t1133*t4638 + t1534*t4649) + t1534*(-1.*t3218*t3827 - 1.*t3856*t4484 - 1.*t3218*t4638 - 1.*t3146*t4649))*t470 - 6.e-6*t910 - 0.029427012384*(t3218*t3453 + t3014*(-1.*t3218*t3293 - 1.*t3146*t3312 - 1.*t3218*t4470 - 1.*t3312*t4484) + t3409*t910 + t3146*(t1680*t3312 + t3014*t3312 + t3293*t910 + t4470*t910)) + 0.0031174510920000003*(t3218*t3605 + t1295*(t3218*t3293 + t3146*t3312 + t3218*t4470 + t3312*t4484) + t3521*t983 + t3146*(-1.*t1295*t3312 - 1.*t1695*t3312 - 1.*t3293*t983 - 1.*t4470*t983)))*var2[4] - 0.5*(-6.e-6*t215*t40 - 0.000029*t40*t402 + 1.e-6*t40*t558 - 0.008769*t40*t55*t701 + 0.158015*t470*(t3979*t40*t402 + t3146*(t3991 + t3992 + t1534*t3769*t40 + t3827*t40*t402 - 1.*t1133*t3769*t693 - 1.*t3856*t402*t693) - 1.*t40*t4031*t55*t701 + t1534*(t3938 + t3943 - 1.*t3146*t3769*t40 + t3218*t3769*t693 + t3827*t40*t55*t701 - 1.*t3856*t55*t693*t701)) + 0.158015*t318*(t3874*t40*t558 + t3146*(t3885 + t3886 - 1.*t1311*t3769*t40 - 1.*t3827*t40*t558 + t1040*t3769*t693 + t3856*t558*t693) - 1.*t3926*t40*t55*t701 + t1311*(t3758 + t3790 + t3146*t3769*t40 - 1.*t3218*t3769*t693 - 1.*t3827*t40*t55*t701 + t3856*t55*t693*t701)) - 0.029427012384*(t215*t3409*t40 - 1.*t3453*t40*t55*t701 + t3014*(t3204 - 1.*t3146*t3173*t40 + t3173*t3218*t693 - 1.*t3129*t55*t701 + t3293*t40*t55*t701 - 1.*t3312*t55*t693*t701) + t3146*(t3332 + t3333 + t3014*t3173*t40 + t215*t3293*t40 - 1.*t215*t3312*t693 - 1.*t3173*t693*t910)) + 0.0031174510920000003*(t167*t3521*t40 - 1.*t3605*t40*t55*t701 + t1295*(t3496 + t3146*t3173*t40 - 1.*t3173*t3218*t693 + t3129*t55*t701 - 1.*t3293*t40*t55*t701 + t3312*t55*t693*t701) + t3146*(t3529 + t3530 - 1.*t1295*t3173*t40 - 1.*t167*t3293*t40 + t167*t3312*t693 + t3173*t693*t983)))*var2[5] - 0.5*(0.008769*t4047 - 6.e-6*t713 + 1.e-6*t783 + 0.158015*t318*(t3926*t4047 + t1311*(t3827*t4047 + t3856*t4161 + t4253 + t3146*t4288 + t4331 + t3218*t4335) + t3874*t783 + t3146*(-1.*t1933*t3856 - 1.*t1311*t4288 - 1.*t1040*t4335 + t4343 + t4347 - 1.*t3827*t783)) - 0.000029*t811 + 0.158015*t470*(t4031*t4047 + t1534*(-1.*t3827*t4047 - 1.*t3856*t4161 - 1.*t3146*t4288 - 1.*t3218*t4335 + t4378 + t4381) + t3979*t811 + t3146*(t2013*t3856 + t1534*t4288 + t1133*t4335 + t4394 + t4396 + t3827*t811)) - 0.029427012384*(t3453*t4047 + t3014*(-1.*t3293*t4047 - 1.*t3146*t4097 - 1.*t3218*t4104 + t4136 + t4156 - 1.*t3312*t4161) + t3409*t713 + t3146*(t1848*t3312 + t4074 + t4080 + t3014*t4097 + t3293*t713 + t4104*t910)) + 0.0031174510920000003*(t3605*t4047 + t1295*(t3293*t4047 + t3146*t4097 + t3218*t4104 + t3312*t4161 + t4182 + t4185) + t3521*t764 + t3146*(-1.*t1899*t3312 - 1.*t1295*t4097 + t4205 + t4206 - 1.*t3293*t764 - 1.*t4104*t983)))*var2[9] - 0.5*(-6.e-6*t1295 + t4785 + t4790 + 0.158015*t470*(t4968 + t1534*(t5016 - 1.*t3146*t5053 - 1.*t3218*t5076) + t3146*(t1534*t5053 + t1133*t5076 + t5095 + t5098 + t5116 + t5122)) + 0.158015*t318*(t5150 + t1311*(t3146*t5053 + t3218*t5076 + t5161) + t3146*(-1.*t1311*t5053 - 1.*t1040*t5076 + t5201 + t5202 + t5215 + t5217)) - 0.029427012384*(t1295*t3409 + t3014*(t4841 - 1.*t3146*t4867 - 1.*t3218*t4891) + t3146*(t1295*t3293 + t3014*t4867 + t4899 + t4900 + t4891*t910 + t3312*t983)) + 0.0031174510920000003*(t1264*t3521 + t1295*(t3146*t4867 + t3218*t4891 + t4936) + t3146*(-1.*t1264*t3293 - 1.*t2267*t3312 - 1.*t1295*t4867 + t4944 + t4947 - 1.*t4891*t983)))*var2[10] - 0.5*(0.158015*t1530*(t1311*t3874 + t3146*t3926) + 0.158015*t1510*(t1534*t3979 + t3146*t4031) + t4785 + t4790 + 0.158015*t470*(t4968 + t1534*(t5313 - 1.*t3146*t5324 - 1.*t3218*t5345) + t3146*(t5098 + t5116 + t5122 + t1534*t5324 + t1133*t5345 + t5363)) + 0.158015*t318*(t5150 + t1311*(t3146*t5324 + t3218*t5345 + t5386) + t3146*(t5201 + t5215 + t5217 - 1.*t1311*t5324 - 1.*t1040*t5345 + t5409)))*var2[11]);
  p_output1[4]=var2[10]*(-0.5*(1.e-6*t1022 - 0.000029*t1094 - 0.008769*t133*t701 + 0.158015*t318*(t1022*t5667 + t55*(-1.*t1022*t3769 + t3885 + t3886 - 1.*t3823*t558)*t701 - 1.*t133*t5715*t701 + t2197*(t3758 + t3790 - 1.*t133*t3769*t701 - 1.*t3823*t55*t701)) + 0.158015*t470*(t1094*t5742 + (t1094*t3769 + t3991 + t3992 + t3823*t402)*t55*t701 - 1.*t133*t5840*t701 + t2216*(t3938 + t3943 + t133*t3769*t701 + t3823*t55*t701)) - 6.e-6*t890 - 0.029427012384*(-1.*t133*t5550*t701 + t2077*(t3204 + t133*t3173*t701) + t5494*t890 + t55*t701*(t215*t3129 + t3332 + t3333 + t3173*t890)) + 0.0031174510920000003*(-1.*t133*t5658*t701 + t2152*(t3496 - 1.*t133*t3173*t701) + t5597*t948 + t55*t701*(-1.*t167*t3129 + t3529 + t3530 - 1.*t3173*t948)))*var2[5] - 0.5*(-0.008769*t55*t68 + 6.e-6*t128*t55*t701 + 0.000029*t337*t55*t701 - 1.e-6*t502*t55*t701 + 0.158015*t470*(-1.*t55*t5840*t68 - 1.*t337*t55*t5742*t701 + t55*t701*(-1.*t1094*t133*t4247 + t4394 + t4396 + t5815 - 1.*t337*t3811*t68 + t133*t337*t3823*t701) + t2216*(t4378 + t4381 + t5790 - 1.*t133*t3823*t68 - 1.*t3811*t701 - 1.*t4247*t5500*t701)) + 0.158015*t318*(-1.*t55*t5715*t68 - 1.*t502*t55*t5667*t701 + t55*t701*(t1022*t133*t4247 + t4343 + t4347 + t5683 + t3811*t502*t68 - 1.*t133*t3823*t502*t701) + t2197*(t4253 + t4331 + t5674 + t133*t3823*t68 + t3811*t701 + t4247*t5500*t701)) - 0.029427012384*(-1.*t55*t5550*t68 - 1.*t128*t5494*t55*t701 + t2077*(t4136 + t4156 + t5497 + t5499 - 1.*t133*t3129*t68 - 1.*t4079*t5500*t701) + t55*t701*(t4074 + t4080 + t5526 + t5527 + t128*t133*t3129*t701 - 1.*t133*t4079*t890)) + 0.0031174510920000003*(-1.*t55*t5658*t68 + t2152*(t4182 + t4185 + t5606 + t5609 + t133*t3129*t68 + t4079*t5500*t701) + t55*t5597*t701*t96 + t55*t701*(t4205 + t4206 + t5629 + t5633 + t133*t4079*t948 + t133*t3129*t701*t96)))*var2[9] - 0.5*(-6.e-6*t2152 + t6054 + t6055 + 0.158015*t470*(t6145 + t55*(t1094*t5045 + t5095 + t5098 + t6150 + t6151 + t6152)*t701 + t2216*(t5016 + t133*t5045*t701 - 1.*t4985*t68*t701)) + 0.158015*t318*(t6183 + t55*(-1.*t1022*t5045 + t5201 + t5202 + t6185 + t6189 + t6193)*t701 + t2197*(t5161 - 1.*t133*t5045*t701 + t4985*t68*t701)) - 0.029427012384*(t2152*t5494 + t2077*(t4841 + t133*t4859*t701 - 1.*t4831*t68*t701) + t55*t701*(t4899 + t4900 + t6069 + t6074 + t4859*t890 + t3129*t948)) + 0.0031174510920000003*(t215*t5597 + t2152*(t4936 - 1.*t133*t4859*t701 + t4831*t68*t701) + t55*t701*(-1.*t1226*t3129 + t4944 + t4947 + t5546 + t6098 - 1.*t4859*t948)))*var2[10] - 0.5*(t6054 + t6055 + 0.158015*t1530*(t2197*t5667 + t55*t5715*t701) + 0.158015*t1510*(t2216*t5742 + t55*t5840*t701) + 0.158015*t470*(t6145 + t55*(t5098 + t1094*t5320 + t5363 + t6150 + t6152 + t6256)*t701 + t2216*(t5313 + t133*t5320*t701 - 1.*t5294*t68*t701)) + 0.158015*t318*(t6183 + t55*(t5201 - 1.*t1022*t5320 + t5409 + t6189 + t6193 + t6295)*t701 + t2197*(t5386 - 1.*t133*t5320*t701 + t5294*t68*t701)))*var2[11]);
  p_output1[5]=var2[10]*(-0.5*(6.e-6*t128*t68 + 0.000029*t337*t68 - 1.e-6*t502*t68 + 0.008769*t701 - 0.029427012384*(-1.*t128*t6411*t68 + (t5546 + t6429 + t6430)*t701 + t68*(t5526 + t5527 - 1.*t128*t4079*t68 - 1.*t128*t3127*t701) + t128*t701*(t5497 + t5499 + t3127*t68 - 1.*t4079*t701)) + 0.158015*t470*(-1.*t337*t6458*t68 + t6494*t701 + t68*(t5815 - 1.*t337*t4247*t68 - 1.*t337*t6454*t68 - 1.*t337*t3739*t701) + t337*t701*(t5790 + t3739*t68 - 1.*t4247*t701 - 1.*t6454*t701)) + 0.158015*t318*(-1.*t502*t6510*t68 + t6573*t701 + t68*(t5683 + t4247*t502*t68 + t502*t6454*t68 + t3739*t502*t701) + t502*t701*(t5674 - 1.*t3739*t68 + t4247*t701 + t6454*t701)) + 0.0031174510920000003*(t6335*t68*t96 - 1.*t701*(t5606 + t5609 - 1.*t3127*t68 + t4079*t701)*t96 + t701*(-1.*t128*t3058 + t5655 - 1.*t3127*t68*t96) + t68*(t5629 + t5633 - 1.*t4079*t68*t96 - 1.*t3127*t701*t96)))*var2[9] - 0.5*(t6653 + t6657 + 0.158015*t470*(t6660 + (t377*t4998 + t6151 + t337*t4985*t6596 + t6675 + t6682 + t6690)*t68) + 0.158015*t318*(t6703 + (-1.*t337*t4998 + t6185 - 1.*t4985*t502*t6596 + t6705 + t6707 + t6708)*t68) + 6.e-6*t701*t96 + 0.0031174510920000003*(-1.*t128*t6335*t701 + t68*(-1.*t128*t3119 + t5546 + t6098 + t6429 + t6430 + t4831*t6596*t96)) - 0.029427012384*(-1.*t6411*t701*t96 + t68*(t128*t3058 + t6069 + t6074 + t128*t4831*t6596 + t3119*t96 + t3127*t68*t96)))*var2[10] - 0.5*(t6653 + t6657 + 0.158015*t470*(t6660 + (t377*t5307 + t6256 + t337*t5294*t6596 + t6675 + t6682 + t6690)*t68) + 0.158015*t318*(t6703 + (-1.*t337*t5307 + t6295 - 1.*t502*t5294*t6596 + t6705 + t6707 + t6708)*t68) + 0.158015*t1510*(t6494*t68 + t337*t6458*t701) + 0.158015*t1530*(t6573*t68 + t502*t6510*t701))*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*(0.0017906073870803524*t128 + t6793 + t6794 + t6795 + t6804 - 0.00019032974151987603*t96)*var2[10] - 0.5*(0.158015*t1530*(0. + 0.081307*t337) + 0.158015*t1510*(0. - 0.128057*t377 - 0.04675*t502) + t6793 + t6794 + t6795 + t6804)*var2[11]);
  p_output1[10]=-0.5*(0.31603*t1530*t318 + 0.31603*t1510*t470)*var2[10]*var2[11];
  p_output1[11]=-0.5*(-0.019320336034999996*t1510 - 0.0009932822900000022*t1530)*var2[10]*var2[11];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec11_go1_description.hh"

namespace SymFunction
{

void Ce1_vec11_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
