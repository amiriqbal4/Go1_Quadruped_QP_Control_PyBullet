/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:28:43 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t102;
  double t69;
  double t77;
  double t110;
  double t96;
  double t138;
  double t154;
  double t50;
  double t159;
  double t179;
  double t187;
  double t291;
  double t372;
  double t378;
  double t381;
  double t292;
  double t528;
  double t531;
  double t170;
  double t226;
  double t242;
  double t247;
  double t287;
  double t302;
  double t308;
  double t322;
  double t327;
  double t533;
  double t561;
  double t567;
  double t577;
  double t600;
  double t614;
  double t617;
  double t634;
  double t731;
  double t741;
  double t691;
  double t702;
  double t715;
  double t775;
  double t787;
  double t790;
  double t410;
  double t425;
  double t427;
  double t430;
  double t437;
  double t482;
  double t809;
  double t825;
  double t827;
  double t972;
  double t974;
  double t983;
  double t991;
  double t917;
  double t933;
  double t941;
  double t942;
  double t946;
  double t954;
  double t1092;
  double t1095;
  double t1115;
  double t1040;
  double t1044;
  double t1056;
  double t804;
  double t839;
  double t850;
  double t855;
  double t858;
  double t861;
  double t969;
  double t1334;
  double t1336;
  double t1337;
  double t1350;
  double t1353;
  double t1359;
  double t1367;
  double t1390;
  double t1399;
  double t1013;
  double t1064;
  double t1091;
  double t1126;
  double t1479;
  double t1481;
  double t1133;
  double t1250;
  double t1252;
  double t1255;
  double t1475;
  double t1477;
  double t1437;
  double t1449;
  double t1583;
  double t1585;
  double t1589;
  double t1615;
  double t1618;
  double t1622;
  double t1889;
  double t1893;
  double t1895;
  double t1910;
  double t1913;
  double t1929;
  double t1934;
  double t1958;
  double t1968;
  double t1985;
  double t1986;
  double t2143;
  double t2148;
  double t2152;
  double t2008;
  double t2031;
  double t2036;
  double t2040;
  double t2049;
  double t2052;
  double t2083;
  double t2091;
  double t2093;
  double t2110;
  double t2111;
  double t2115;
  double t2210;
  double t2218;
  double t2224;
  double t2225;
  double t2231;
  double t2240;
  double t2244;
  double t2313;
  double t2328;
  double t2329;
  double t2371;
  double t1657;
  double t2462;
  double t2464;
  double t2466;
  double t2417;
  double t2433;
  double t2438;
  double t2213;
  double t2229;
  double t2245;
  double t2249;
  double t1721;
  double t2495;
  double t2499;
  double t2517;
  double t2255;
  double t1480;
  double t2257;
  double t2265;
  double t1527;
  double t2786;
  double t2797;
  double t2806;
  double t2829;
  double t2844;
  double t2845;
  double t2812;
  double t2820;
  double t2828;
  double t2381;
  double t2940;
  double t2963;
  double t2974;
  double t2467;
  double t2507;
  double t3043;
  double t3044;
  double t3046;
  double t3056;
  double t3059;
  double t3063;
  double t2811;
  double t2847;
  double t2856;
  double t2553;
  double t2573;
  double t2581;
  double t3080;
  double t3085;
  double t2642;
  double t2685;
  double t2881;
  double t2885;
  double t2709;
  double t2738;
  double t2180;
  double t2181;
  double t2189;
  double t524;
  double t581;
  double t670;
  double t671;
  double t676;
  double t690;
  double t722;
  double t729;
  double t756;
  double t767;
  double t784;
  double t795;
  double t802;
  double t2169;
  double t2174;
  double t2175;
  double t879;
  double t995;
  double t996;
  double t1005;
  double t1009;
  double t1015;
  double t1016;
  double t1018;
  double t1116;
  double t1118;
  double t1123;
  double t1127;
  double t1134;
  double t1159;
  double t1178;
  double t1234;
  double t1266;
  double t1286;
  double t1297;
  double t1300;
  double t1302;
  double t1317;
  double t1320;
  double t1323;
  double t1348;
  double t1403;
  double t1413;
  double t1422;
  double t1460;
  double t1466;
  double t1485;
  double t1489;
  double t1511;
  double t1535;
  double t1537;
  double t1540;
  double t1550;
  double t1553;
  double t1561;
  double t3363;
  double t3365;
  double t3376;
  double t1594;
  double t1596;
  double t1603;
  double t1606;
  double t1638;
  double t1645;
  double t1678;
  double t1682;
  double t1684;
  double t1688;
  double t1706;
  double t1713;
  double t1730;
  double t1760;
  double t1767;
  double t1776;
  double t1780;
  double t1784;
  double t1789;
  double t1792;
  double t1794;
  double t1799;
  double t1813;
  double t1816;
  double t1817;
  double t1821;
  double t2157;
  double t2167;
  double t2179;
  double t2191;
  double t2195;
  double t2037;
  double t2070;
  double t2076;
  double t2103;
  double t2117;
  double t2124;
  double t2250;
  double t2268;
  double t2274;
  double t2301;
  double t2404;
  double t2411;
  double t2455;
  double t2469;
  double t2490;
  double t2519;
  double t2520;
  double t2526;
  double t2527;
  double t2372;
  double t2379;
  double t2386;
  double t2390;
  double t2391;
  double t2396;
  double t2539;
  double t2545;
  double t2548;
  double t2562;
  double t2563;
  double t2566;
  double t2577;
  double t2591;
  double t2592;
  double t2603;
  double t2605;
  double t2628;
  double t2630;
  double t2633;
  double t2664;
  double t2669;
  double t2672;
  double t2691;
  double t2700;
  double t2704;
  double t2705;
  double t2737;
  double t2741;
  double t2747;
  double t2752;
  double t2755;
  double t2867;
  double t2908;
  double t2910;
  double t2917;
  double t2979;
  double t2983;
  double t2985;
  double t2988;
  double t2992;
  double t3004;
  double t3034;
  double t3051;
  double t3065;
  double t3073;
  double t3074;
  double t3097;
  double t3098;
  double t3104;
  double t3107;
  double t3112;
  double t3123;
  double t3128;
  double t3129;
  double t3135;
  double t3142;
  double t3152;
  double t3153;
  double t3161;
  double t3162;
  double t3164;
  double t3176;
  double t3185;
  double t3210;
  double t3211;
  double t3214;
  double t3218;
  double t3221;
  double t3226;
  double t3227;
  double t3228;
  double t3229;
  double t3236;
  double t3244;
  double t3268;
  double t3272;
  double t3273;
  double t3276;
  double t3277;
  double t3278;
  double t3605;
  double t3608;
  double t3610;
  double t1992;
  double t2002;
  double t2077;
  double t2129;
  double t2138;
  double t3437;
  double t3438;
  double t3442;
  double t3447;
  double t3449;
  double t3830;
  double t3834;
  double t3956;
  double t3933;
  double t3934;
  double t3940;
  double t3942;
  double t3952;
  double t3965;
  double t3983;
  double t4016;
  double t4024;
  double t4028;
  double t4066;
  double t4072;
  double t4079;
  double t4080;
  double t4082;
  double t2928;
  double t3008;
  double t3119;
  double t3208;
  double t3279;
  double t3286;
  double t3784;
  double t3785;
  double t3789;
  double t3792;
  double t3810;
  double t3816;
  double t3499;
  double t3501;
  double t3503;
  double t3509;
  double t3511;
  double t3518;
  double t4057;
  double t4488;
  double t4489;
  double t4557;
  double t4347;
  double t4349;
  double t4351;
  double t4143;
  double t4145;
  double t4146;
  double t4554;
  double t4573;
  double t4585;
  double t4587;
  double t4592;
  double t4637;
  double t4638;
  double t4642;
  double t4662;
  double t4665;
  double t4666;
  double t4671;
  double t4231;
  double t4233;
  double t4248;
  double t2311;
  double t2399;
  double t2536;
  double t2626;
  double t2757;
  double t2762;
  double t3726;
  double t3727;
  double t3731;
  double t3748;
  double t3753;
  double t3763;
  double t3482;
  double t3483;
  double t3485;
  double t3488;
  double t3492;
  double t3496;
  double t4627;
  double t4332;
  double t4334;
  double t4336;
  double t4340;
  double t4346;
  double t4352;
  double t4997;
  double t4999;
  double t5097;
  double t5052;
  double t5058;
  double t5064;
  double t5070;
  double t5078;
  double t5105;
  double t5108;
  double t5134;
  double t5138;
  double t5141;
  double t5154;
  double t5158;
  double t1563;
  double t1608;
  double t1695;
  double t1790;
  double t1842;
  double t1846;
  double t3630;
  double t3634;
  double t3637;
  double t3638;
  double t3639;
  double t3640;
  double t3404;
  double t3406;
  double t3412;
  double t3415;
  double t3420;
  double t3423;
  double t5147;
  double t4675;
  double t4691;
  double t4702;
  double t4706;
  double t4717;
  double t4726;
  double t4076;
  double t4109;
  double t4134;
  double t4135;
  double t4136;
  double t4151;
  double t5411;
  double t5493;
  double t5452;
  double t5243;
  double t5248;
  double t5249;
  double t5252;
  double t5254;
  double t5259;
  double t5487;
  double t5494;
  double t5499;
  double t5500;
  double t5508;
  double t5509;
  double t5515;
  double t5526;
  double t5527;
  double t5536;
  double t1257;
  double t1294;
  double t1305;
  double t1316;
  double t1329;
  double t1332;
  double t3611;
  double t3613;
  double t3616;
  double t3617;
  double t3622;
  double t3628;
  double t3381;
  double t3382;
  double t3392;
  double t3393;
  double t3399;
  double t3401;
  double t5502;
  double t4819;
  double t4829;
  double t4837;
  double t4841;
  double t4843;
  double t4844;
  double t4211;
  double t4213;
  double t4219;
  double t4222;
  double t4223;
  double t4251;
  double t5454;
  double t5456;
  double t5459;
  double t5465;
  double t5467;
  double t5013;
  double t5014;
  double t5017;
  double t5038;
  double t5040;
  double t673;
  double t770;
  double t874;
  double t894;
  double t895;
  double t3584;
  double t3586;
  double t3587;
  double t3588;
  double t3598;
  double t3312;
  double t3324;
  double t3344;
  double t3346;
  double t3348;
  double t4505;
  double t4507;
  double t4519;
  double t4520;
  double t4536;
  double t3880;
  double t3889;
  double t3913;
  double t3920;
  double t3929;
  double t5681;
  double t5683;
  double t5685;
  double t5410;
  double t5413;
  double t5000;
  double t5005;
  double t353;
  double t490;
  double t511;
  double t3568;
  double t3576;
  double t3577;
  double t3301;
  double t3304;
  double t3308;
  double t4491;
  double t4496;
  double t3836;
  double t3838;
  t102 = Cos(var1[13]);
  t69 = Cos(var1[14]);
  t77 = Sin(var1[13]);
  t110 = Sin(var1[14]);
  t96 = -1.*t69*t77;
  t138 = -1.*t102*t110;
  t154 = t96 + t138;
  t50 = Cos(var1[12]);
  t159 = Sin(var1[4]);
  t179 = Cos(var1[4]);
  t187 = Cos(var1[5]);
  t291 = Sin(var1[12]);
  t372 = -1.*t102*t69;
  t378 = t77*t110;
  t381 = t372 + t378;
  t292 = Sin(var1[5]);
  t528 = -1.*t69;
  t531 = 1. + t528;
  t170 = t50*t154*t159;
  t226 = t102*t69;
  t242 = -1.*t77*t110;
  t247 = t226 + t242;
  t287 = t187*t247;
  t302 = t291*t154*t292;
  t308 = t287 + t302;
  t322 = t179*t308;
  t327 = t170 + t322;
  t533 = -0.1881*t531;
  t561 = -0.181814*t69;
  t567 = -0.12226899999999999*t110;
  t577 = t533 + t561 + t567;
  t600 = -0.213*t531;
  t614 = -0.335269*t69;
  t617 = -0.006286*t110;
  t634 = t600 + t614 + t617;
  t731 = -0.12226899999999999*t69;
  t741 = t731 + t617;
  t691 = -0.006286*t69;
  t702 = 0.12226899999999999*t110;
  t715 = t691 + t702;
  t775 = t69*t634;
  t787 = 0.1881*t110;
  t790 = t577*t110;
  t410 = t50*t381*t159;
  t425 = t187*t154;
  t427 = t291*t381*t292;
  t430 = t425 + t427;
  t437 = t179*t430;
  t482 = t410 + t437;
  t809 = t69*t77;
  t825 = t102*t110;
  t827 = t809 + t825;
  t972 = -0.1881*t77;
  t974 = -1.*t77*t577;
  t983 = t102*t634;
  t991 = 0. + t972 + t974 + t983;
  t917 = -1.*t102;
  t933 = 1. + t917;
  t941 = -0.1881*t933;
  t942 = t102*t577;
  t946 = t77*t634;
  t954 = 0. + t941 + t942 + t946;
  t1092 = -1.*t77*t741;
  t1095 = t102*t715;
  t1115 = t1092 + t1095;
  t1040 = t102*t741;
  t1044 = t77*t715;
  t1056 = t1040 + t1044;
  t804 = t50*t247*t159;
  t839 = t187*t827;
  t850 = t291*t247*t292;
  t855 = t839 + t850;
  t858 = t179*t855;
  t861 = t804 + t858;
  t969 = -1.*t954*t827;
  t1334 = -0.078693*t291;
  t1336 = t50*t991;
  t1337 = t1334 + t1336;
  t1350 = -1.*t50;
  t1353 = 1. + t1350;
  t1359 = -0.04675*t1353;
  t1367 = -0.125443*t50;
  t1390 = -1.*t291*t991;
  t1399 = t1359 + t1367 + t1390;
  t1013 = t954*t247;
  t1064 = -1.*t1056*t827;
  t1091 = -1.*t954*t247;
  t1126 = t954*t154;
  t1479 = Power(t50,2);
  t1481 = Power(t291,2);
  t1133 = t1056*t247;
  t1250 = t291*t159;
  t1252 = -1.*t50*t179*t292;
  t1255 = t1250 + t1252;
  t1475 = -1.*t50*t1337*t154;
  t1477 = t291*t1399*t154;
  t1437 = t50*t1337*t154;
  t1449 = -1.*t291*t1399*t154;
  t1583 = t291*t1337;
  t1585 = t50*t1399;
  t1589 = t1583 + t1585;
  t1615 = -1.*t291*t1337;
  t1618 = -1.*t50*t1399;
  t1622 = t1615 + t1618;
  t1889 = Sin(var1[3]);
  t1893 = -1.*t187*t291*t154;
  t1895 = t247*t292;
  t1910 = t1893 + t1895;
  t1913 = t1889*t1910;
  t1929 = Cos(var1[3]);
  t1934 = t50*t179*t154;
  t1958 = -1.*t159*t308;
  t1968 = t1934 + t1958;
  t1985 = t1929*t1968;
  t1986 = t1913 + t1985;
  t2143 = t1929*t1910;
  t2148 = -1.*t1889*t1968;
  t2152 = t2143 + t2148;
  t2008 = -1.*t187*t291*t247;
  t2031 = t827*t292;
  t2036 = t2008 + t2031;
  t2040 = t50*t179*t247;
  t2049 = -1.*t159*t855;
  t2052 = t2040 + t2049;
  t2083 = -1.*t187*t291*t381;
  t2091 = t154*t292;
  t2093 = t2083 + t2091;
  t2110 = t50*t179*t381;
  t2111 = -1.*t159*t430;
  t2115 = t2110 + t2111;
  t2210 = 0. + t1334 + t1336;
  t2218 = t187*t954;
  t2224 = -1.*t1399*t292;
  t2225 = 0. + t2218 + t2224;
  t2231 = t187*t1399;
  t2240 = t954*t292;
  t2244 = 0. + t2231 + t2240;
  t2313 = -1.*t291*t2210;
  t2328 = t50*t292*t2225;
  t2329 = -1.*t50*t187*t2244;
  t2371 = t2313 + t2328 + t2329;
  t1657 = t1479*t1115*t247;
  t2462 = -1.*t187*t291*t1115;
  t2464 = t1056*t292;
  t2466 = t2462 + t2464;
  t2417 = t187*t1056;
  t2433 = t291*t1115*t292;
  t2438 = t2417 + t2433;
  t2213 = t291*t2210;
  t2229 = -1.*t50*t292*t2225;
  t2245 = t50*t187*t2244;
  t2249 = t2213 + t2229 + t2245;
  t1721 = -1.*t1479*t1115*t154;
  t2495 = t50*t2210*t154;
  t2499 = t2225*t308;
  t2517 = t2244*t1910;
  t2255 = -1.*t50*t2210*t154;
  t1480 = -1.*t1479*t1115*t247;
  t2257 = -1.*t2225*t308;
  t2265 = -1.*t2244*t1910;
  t1527 = t1479*t1115*t154;
  t2786 = t2210*t159;
  t2797 = t179*t2225;
  t2806 = 0. + t2786 + t2797;
  t2829 = t179*t2210;
  t2844 = -1.*t159*t2225;
  t2845 = 0. + t2829 + t2844;
  t2812 = t179*t291;
  t2820 = t50*t159*t292;
  t2828 = t2812 + t2820;
  t2381 = t2244*t2036;
  t2940 = -1.*t1255*t2806;
  t2963 = -1.*t2828*t2845;
  t2974 = t2329 + t2940 + t2963;
  t2467 = -1.*t50*t187*t2466;
  t2507 = t2466*t2036;
  t3043 = t50*t1115*t159;
  t3044 = t179*t2438;
  t3046 = t3043 + t3044;
  t3056 = t50*t179*t1115;
  t3059 = -1.*t159*t2438;
  t3063 = t3056 + t3059;
  t2811 = t1255*t2806;
  t2847 = t2828*t2845;
  t2856 = t2245 + t2811 + t2847;
  t2553 = t50*t187*t2466;
  t2573 = -1.*t2244*t2093;
  t2581 = -1.*t2466*t1910;
  t3080 = t2806*t327;
  t3085 = t2845*t1968;
  t2642 = -1.*t2244*t2036;
  t2685 = -1.*t2466*t2036;
  t2881 = -1.*t2806*t327;
  t2885 = -1.*t2845*t1968;
  t2709 = t2244*t2093;
  t2738 = t2466*t1910;
  t2180 = t1929*t2093;
  t2181 = -1.*t1889*t2115;
  t2189 = t2180 + t2181;
  t524 = -0.1881*t69;
  t581 = -1.*t69*t577;
  t670 = t634*t110;
  t671 = 0. + t524 + t581 + t670;
  t676 = 0.1881*t69;
  t690 = t69*t577;
  t722 = t69*t715;
  t729 = -1.*t634*t110;
  t756 = t741*t110;
  t767 = t676 + t690 + t722 + t729 + t756;
  t784 = -1.*t69*t741;
  t795 = t715*t110;
  t802 = t775 + t784 + t787 + t790 + t795;
  t2169 = t1929*t2036;
  t2174 = -1.*t1889*t2052;
  t2175 = t2169 + t2174;
  t879 = 0. + t775 + t787 + t790;
  t995 = -1.*t991*t247;
  t996 = 0. + t969 + t995;
  t1005 = t154*t996;
  t1009 = t991*t154;
  t1015 = 0. + t1009 + t1013;
  t1016 = t247*t1015;
  t1018 = -1.*t991*t154;
  t1116 = -1.*t1115*t247;
  t1118 = t1018 + t1064 + t1091 + t1116;
  t1123 = t247*t1118;
  t1127 = t1115*t154;
  t1134 = t991*t381;
  t1159 = t1126 + t1127 + t1133 + t1134;
  t1178 = t827*t1159;
  t1234 = t1005 + t1016 + t1123 + t1178;
  t1266 = -0.078693*t247;
  t1286 = 0. + t1266;
  t1297 = 0.125443*t247;
  t1300 = 0.04675*t381;
  t1302 = t1297 + t1300;
  t1317 = 0.04675*t154;
  t1320 = 0.125443*t827;
  t1323 = 0. + t1317 + t1320;
  t1348 = -1.*t50*t1337*t247;
  t1403 = t291*t1399*t247;
  t1413 = t969 + t1348 + t1403;
  t1422 = t50*t381*t1413;
  t1460 = t1437 + t1449 + t1013;
  t1466 = t50*t154*t1460;
  t1485 = -1.*t1481*t1115*t247;
  t1489 = t1475 + t1477 + t1064 + t1091 + t1480 + t1485;
  t1511 = t50*t154*t1489;
  t1535 = t1481*t1115*t154;
  t1537 = t50*t1337*t381;
  t1540 = -1.*t291*t1399*t381;
  t1550 = t1126 + t1527 + t1535 + t1133 + t1537 + t1540;
  t1553 = t50*t247*t1550;
  t1561 = t1422 + t1466 + t1511 + t1553;
  t3363 = t50*t1929*t187;
  t3365 = -1.*t1889*t2828;
  t3376 = t3363 + t3365;
  t1594 = t50*t1589*t154;
  t1596 = t1475 + t1477 + t1091;
  t1603 = t291*t1596;
  t1606 = t1594 + t1603;
  t1638 = t50*t1622*t154;
  t1645 = t1056*t827;
  t1678 = t1481*t1115*t247;
  t1682 = t1437 + t1449 + t1645 + t1013 + t1657 + t1678;
  t1684 = t291*t1682;
  t1688 = t1638 + t1684;
  t1706 = t50*t1589*t381;
  t1713 = -1.*t954*t154;
  t1730 = -1.*t1481*t1115*t154;
  t1760 = -1.*t1056*t247;
  t1767 = -1.*t50*t1337*t381;
  t1776 = t291*t1399*t381;
  t1780 = t1713 + t1721 + t1730 + t1760 + t1767 + t1776;
  t1784 = t291*t1780;
  t1789 = t1706 + t1784;
  t1792 = t50*t1622*t247;
  t1794 = t954*t827;
  t1799 = t50*t1337*t247;
  t1813 = -1.*t291*t1399*t247;
  t1816 = t1794 + t1799 + t1813;
  t1817 = t291*t1816;
  t1821 = t1792 + t1817;
  t2157 = 0.158015*t861*t2152;
  t2167 = 0.158015*t482*t2152;
  t2179 = 0.158015*t327*t2175;
  t2191 = 0.158015*t327*t2189;
  t2195 = t2157 + t2167 + t2179 + t2191;
  t2037 = t1889*t2036;
  t2070 = t1929*t2052;
  t2076 = t2037 + t2070;
  t2103 = t1889*t2093;
  t2117 = t1929*t2115;
  t2124 = t2103 + t2117;
  t2250 = t1910*t2249;
  t2268 = t2255 + t2257 + t2265;
  t2274 = t50*t187*t2268;
  t2301 = t2250 + t2274;
  t2404 = t1910*t2371;
  t2411 = -1.*t50*t291*t1115;
  t2455 = t50*t292*t2438;
  t2469 = t2411 + t2455 + t2467;
  t2490 = t2036*t2469;
  t2519 = t2438*t855;
  t2520 = t2495 + t1657 + t2499 + t2507 + t2517 + t2519;
  t2526 = t50*t187*t2520;
  t2527 = t2404 + t2490 + t2526;
  t2372 = t2036*t2371;
  t2379 = t50*t2210*t247;
  t2386 = t2225*t855;
  t2390 = t2379 + t2381 + t2386;
  t2391 = t50*t187*t2390;
  t2396 = t2372 + t2391;
  t2539 = t2093*t2249;
  t2545 = t50*t291*t1115;
  t2548 = -1.*t50*t292*t2438;
  t2562 = t2545 + t2548 + t2553;
  t2563 = t1910*t2562;
  t2566 = -1.*t50*t2210*t381;
  t2577 = -1.*t2438*t308;
  t2591 = -1.*t2225*t430;
  t2592 = t1721 + t2566 + t2573 + t2577 + t2581 + t2591;
  t2603 = t50*t187*t2592;
  t2605 = t2539 + t2563 + t2603;
  t2628 = t2495 + t2499 + t2517;
  t2630 = t1910*t2628;
  t2633 = -1.*t50*t2210*t247;
  t2664 = -1.*t2225*t855;
  t2669 = t2633 + t2642 + t2664;
  t2672 = t2093*t2669;
  t2691 = -1.*t2438*t855;
  t2700 = t2255 + t1480 + t2257 + t2685 + t2265 + t2691;
  t2704 = t1910*t2700;
  t2705 = t50*t2210*t381;
  t2737 = t2438*t308;
  t2741 = t2225*t430;
  t2747 = t1527 + t2705 + t2709 + t2737 + t2738 + t2741;
  t2752 = t2036*t2747;
  t2755 = t2630 + t2672 + t2704 + t2752;
  t2867 = t327*t2856;
  t2908 = t2265 + t2881 + t2885;
  t2910 = t1255*t2908;
  t2917 = t2867 + t2910;
  t2979 = t861*t2974;
  t2983 = t2806*t861;
  t2985 = t2845*t2052;
  t2988 = t2381 + t2983 + t2985;
  t2992 = t1255*t2988;
  t3004 = t2979 + t2992;
  t3034 = t327*t2974;
  t3051 = -1.*t1255*t3046;
  t3065 = -1.*t2828*t3063;
  t3073 = t2467 + t3051 + t3065;
  t3074 = t861*t3073;
  t3097 = t3046*t861;
  t3098 = t3063*t2052;
  t3104 = t2507 + t2517 + t3080 + t3085 + t3097 + t3098;
  t3107 = t1255*t3104;
  t3112 = t3034 + t3074 + t3107;
  t3123 = t482*t2856;
  t3128 = t1255*t3046;
  t3129 = t2828*t3063;
  t3135 = t2553 + t3128 + t3129;
  t3142 = t327*t3135;
  t3152 = -1.*t3046*t327;
  t3153 = -1.*t3063*t1968;
  t3161 = -1.*t2806*t482;
  t3162 = -1.*t2845*t2115;
  t3164 = t2573 + t2581 + t3152 + t3153 + t3161 + t3162;
  t3176 = t1255*t3164;
  t3185 = t3123 + t3142 + t3176;
  t3210 = t2517 + t3080 + t3085;
  t3211 = t327*t3210;
  t3214 = -1.*t2806*t861;
  t3218 = -1.*t2845*t2052;
  t3221 = t2642 + t3214 + t3218;
  t3226 = t482*t3221;
  t3227 = -1.*t3046*t861;
  t3228 = -1.*t3063*t2052;
  t3229 = t2685 + t2265 + t2881 + t2885 + t3227 + t3228;
  t3236 = t327*t3229;
  t3244 = t3046*t327;
  t3268 = t3063*t1968;
  t3272 = t2806*t482;
  t3273 = t2845*t2115;
  t3276 = t2709 + t2738 + t3244 + t3268 + t3272 + t3273;
  t3277 = t861*t3276;
  t3278 = t3211 + t3226 + t3236 + t3277;
  t3605 = t50*t187*t1889;
  t3608 = t1929*t2828;
  t3610 = t3605 + t3608;
  t1992 = 0.158015*t861*t1986;
  t2002 = 0.158015*t482*t1986;
  t2077 = 0.158015*t327*t2076;
  t2129 = 0.158015*t327*t2124;
  t2138 = t1992 + t2002 + t2077 + t2129;
  t3437 = 0.158015*t2152*t2076;
  t3438 = 0.158015*t1986*t2175;
  t3442 = 0.158015*t2152*t2124;
  t3447 = 0.158015*t1986*t2189;
  t3449 = t3437 + t3438 + t3442 + t3447;
  t3830 = -0.000029*t327;
  t3834 = 1.e-6*t482;
  t3956 = -0.000133*t327;
  t3933 = 1.e-6*t1255;
  t3934 = 0.003608*t327;
  t3940 = -0.000133*t861;
  t3942 = t3933 + t3934 + t3940;
  t3952 = -0.000029*t1255;
  t3965 = 0.000035*t861;
  t3983 = t3952 + t3956 + t3965;
  t4016 = 0.000035*t327;
  t4024 = -0.000133*t482;
  t4028 = t4016 + t4024;
  t4066 = 0.003608*t482;
  t4072 = t3956 + t4066;
  t4079 = t861*t3210;
  t4080 = t327*t3221;
  t4082 = t4079 + t4080;
  t2928 = 0.158015*t327*t2917;
  t3008 = 0.158015*t482*t3004;
  t3119 = 0.158015*t327*t3112;
  t3208 = 0.158015*t861*t3185;
  t3279 = 0.158015*t1255*t3278;
  t3286 = t2928 + t3008 + t3119 + t3208 + t3279;
  t3784 = 0.158015*t1986*t2917;
  t3785 = 0.158015*t2124*t3004;
  t3789 = 0.158015*t1986*t3112;
  t3792 = 0.158015*t2076*t3185;
  t3810 = 0.158015*t3610*t3278;
  t3816 = t3784 + t3785 + t3789 + t3792 + t3810;
  t3499 = 0.158015*t2152*t2917;
  t3501 = 0.158015*t2189*t3004;
  t3503 = 0.158015*t2152*t3112;
  t3509 = 0.158015*t2175*t3185;
  t3511 = 0.158015*t3376*t3278;
  t3518 = t3499 + t3501 + t3503 + t3509 + t3511;
  t4057 = t3830 + t3834;
  t4488 = 1.e-6*t2093;
  t4489 = -0.000029*t1910;
  t4557 = -0.000133*t1910;
  t4347 = t2036*t2628;
  t4349 = t1910*t2669;
  t4351 = t4347 + t4349;
  t4143 = t50*t154*t1413;
  t4145 = t50*t247*t1460;
  t4146 = t4143 + t4145;
  t4554 = 0.003608*t2093;
  t4573 = t4554 + t4557;
  t4585 = -0.000029*t50*t187;
  t4587 = 0.000035*t2036;
  t4592 = t4585 + t4587 + t4557;
  t4637 = -0.000133*t2093;
  t4638 = 0.000035*t1910;
  t4642 = t4637 + t4638;
  t4662 = 1.e-6*t50*t187;
  t4665 = -0.000133*t2036;
  t4666 = 0.003608*t1910;
  t4671 = t4662 + t4665 + t4666;
  t4231 = t247*t996;
  t4233 = t827*t1015;
  t4248 = t4231 + t4233;
  t2311 = 0.158015*t327*t2301;
  t2399 = 0.158015*t482*t2396;
  t2536 = 0.158015*t327*t2527;
  t2626 = 0.158015*t861*t2605;
  t2757 = 0.158015*t1255*t2755;
  t2762 = t2311 + t2399 + t2536 + t2626 + t2757;
  t3726 = 0.158015*t1986*t2301;
  t3727 = 0.158015*t1986*t2527;
  t3731 = 0.158015*t2396*t2124;
  t3748 = 0.158015*t2076*t2605;
  t3753 = 0.158015*t3610*t2755;
  t3763 = t3726 + t3727 + t3731 + t3748 + t3753;
  t3482 = 0.158015*t2152*t2301;
  t3483 = 0.158015*t2152*t2527;
  t3485 = 0.158015*t2396*t2189;
  t3488 = 0.158015*t2175*t2605;
  t3492 = 0.158015*t3376*t2755;
  t3496 = t3482 + t3483 + t3485 + t3488 + t3492;
  t4627 = t4488 + t4489;
  t4332 = 0.158015*t2605*t2917;
  t4334 = 0.158015*t2755*t4082;
  t4336 = 0.158015*t2527*t3004;
  t4340 = 0.158015*t2396*t3112;
  t4346 = 0.158015*t2301*t3185;
  t4352 = 0.158015*t4351*t3278;
  t4997 = -0.000029*t50*t154;
  t4999 = 1.e-6*t50*t381;
  t5097 = -0.000133*t50*t154;
  t5052 = 1.e-6*t291;
  t5058 = 0.003608*t50*t154;
  t5064 = -0.000133*t50*t247;
  t5070 = t5052 + t5058 + t5064;
  t5078 = -0.000029*t291;
  t5105 = 0.000035*t50*t247;
  t5108 = t5078 + t5097 + t5105;
  t5134 = 0.000035*t50*t154;
  t5138 = -0.000133*t50*t381;
  t5141 = t5134 + t5138;
  t5154 = 0.003608*t50*t381;
  t5158 = t5097 + t5154;
  t1563 = 0.158015*t1561*t1255;
  t1608 = 0.158015*t1606*t327;
  t1695 = 0.158015*t1688*t327;
  t1790 = 0.158015*t1789*t861;
  t1842 = 0.158015*t1821*t482;
  t1846 = t1563 + t1608 + t1695 + t1790 + t1842;
  t3630 = 0.158015*t1561*t3610;
  t3634 = 0.158015*t1606*t1986;
  t3637 = 0.158015*t1688*t1986;
  t3638 = 0.158015*t1789*t2076;
  t3639 = 0.158015*t1821*t2124;
  t3640 = t3630 + t3634 + t3637 + t3638 + t3639;
  t3404 = 0.158015*t1561*t3376;
  t3406 = 0.158015*t1606*t2152;
  t3412 = 0.158015*t1688*t2152;
  t3415 = 0.158015*t1789*t2175;
  t3420 = 0.158015*t1821*t2189;
  t3423 = t3404 + t3406 + t3412 + t3415 + t3420;
  t5147 = t4997 + t4999;
  t4675 = 0.158015*t1789*t2301;
  t4691 = 0.158015*t1561*t4351;
  t4702 = 0.158015*t1688*t2396;
  t4706 = 0.158015*t1821*t2527;
  t4717 = 0.158015*t1606*t2605;
  t4726 = 0.158015*t4146*t2755;
  t4076 = 0.158015*t1789*t2917;
  t4109 = 0.158015*t1561*t4082;
  t4134 = 0.158015*t1688*t3004;
  t4135 = 0.158015*t1821*t3112;
  t4136 = 0.158015*t1606*t3185;
  t4151 = 0.158015*t4146*t3278;
  t5411 = -0.000029*t247;
  t5493 = -0.000133*t247;
  t5452 = 1.e-6*t154;
  t5243 = 0.158015*t1302*t1821;
  t5248 = -0.012434674395*t154*t1606;
  t5249 = 0.158015*t1323*t1688;
  t5252 = 0.158015*t4248*t1561;
  t5254 = 0.158015*t1286*t1789;
  t5259 = 0.158015*t4146*t1234;
  t5487 = 0.003608*t154;
  t5494 = t5487 + t5493;
  t5499 = 0.000035*t827;
  t5500 = t5499 + t5493;
  t5508 = -0.000133*t154;
  t5509 = 0.000035*t247;
  t5515 = t5508 + t5509;
  t5526 = -0.000133*t827;
  t5527 = 0.003608*t247;
  t5536 = t5526 + t5527;
  t1257 = 0.158015*t1234*t1255;
  t1294 = 0.158015*t1286*t327;
  t1305 = 0.158015*t1302*t327;
  t1316 = -0.012434674395*t154*t861;
  t1329 = 0.158015*t1323*t482;
  t1332 = t1257 + t1294 + t1305 + t1316 + t1329;
  t3611 = 0.158015*t1234*t3610;
  t3613 = 0.158015*t1286*t1986;
  t3616 = 0.158015*t1302*t1986;
  t3617 = -0.012434674395*t154*t2076;
  t3622 = 0.158015*t1323*t2124;
  t3628 = t3611 + t3613 + t3616 + t3617 + t3622;
  t3381 = 0.158015*t1234*t3376;
  t3382 = 0.158015*t1286*t2152;
  t3392 = 0.158015*t1302*t2152;
  t3393 = -0.012434674395*t154*t2175;
  t3399 = 0.158015*t1323*t2189;
  t3401 = t3381 + t3382 + t3392 + t3393 + t3399;
  t5502 = t5452 + t5411;
  t4819 = -0.012434674395*t154*t2301;
  t4829 = 0.158015*t1234*t4351;
  t4837 = 0.158015*t1302*t2396;
  t4841 = 0.158015*t1323*t2527;
  t4843 = 0.158015*t1286*t2605;
  t4844 = 0.158015*t4248*t2755;
  t4211 = -0.012434674395*t154*t2917;
  t4213 = 0.158015*t1234*t4082;
  t4219 = 0.158015*t1302*t3004;
  t4222 = 0.158015*t1323*t3112;
  t4223 = 0.158015*t1286*t3185;
  t4251 = 0.158015*t4248*t3278;
  t5454 = -0.012434674395*t154*t671;
  t5456 = 0.158015*t767*t1323;
  t5459 = 0.158015*t802*t1286;
  t5465 = 0.158015*t879*t1302;
  t5467 = t5452 + t5411 + t5454 + t5456 + t5459 + t5465;
  t5013 = 0.158015*t767*t1821;
  t5014 = 0.158015*t802*t1606;
  t5017 = 0.158015*t879*t1688;
  t5038 = 0.158015*t671*t1789;
  t5040 = t4997 + t4999 + t5013 + t5014 + t5017 + t5038;
  t673 = 0.158015*t671*t327;
  t770 = 0.158015*t767*t327;
  t874 = 0.158015*t802*t861;
  t894 = 0.158015*t879*t482;
  t895 = t673 + t770 + t874 + t894;
  t3584 = 0.158015*t671*t1986;
  t3586 = 0.158015*t767*t1986;
  t3587 = 0.158015*t802*t2076;
  t3588 = 0.158015*t879*t2124;
  t3598 = t3584 + t3586 + t3587 + t3588;
  t3312 = 0.158015*t671*t2152;
  t3324 = 0.158015*t767*t2152;
  t3344 = 0.158015*t802*t2175;
  t3346 = 0.158015*t879*t2189;
  t3348 = t3312 + t3324 + t3344 + t3346;
  t4505 = 0.158015*t802*t2301;
  t4507 = 0.158015*t767*t2396;
  t4519 = 0.158015*t879*t2527;
  t4520 = 0.158015*t671*t2605;
  t4536 = t4488 + t4489 + t4505 + t4507 + t4519 + t4520;
  t3880 = 0.158015*t802*t2917;
  t3889 = 0.158015*t767*t3004;
  t3913 = 0.158015*t879*t3112;
  t3920 = 0.158015*t671*t3185;
  t3929 = t3830 + t3834 + t3880 + t3889 + t3913 + t3920;
  t5681 = -0.019320336034999996*t767;
  t5683 = -0.0009932822899999978*t802;
  t5685 = t5681 + t5683;
  t5410 = 0.00007916436324696982*t154;
  t5413 = -0.019320336034999996*t1302;
  t5000 = -0.019320336034999996*t1688;
  t5005 = -0.0009932822899999978*t1789;
  t353 = -0.0009932822899999978*t327;
  t490 = -0.019320336034999996*t482;
  t511 = t353 + t490;
  t3568 = -0.0009932822899999978*t1986;
  t3576 = -0.019320336034999996*t2124;
  t3577 = t3568 + t3576;
  t3301 = -0.0009932822899999978*t2152;
  t3304 = -0.019320336034999996*t2189;
  t3308 = t3301 + t3304;
  t4491 = -0.019320336034999996*t2527;
  t4496 = -0.0009932822899999978*t2605;
  t3836 = -0.019320336034999996*t3112;
  t3838 = -0.0009932822899999978*t3185;
  p_output1[0]=var2[14]*(-0.5*(0.31603*t327*t482 + 0.31603*t327*t861)*var2[0] - 0.5*t2195*var2[1] - 0.5*t2138*var2[2] - 0.5*t3286*var2[3] - 0.5*t2762*var2[4] - 0.5*t1846*var2[5] - 0.5*t1332*var2[12] - 0.5*t895*var2[13] - 0.5*t511*var2[14]);
  p_output1[1]=var2[14]*(-0.5*t2195*var2[0] - 0.5*(0.31603*t2152*t2175 + 0.31603*t2152*t2189)*var2[1] - 0.5*t3449*var2[2] - 0.5*t3518*var2[3] - 0.5*t3496*var2[4] - 0.5*t3423*var2[5] - 0.5*t3401*var2[12] - 0.5*t3348*var2[13] - 0.5*t3308*var2[14]);
  p_output1[2]=var2[14]*(-0.5*t2138*var2[0] - 0.5*t3449*var2[1] - 0.5*(0.31603*t1986*t2076 + 0.31603*t1986*t2124)*var2[2] - 0.5*t3816*var2[3] - 0.5*t3763*var2[4] - 0.5*t3640*var2[5] - 0.5*t3628*var2[12] - 0.5*t3598*var2[13] - 0.5*t3577*var2[14]);
  p_output1[3]=var2[14]*(-0.5*t3286*var2[0] - 0.5*t3518*var2[1] - 0.5*t3816*var2[2] - 0.5*(0.31603*t3004*t3112 + 0.31603*t2917*t3185 + t327*t3983 + t1255*t4057 + t327*t4072 + 0.31603*t3278*t4082 + t3942*t482 + t4028*t861)*var2[3] - 0.5*(t2093*t3942 + t1910*t3983 + t2036*t4028 + t1910*t4072 + t4332 + t4334 + t4336 + t4340 + t4346 + t4352 + t187*t4057*t50)*var2[4] - 0.5*(t291*t4057 + t4076 + t4109 + t4134 + t4135 + t4136 + t4151 + t381*t3942*t50 + t154*t3983*t50 + t247*t4028*t50 + t154*t4072*t50)*var2[5] - 0.5*(t154*t3942 + t247*t3983 + t247*t4072 + t4211 + t4213 + t4219 + t4222 + t4223 + t4251 + t4028*t827)*var2[12] - 0.5*t3929*var2[13] - 0.5*(t3830 + t3834 + t3836 + t3838)*var2[14]);
  p_output1[4]=var2[14]*(-0.5*t2762*var2[0] - 0.5*t3496*var2[1] - 0.5*t3763*var2[2] - 0.5*(t4332 + t4334 + t4336 + t4340 + t4346 + t4352 + t327*t4573 + t327*t4592 + t1255*t4627 + t4671*t482 + t4642*t861)*var2[3] - 0.5*(0.31603*t2396*t2527 + 0.31603*t2301*t2605 + 0.31603*t2755*t4351 + t1910*t4573 + t1910*t4592 + t2036*t4642 + t2093*t4671 + t187*t4627*t50)*var2[4] - 0.5*(t291*t4627 + t4675 + t4691 + t4702 + t4706 + t4717 + t4726 + t154*t4573*t50 + t154*t4592*t50 + t247*t4642*t50 + t381*t4671*t50)*var2[5] - 0.5*(t247*t4573 + t247*t4592 + t154*t4671 + t4819 + t4829 + t4837 + t4841 + t4843 + t4844 + t4642*t827)*var2[12] - 0.5*t4536*var2[13] - 0.5*(t4488 + t4489 + t4491 + t4496)*var2[14]);
  p_output1[5]=var2[14]*(-0.5*t1846*var2[0] - 0.5*t3423*var2[1] - 0.5*t3640*var2[2] - 0.5*(t4076 + t4109 + t4134 + t4135 + t4136 + t4151 + t482*t5070 + t327*t5108 + t1255*t5147 + t327*t5158 + t5141*t861)*var2[3] - 0.5*(t4675 + t4691 + t4702 + t4706 + t4717 + t4726 + t2093*t5070 + t1910*t5108 + t2036*t5141 + t187*t50*t5147 + t1910*t5158)*var2[4] - 0.5*(0.31603*t1606*t1789 + 0.31603*t1688*t1821 + 0.31603*t1561*t4146 + t381*t50*t5070 + t154*t50*t5108 + t247*t50*t5141 + t291*t5147 + t154*t50*t5158)*var2[5] - 0.5*(t154*t5070 + t247*t5108 + t247*t5158 + t5243 + t5248 + t5249 + t5252 + t5254 + t5259 + t5141*t827)*var2[12] - 0.5*t5040*var2[13] - 0.5*(t4997 + t4999 + t5000 + t5005)*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[14]*(-0.5*t1332*var2[0] - 0.5*t3401*var2[1] - 0.5*t3628*var2[2] - 0.5*(t4211 + t4213 + t4219 + t4222 + t4223 + t4251 + t327*t5494 + t327*t5500 + t1255*t5502 + t482*t5536 + t5515*t861)*var2[3] - 0.5*(t4819 + t4829 + t4837 + t4841 + t4843 + t4844 + t1910*t5494 + t1910*t5500 + t187*t50*t5502 + t2036*t5515 + t2093*t5536)*var2[4] - 0.5*(t5243 + t5248 + t5249 + t5252 + t5254 + t5259 + t154*t50*t5494 + t154*t50*t5500 + t291*t5502 + t247*t50*t5515 + t381*t50*t5536)*var2[5] - 0.5*(0.31603*t1302*t1323 - 0.02486934879*t1286*t154 + 0.31603*t1234*t4248 + t247*t5494 + t247*t5500 + t154*t5536 + t5515*t827)*var2[12] - 0.5*t5467*var2[13] - 0.5*(t5410 + t5411 + t5413)*var2[14]);
  p_output1[13]=var2[14]*(-0.5*t895*var2[0] - 0.5*t3348*var2[1] - 0.5*t3598*var2[2] - 0.5*t3929*var2[3] - 0.5*t4536*var2[4] - 0.5*t5040*var2[5] - 0.5*t5467*var2[12] - 0.5*(0.31603*t671*t802 + 0.31603*t767*t879)*var2[13] - 0.5*t5685*var2[14]);
  p_output1[14]=(-0.5*t511*var2[0] - 0.5*t3308*var2[1] - 0.5*t3577*var2[2] - 0.5*(-0.000029*t327 + t3836 + t3838 + 1.e-6*t482)*var2[3] - 0.5*(-0.000029*t1910 + 1.e-6*t2093 + t4491 + t4496)*var2[4] - 0.5*(-0.000029*t154*t50 + 1.e-6*t381*t50 + t5000 + t5005)*var2[5] - 0.5*(-0.000029*t247 + t5410 + t5413)*var2[12] - 0.5*t5685*var2[13])*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec15_go1_description.hh"

namespace SymFunction
{

void Ce2_vec15_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
