/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 20:51:09 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t404;
  double t152;
  double t238;
  double t217;
  double t512;
  double t10;
  double t253;
  double t544;
  double t578;
  double t588;
  double t598;
  double t668;
  double t723;
  double t724;
  double t754;
  double t780;
  double t789;
  double t797;
  double t9;
  double t841;
  double t1006;
  double t1159;
  double t1193;
  double t1214;
  double t1224;
  double t1307;
  double t1351;
  double t1039;
  double t1734;
  double t1736;
  double t1741;
  double t1829;
  double t1972;
  double t2021;
  double t2034;
  double t2078;
  double t2134;
  double t2139;
  double t2165;
  double t2170;
  double t2176;
  double t4082;
  double t4150;
  double t3241;
  double t3804;
  double t3826;
  double t4232;
  double t4251;
  double t975;
  double t1087;
  double t1093;
  double t4418;
  double t4484;
  double t4493;
  double t4499;
  double t4517;
  double t4593;
  double t4595;
  double t4602;
  double t4605;
  double t4611;
  double t4617;
  double t4694;
  double t4695;
  double t4699;
  double t4702;
  double t4705;
  double t4706;
  double t4737;
  double t4742;
  double t4743;
  double t1360;
  double t1462;
  double t1466;
  double t4525;
  double t4826;
  double t4833;
  double t4895;
  double t4896;
  double t4746;
  double t4749;
  double t4760;
  double t4761;
  double t4762;
  double t4764;
  double t4766;
  double t4792;
  double t4946;
  double t4947;
  double t4948;
  double t1731;
  double t1834;
  double t1840;
  double t1845;
  double t1857;
  double t1866;
  double t1873;
  double t1878;
  double t1881;
  double t4483;
  double t4504;
  double t4520;
  double t4526;
  double t4527;
  double t4529;
  double t4542;
  double t4551;
  double t4552;
  double t4563;
  double t4849;
  double t4852;
  double t4853;
  double t4854;
  double t4867;
  double t4870;
  double t4889;
  double t4890;
  double t5033;
  double t5034;
  double t5035;
  double t5036;
  double t5037;
  double t5038;
  double t5077;
  double t5080;
  double t5081;
  double t5085;
  double t5086;
  double t5087;
  double t3934;
  double t4168;
  double t4180;
  double t4228;
  double t4254;
  double t4255;
  double t4256;
  double t4399;
  double t4435;
  double t4445;
  double t4448;
  double t4450;
  double t4803;
  double t4808;
  double t4810;
  double t4816;
  double t4821;
  double t4990;
  double t4995;
  double t4998;
  double t4999;
  double t5000;
  double t5001;
  double t5002;
  double t5009;
  double t5010;
  double t1916;
  double t2195;
  double t2196;
  double t2427;
  double t2519;
  double t2726;
  double t2727;
  double t2803;
  double t2935;
  double t4691;
  double t4707;
  double t4708;
  double t4710;
  double t4712;
  double t4714;
  double t4719;
  double t4721;
  double t4723;
  double t4726;
  double t4729;
  double t4949;
  double t4950;
  double t4952;
  double t4955;
  double t4957;
  double t4961;
  double t4962;
  double t4969;
  double t4971;
  double t5124;
  double t5126;
  double t5127;
  double t5128;
  double t5135;
  double t5141;
  double t5142;
  double t5143;
  double t5144;
  double t5058;
  double t5063;
  double t5069;
  double t5070;
  double t5071;
  double t5073;
  double t5089;
  double t5096;
  double t5099;
  double t5100;
  double t5101;
  double t5102;
  double t5103;
  double t5105;
  double t5107;
  double t5016;
  double t4565;
  double t4633;
  double t4634;
  double t4637;
  double t4643;
  double t5206;
  double t5207;
  double t5044;
  double t5222;
  double t5223;
  double t5224;
  double t5225;
  double t5226;
  double t5227;
  double t5232;
  double t5233;
  double t5234;
  double t5251;
  double t5273;
  double t5274;
  double t5275;
  double t5308;
  double t5312;
  double t5298;
  double t5302;
  double t5303;
  double t5316;
  double t5317;
  double t5228;
  double t5229;
  double t5230;
  double t5344;
  double t5345;
  double t5346;
  double t5387;
  double t5388;
  double t5238;
  double t5240;
  double t5241;
  double t5350;
  double t5409;
  double t5385;
  double t5386;
  double t5389;
  double t5390;
  double t5391;
  double t5392;
  double t5393;
  double t5397;
  double t5432;
  double t5272;
  double t5280;
  double t5281;
  double t5282;
  double t5287;
  double t5290;
  double t5292;
  double t5293;
  double t5294;
  double t5343;
  double t5348;
  double t5349;
  double t5351;
  double t5352;
  double t5354;
  double t5355;
  double t5356;
  double t5357;
  double t5358;
  double t5410;
  double t5411;
  double t5412;
  double t5413;
  double t5414;
  double t5416;
  double t5417;
  double t5418;
  double t5486;
  double t5487;
  double t5488;
  double t5489;
  double t5491;
  double t5249;
  double t5252;
  double t5253;
  double t5254;
  double t5255;
  double t5256;
  double t5260;
  double t5261;
  double t5263;
  double t5360;
  double t5361;
  double t5362;
  double t5363;
  double t5364;
  double t5365;
  double t5366;
  double t5367;
  double t5368;
  double t5369;
  double t5370;
  double t5420;
  double t5421;
  double t5422;
  double t5423;
  double t5424;
  double t5425;
  double t5426;
  double t5427;
  double t5428;
  double t5459;
  double t5460;
  double t5461;
  double t5462;
  double t5463;
  double t5466;
  double t5467;
  double t5471;
  double t5472;
  double t5473;
  double t5474;
  double t5475;
  double t5477;
  double t5372;
  double t5374;
  double t5375;
  double t5376;
  double t5377;
  double t5307;
  double t5313;
  double t5314;
  double t5315;
  double t5318;
  double t5319;
  double t5320;
  double t5336;
  double t5337;
  double t5338;
  double t5339;
  double t5341;
  double t5403;
  double t5404;
  double t5405;
  double t5406;
  double t5407;
  double t5512;
  double t5513;
  double t5514;
  double t5515;
  double t5516;
  double t5517;
  double t5519;
  double t5521;
  double t5445;
  double t5446;
  double t5447;
  double t5448;
  double t5449;
  double t5450;
  double t5455;
  double t5456;
  double t5565;
  double t5566;
  double t5567;
  double t5572;
  double t5574;
  double t5580;
  double t5581;
  double t5582;
  double t5597;
  double t5598;
  double t5593;
  double t5594;
  double t5595;
  double t5602;
  double t5603;
  double t5568;
  double t5569;
  double t5570;
  double t5640;
  double t5643;
  double t5644;
  double t5663;
  double t5664;
  double t5665;
  double t5679;
  double t5680;
  double t5575;
  double t5576;
  double t5577;
  double t5678;
  double t5685;
  double t5687;
  double t5688;
  double t5690;
  double t5691;
  double t5692;
  double t5693;
  double t5669;
  double t5709;
  double t5710;
  double t5579;
  double t5583;
  double t5584;
  double t5585;
  double t5586;
  double t5587;
  double t5588;
  double t5590;
  double t5591;
  double t5659;
  double t5666;
  double t5668;
  double t5670;
  double t5671;
  double t5672;
  double t5673;
  double t5674;
  double t5675;
  double t5676;
  double t5711;
  double t5713;
  double t5714;
  double t5715;
  double t5716;
  double t5717;
  double t5718;
  double t5719;
  double t5639;
  double t5646;
  double t5647;
  double t5649;
  double t5746;
  double t5748;
  double t5749;
  double t5596;
  double t5599;
  double t5600;
  double t5601;
  double t5604;
  double t5605;
  double t5606;
  double t5627;
  double t5629;
  double t5630;
  double t5633;
  double t5637;
  double t5697;
  double t5698;
  double t5701;
  double t5702;
  double t5703;
  double t5733;
  double t5734;
  double t5735;
  double t5736;
  double t5737;
  double t5738;
  double t5739;
  double t5742;
  double t5743;
  double t5801;
  double t5797;
  double t5796;
  double t5798;
  double t5799;
  double t5800;
  double t5802;
  double t5804;
  double t5813;
  double t5816;
  double t5817;
  double t5827;
  double t5828;
  double t5819;
  double t5820;
  double t5830;
  double t5840;
  double t5841;
  double t5842;
  double t5843;
  double t5845;
  double t5811;
  double t5871;
  double t5872;
  double t5873;
  double t5874;
  double t5876;
  double t5877;
  double t5894;
  double t5895;
  double t5896;
  double t5897;
  double t5898;
  double t5899;
  double t5829;
  double t5831;
  double t5832;
  double t5833;
  double t5834;
  double t5835;
  double t5837;
  double t5838;
  double t5917;
  double t5918;
  double t5919;
  double t5927;
  double t5928;
  double t5929;
  double t5940;
  double t5941;
  double t5924;
  double t5961;
  double t5963;
  double t5964;
  double t5846;
  double t5847;
  double t5848;
  double t5849;
  double t5850;
  double t5852;
  double t5943;
  double t5989;
  double t5991;
  double t5923;
  double t5925;
  double t6002;
  double t6006;
  double t6007;
  double t6014;
  double t6015;
  double t5966;
  double t6031;
  double t6032;
  double t5795;
  double t5806;
  double t5812;
  double t5814;
  double t5815;
  double t5818;
  double t5821;
  double t5823;
  double t5824;
  double t5825;
  double t5994;
  double t5996;
  double t5997;
  double t6050;
  double t6051;
  double t6053;
  double t5942;
  double t5944;
  double t5945;
  double t5946;
  double t5947;
  double t5948;
  double t5949;
  double t5950;
  double t6073;
  double t6074;
  double t6075;
  double t5888;
  double t5889;
  double t5890;
  double t5891;
  double t5892;
  double t5893;
  double t5900;
  double t5901;
  double t5902;
  double t5903;
  double t5904;
  double t5907;
  double t5908;
  double t5910;
  double t5911;
  double t5965;
  double t5967;
  double t5968;
  double t5970;
  double t5971;
  double t5973;
  double t5978;
  double t5979;
  double t5980;
  double t6030;
  double t6033;
  double t6035;
  double t6036;
  double t6037;
  double t6038;
  double t6040;
  double t6041;
  double t6042;
  double t6072;
  double t6076;
  double t6077;
  double t6078;
  double t6080;
  double t6081;
  double t6082;
  double t6083;
  double t6084;
  double t6085;
  double t6086;
  double t5865;
  double t6049;
  double t6055;
  double t6056;
  double t6057;
  double t6058;
  double t6098;
  double t6099;
  double t5880;
  double t5854;
  double t5855;
  double t5856;
  double t5857;
  double t5858;
  double t5859;
  double t5860;
  double t5861;
  double t5862;
  double t6001;
  double t6011;
  double t6012;
  double t6013;
  double t6016;
  double t6017;
  double t6018;
  double t6066;
  double t6067;
  double t6068;
  double t6069;
  double t6070;
  double t5952;
  double t5953;
  double t5954;
  double t5956;
  double t5957;
  double t6109;
  double t6110;
  double t6111;
  double t6112;
  double t6113;
  double t6115;
  double t6116;
  double t6117;
  double t6118;
  double t6141;
  double t6142;
  double t6143;
  double t6160;
  double t6161;
  double t6162;
  double t6166;
  double t6215;
  double t6216;
  double t6230;
  double t6231;
  double t6232;
  double t6165;
  double t6170;
  double t6212;
  double t6250;
  double t6251;
  double t6262;
  double t6274;
  double t6275;
  double t6276;
  double t6280;
  double t6281;
  double t6146;
  double t6297;
  double t6252;
  double t6253;
  double t6256;
  double t6213;
  double t6214;
  double t6218;
  double t6220;
  double t6221;
  double t6222;
  double t6224;
  double t6225;
  double t6326;
  double t6140;
  double t6144;
  double t6145;
  double t6147;
  double t6148;
  double t6149;
  double t6154;
  double t6155;
  double t6156;
  double t6158;
  double t6298;
  double t6299;
  double t6300;
  double t6301;
  double t6302;
  double t6303;
  double t6304;
  double t6305;
  double t6229;
  double t6233;
  double t6236;
  double t6242;
  double t6243;
  double t6244;
  double t6245;
  double t6246;
  double t6247;
  double t6367;
  double t6368;
  double t6369;
  double t6370;
  double t6371;
  double t6336;
  double t6337;
  double t6338;
  double t6339;
  double t6340;
  double t6341;
  double t6342;
  double t6343;
  double t6344;
  double t6345;
  double t6346;
  double t6347;
  double t6261;
  double t6263;
  double t6264;
  double t6265;
  double t6266;
  double t6267;
  double t6268;
  double t6269;
  double t6271;
  double t6172;
  double t6173;
  double t6174;
  double t6175;
  double t6176;
  double t6178;
  double t6179;
  double t6181;
  double t6182;
  double t6184;
  double t6185;
  double t6308;
  double t6309;
  double t6310;
  double t6311;
  double t6312;
  double t6313;
  double t6314;
  double t6315;
  double t6316;
  double t6361;
  double t6196;
  double t6197;
  double t6199;
  double t6200;
  double t6201;
  double t6352;
  double t6353;
  double t6354;
  double t6355;
  double t6356;
  double t6357;
  double t6358;
  double t6359;
  double t6187;
  double t6188;
  double t6190;
  double t6192;
  double t6194;
  double t6319;
  double t6320;
  double t6321;
  double t6322;
  double t6323;
  double t6273;
  double t6277;
  double t6278;
  double t6279;
  double t6282;
  double t6283;
  double t6284;
  double t6387;
  double t6388;
  double t6389;
  double t6390;
  double t6391;
  double t6392;
  double t6393;
  double t6394;
  double t6423;
  double t6424;
  double t6425;
  double t6427;
  double t6441;
  double t6442;
  double t6443;
  double t6437;
  double t6453;
  double t6454;
  double t6463;
  double t6464;
  double t6465;
  double t6451;
  double t6480;
  double t6452;
  double t6455;
  double t6456;
  double t6457;
  double t6458;
  double t6459;
  double t6460;
  double t6461;
  double t6468;
  double t6490;
  double t6491;
  double t6426;
  double t6428;
  double t6479;
  double t6481;
  double t6506;
  double t6507;
  double t6508;
  double t6509;
  double t6510;
  double t6493;
  double t6528;
  double t6529;
  double t6436;
  double t6438;
  double t6439;
  double t6440;
  double t6542;
  double t6543;
  double t6544;
  double t6462;
  double t6466;
  double t6467;
  double t6469;
  double t6470;
  double t6471;
  double t6472;
  double t6473;
  double t6474;
  double t6475;
  double t6492;
  double t6494;
  double t6495;
  double t6496;
  double t6497;
  double t6498;
  double t6499;
  double t6500;
  double t6527;
  double t6530;
  double t6531;
  double t6532;
  double t6533;
  double t6534;
  double t6535;
  double t6536;
  double t6537;
  double t6430;
  double t6431;
  double t6432;
  double t6433;
  double t6434;
  double t6483;
  double t6484;
  double t6485;
  double t6486;
  double t6487;
  double t6513;
  double t6514;
  double t6515;
  double t6511;
  double t6512;
  double t6516;
  double t6517;
  double t6558;
  double t6559;
  double t6560;
  double t6561;
  double t6562;
  double t6563;
  double t6564;
  double t6565;
  double t6566;
  t404 = Cos(var1[3]);
  t152 = Cos(var1[5]);
  t238 = Sin(var1[4]);
  t217 = Sin(var1[3]);
  t512 = Sin(var1[5]);
  t10 = Cos(var1[6]);
  t253 = -1.*t152*t217*t238;
  t544 = t404*t512;
  t578 = t253 + t544;
  t588 = t10*t578;
  t598 = t404*t152*t238;
  t668 = t217*t512;
  t723 = t598 + t668;
  t724 = Sin(var1[6]);
  t754 = -1.*t724;
  t780 = 0. + t754;
  t789 = t723*t780;
  t797 = t588 + t789;
  t9 = Cos(var1[8]);
  t841 = Sin(var1[7]);
  t1006 = Cos(var1[7]);
  t1159 = t152*t217*t238;
  t1193 = -1.*t404*t512;
  t1214 = t1159 + t1193;
  t1224 = -1.*t10*t1214;
  t1307 = -1.*t723*t724;
  t1351 = t1224 + t1307;
  t1039 = Sin(var1[8]);
  t1734 = Cos(var1[4]);
  t1736 = t404*t1734*t152*t10;
  t1741 = t1734*t152*t217*t780;
  t1829 = t1736 + t1741;
  t1972 = t152*t217;
  t2021 = -1.*t404*t238*t512;
  t2034 = t1972 + t2021;
  t2078 = t10*t2034;
  t2134 = -1.*t404*t152;
  t2139 = -1.*t217*t238*t512;
  t2165 = t2134 + t2139;
  t2170 = t2165*t780;
  t2176 = t2078 + t2170;
  t4082 = t1734*t152;
  t4150 = 0. + t4082;
  t3241 = t10*t723;
  t3804 = t1214*t780;
  t3826 = 0. + t3241 + t3804;
  t4232 = t4150*t1006;
  t4251 = -1.*t3826*t841;
  t975 = -1.*t9*t797*t841;
  t1087 = -1.*t1006*t797*t1039;
  t1093 = t975 + t1087;
  t4418 = 0. + t9;
  t4484 = -1.*t1734*t152*t10*t217;
  t4493 = t404*t1734*t152*t780;
  t4499 = t4484 + t4493;
  t4517 = 0. + t10;
  t4593 = -1.*t404*t152*t238;
  t4595 = -1.*t217*t512;
  t4602 = t4593 + t4595;
  t4605 = t10*t4602;
  t4611 = t578*t780;
  t4617 = t4605 + t4611;
  t4694 = t404*t152;
  t4695 = t217*t238*t512;
  t4699 = t4694 + t4695;
  t4702 = t10*t4699;
  t4705 = t2034*t780;
  t4706 = t4702 + t4705;
  t4737 = -1.*t10*t723;
  t4742 = -1.*t578*t724;
  t4743 = t4737 + t4742;
  t1360 = -1.*t9*t1351*t841;
  t1462 = -1.*t1006*t1351*t1039;
  t1466 = t1360 + t1462;
  t4525 = -1.*t1734*t152*t217*t724;
  t4826 = -1.*t404*t1734*t152*t724;
  t4833 = t4484 + t4826;
  t4895 = t1214*t724;
  t4896 = t4737 + t4895;
  t4746 = -0.213*t1006*t4743;
  t4749 = t588 + t1307;
  t4760 = -0.08*t4749;
  t4761 = t1006*t4418*t4743;
  t4762 = -1.*t4743*t841*t1039;
  t4764 = t4761 + t4762;
  t4766 = -0.213*t4764;
  t4792 = t4746 + t4760 + t4766;
  t4946 = -1.*t10*t2165;
  t4947 = -1.*t2034*t724;
  t4948 = t4946 + t4947;
  t1731 = -1.*t152*t1006*t238;
  t1834 = -1.*t1829*t841;
  t1840 = t1731 + t1834;
  t1845 = t9*t1840;
  t1857 = t1006*t1829;
  t1866 = -1.*t152*t238*t841;
  t1873 = t1857 + t1866;
  t1878 = -1.*t1873*t1039;
  t1881 = t1845 + t1878;
  t4483 = -0.04675*t404*t1734*t152;
  t4504 = -0.213*t1006*t4499;
  t4520 = t404*t1734*t152*t4517;
  t4526 = t4520 + t4525;
  t4527 = -0.08*t4526;
  t4529 = t1006*t4418*t4499;
  t4542 = -1.*t4499*t841*t1039;
  t4551 = t4529 + t4542;
  t4552 = -0.213*t4551;
  t4563 = t4483 + t4504 + t4527 + t4552;
  t4849 = -0.213*t1006*t4833;
  t4852 = t1736 + t4525;
  t4853 = -0.08*t4852;
  t4854 = t1006*t4418*t4833;
  t4867 = -1.*t4833*t841*t1039;
  t4870 = t4854 + t4867;
  t4889 = -0.213*t4870;
  t4890 = t4849 + t4853 + t4889;
  t5033 = -1.*t404*t152*t10*t238;
  t5034 = -1.*t152*t217*t238*t780;
  t5035 = t5033 + t5034;
  t5036 = t1006*t5035;
  t5037 = -1.*t1734*t152*t841;
  t5038 = t5036 + t5037;
  t5077 = -1.*t404*t1734*t10*t512;
  t5080 = -1.*t1734*t217*t512*t780;
  t5081 = t5077 + t5080;
  t5085 = t1006*t5081;
  t5086 = t238*t512*t841;
  t5087 = t5085 + t5086;
  t3934 = -1.*t1006*t3826;
  t4168 = -1.*t4150*t841;
  t4180 = t3934 + t4168;
  t4228 = t9*t4180;
  t4254 = t4232 + t4251;
  t4255 = -1.*t4254*t1039;
  t4256 = t4228 + t4255;
  t4399 = 0.213*t797*t841;
  t4435 = -1.*t4418*t797*t841;
  t4445 = t4435 + t1087;
  t4448 = -0.213*t4445;
  t4450 = t4399 + t4448;
  t4803 = 0.213*t1351*t841;
  t4808 = -1.*t4418*t1351*t841;
  t4810 = t4808 + t1462;
  t4816 = -0.213*t4810;
  t4821 = t4803 + t4816;
  t4990 = -0.213*t1840;
  t4995 = t4418*t1840;
  t4998 = -1.*t1006*t1829;
  t4999 = t152*t238*t841;
  t5000 = t4998 + t4999;
  t5001 = t5000*t1039;
  t5002 = t4995 + t5001;
  t5009 = -0.213*t5002;
  t5010 = t4990 + t5009;
  t1916 = -1.*t1734*t1006*t512;
  t2195 = -1.*t2176*t841;
  t2196 = t1916 + t2195;
  t2427 = t9*t2196;
  t2519 = t1006*t2176;
  t2726 = -1.*t1734*t512*t841;
  t2727 = t2519 + t2726;
  t2803 = -1.*t2727*t1039;
  t2935 = t2427 + t2803;
  t4691 = -0.04675*t2034;
  t4707 = -0.213*t1006*t4706;
  t4708 = t4517*t2034;
  t4710 = t4699*t724;
  t4712 = t4708 + t4710;
  t4714 = -0.08*t4712;
  t4719 = t1006*t4418*t4706;
  t4721 = -1.*t4706*t841*t1039;
  t4723 = t4719 + t4721;
  t4726 = -0.213*t4723;
  t4729 = t4691 + t4707 + t4714 + t4726;
  t4949 = -0.213*t1006*t4948;
  t4950 = -1.*t2165*t724;
  t4952 = t2078 + t4950;
  t4955 = -0.08*t4952;
  t4957 = t1006*t4418*t4948;
  t4961 = -1.*t4948*t841*t1039;
  t4962 = t4957 + t4961;
  t4969 = -0.213*t4962;
  t4971 = t4949 + t4955 + t4969;
  t5124 = -0.213*t2196;
  t5126 = t4418*t2196;
  t5127 = -1.*t1006*t2176;
  t5128 = t1734*t512*t841;
  t5135 = t5127 + t5128;
  t5141 = t5135*t1039;
  t5142 = t5126 + t5141;
  t5143 = -0.213*t5142;
  t5144 = t5124 + t5143;
  t5058 = 0.04675*t1734*t217*t512;
  t5063 = 0.1881*t238*t512;
  t5069 = -1.*t1734*t4517*t217*t512;
  t5070 = -1.*t404*t1734*t512*t724;
  t5071 = t5069 + t5070;
  t5073 = -0.08*t5071;
  t5089 = -0.213*t5087;
  t5096 = t4418*t5087;
  t5099 = t1006*t238*t512;
  t5100 = -1.*t5081*t841;
  t5101 = t5099 + t5100;
  t5102 = t5101*t1039;
  t5103 = t5096 + t5102;
  t5105 = -0.213*t5103;
  t5107 = t5058 + t5063 + t5073 + t5089 + t5105;
  t5016 = -0.1881*t1734*t152;
  t4565 = -0.04675*t578;
  t4633 = t4517*t578;
  t4634 = t4602*t724;
  t4637 = t4633 + t4634;
  t4643 = -0.08*t4637;
  t5206 = t1006*t4617;
  t5207 = t5206 + t5037;
  t5044 = -1.*t1734*t152*t1006;
  t5222 = t10*t2165;
  t5223 = -1.*t152*t217;
  t5224 = t404*t238*t512;
  t5225 = t5223 + t5224;
  t5226 = t5225*t780;
  t5227 = t5222 + t5226;
  t5232 = -1.*t10*t4699;
  t5233 = -1.*t5225*t724;
  t5234 = t5232 + t5233;
  t5251 = t3241 + t3804;
  t5273 = t404*t1734*t10*t512;
  t5274 = t1734*t217*t512*t780;
  t5275 = t5273 + t5274;
  t5308 = t1734*t512;
  t5312 = 0. + t5308;
  t5298 = t10*t5225;
  t5302 = t4699*t780;
  t5303 = 0. + t5298 + t5302;
  t5316 = t1006*t5312;
  t5317 = -1.*t5303*t841;
  t5228 = -1.*t9*t5227*t841;
  t5229 = -1.*t1006*t5227*t1039;
  t5230 = t5228 + t5229;
  t5344 = -1.*t1734*t10*t217*t512;
  t5345 = t404*t1734*t512*t780;
  t5346 = t5344 + t5345;
  t5387 = -1.*t10*t5225;
  t5388 = t5387 + t4950;
  t5238 = -1.*t9*t5234*t841;
  t5240 = -1.*t1006*t5234*t1039;
  t5241 = t5238 + t5240;
  t5350 = -1.*t1734*t217*t512*t724;
  t5409 = t5344 + t5070;
  t5385 = t5222 + t5233;
  t5386 = -0.08*t5385;
  t5389 = -0.213*t1006*t5388;
  t5390 = t1006*t4418*t5388;
  t5391 = -1.*t5388*t841*t1039;
  t5392 = t5390 + t5391;
  t5393 = -0.213*t5392;
  t5397 = t5386 + t5389 + t5393;
  t5432 = t5387 + t4710;
  t5272 = -1.*t1006*t238*t512;
  t5280 = -1.*t5275*t841;
  t5281 = t5272 + t5280;
  t5282 = t9*t5281;
  t5287 = t1006*t5275;
  t5290 = -1.*t238*t512*t841;
  t5292 = t5287 + t5290;
  t5293 = -1.*t5292*t1039;
  t5294 = t5282 + t5293;
  t5343 = -0.04675*t404*t1734*t512;
  t5348 = -0.213*t1006*t5346;
  t5349 = t404*t1734*t4517*t512;
  t5351 = t5349 + t5350;
  t5352 = -0.08*t5351;
  t5354 = t1006*t4418*t5346;
  t5355 = -1.*t5346*t841*t1039;
  t5356 = t5354 + t5355;
  t5357 = -0.213*t5356;
  t5358 = t5343 + t5348 + t5352 + t5357;
  t5410 = -0.213*t1006*t5409;
  t5411 = t5273 + t5350;
  t5412 = -0.08*t5411;
  t5413 = t1006*t4418*t5409;
  t5414 = -1.*t5409*t841*t1039;
  t5416 = t5413 + t5414;
  t5417 = -0.213*t5416;
  t5418 = t5410 + t5412 + t5417;
  t5486 = -1.*t404*t10*t238*t512;
  t5487 = -1.*t217*t238*t512*t780;
  t5488 = t5486 + t5487;
  t5489 = t1006*t5488;
  t5491 = t5489 + t2726;
  t5249 = t1734*t152*t1006;
  t5252 = -1.*t5251*t841;
  t5253 = t5249 + t5252;
  t5254 = t9*t5253;
  t5255 = t1006*t5251;
  t5256 = t1734*t152*t841;
  t5260 = t5255 + t5256;
  t5261 = -1.*t5260*t1039;
  t5263 = t5254 + t5261;
  t5360 = -0.04675*t723;
  t5361 = -0.213*t1006*t797;
  t5362 = t4517*t723;
  t5363 = t578*t724;
  t5364 = t5362 + t5363;
  t5365 = -0.08*t5364;
  t5366 = t1006*t4418*t797;
  t5367 = -1.*t797*t841*t1039;
  t5368 = t5366 + t5367;
  t5369 = -0.213*t5368;
  t5370 = t5360 + t5361 + t5365 + t5369;
  t5420 = -1.*t1214*t724;
  t5421 = t3241 + t5420;
  t5422 = -0.08*t5421;
  t5423 = -0.213*t1006*t1351;
  t5424 = t1006*t4418*t1351;
  t5425 = -1.*t1351*t841*t1039;
  t5426 = t5424 + t5425;
  t5427 = -0.213*t5426;
  t5428 = t5422 + t5423 + t5427;
  t5459 = -0.04675*t1734*t152*t217;
  t5460 = -0.1881*t152*t238;
  t5461 = t1734*t152*t4517*t217;
  t5462 = t404*t1734*t152*t724;
  t5463 = t5461 + t5462;
  t5466 = -0.08*t5463;
  t5467 = -0.213*t1873;
  t5471 = t4418*t1873;
  t5472 = t1840*t1039;
  t5473 = t5471 + t5472;
  t5474 = -0.213*t5473;
  t5475 = t5459 + t5460 + t5466 + t5467 + t5474;
  t5477 = -0.1881*t1734*t512;
  t5372 = -0.04675*t2165;
  t5374 = t4517*t2165;
  t5375 = t2034*t724;
  t5376 = t5374 + t5375;
  t5377 = -0.08*t5376;
  t5307 = -1.*t1006*t5303;
  t5313 = -1.*t5312*t841;
  t5314 = t5307 + t5313;
  t5315 = t9*t5314;
  t5318 = t5316 + t5317;
  t5319 = -1.*t5318*t1039;
  t5320 = t5315 + t5319;
  t5336 = 0.213*t5227*t841;
  t5337 = -1.*t4418*t5227*t841;
  t5338 = t5337 + t5229;
  t5339 = -0.213*t5338;
  t5341 = t5336 + t5339;
  t5403 = 0.213*t5234*t841;
  t5404 = -1.*t4418*t5234*t841;
  t5405 = t5404 + t5240;
  t5406 = -0.213*t5405;
  t5407 = t5403 + t5406;
  t5512 = -0.213*t5253;
  t5513 = t4418*t5253;
  t5514 = -1.*t1006*t5251;
  t5515 = t5514 + t5037;
  t5516 = t5515*t1039;
  t5517 = t5513 + t5516;
  t5519 = -0.213*t5517;
  t5521 = t5512 + t5519;
  t5445 = -0.213*t5281;
  t5446 = t4418*t5281;
  t5447 = -1.*t1006*t5275;
  t5448 = t5447 + t5086;
  t5449 = t5448*t1039;
  t5450 = t5446 + t5449;
  t5455 = -0.213*t5450;
  t5456 = t5445 + t5455;
  t5565 = -1.*t1734*t10*t217;
  t5566 = t404*t1734*t780;
  t5567 = t5565 + t5566;
  t5572 = -1.*t404*t1734*t724;
  t5574 = t5565 + t5572;
  t5580 = -1.*t404*t10*t238;
  t5581 = -1.*t217*t238*t780;
  t5582 = t5580 + t5581;
  t5597 = -1.*t238;
  t5598 = 0. + t5597;
  t5593 = t404*t1734*t10;
  t5594 = t1734*t217*t780;
  t5595 = 0. + t5593 + t5594;
  t5602 = t1006*t5598;
  t5603 = -1.*t5595*t841;
  t5568 = -1.*t9*t5567*t841;
  t5569 = -1.*t1006*t5567*t1039;
  t5570 = t5568 + t5569;
  t5640 = -1.*t404*t1734*t10;
  t5643 = -1.*t1734*t217*t780;
  t5644 = t5640 + t5643;
  t5663 = t10*t217*t238;
  t5664 = -1.*t404*t238*t780;
  t5665 = t5663 + t5664;
  t5679 = t1734*t217*t724;
  t5680 = t5640 + t5679;
  t5575 = -1.*t9*t5574*t841;
  t5576 = -1.*t1006*t5574*t1039;
  t5577 = t5575 + t5576;
  t5678 = -0.08*t5574;
  t5685 = -0.213*t1006*t5680;
  t5687 = t1006*t4418*t5680;
  t5688 = -1.*t5680*t841*t1039;
  t5690 = t5687 + t5688;
  t5691 = -0.213*t5690;
  t5692 = t5678 + t5685 + t5691;
  t5693 = var2[6]*t5692;
  t5669 = t217*t238*t724;
  t5709 = t404*t238*t724;
  t5710 = t5663 + t5709;
  t5579 = -1.*t1734*t1006;
  t5583 = -1.*t5582*t841;
  t5584 = t5579 + t5583;
  t5585 = t9*t5584;
  t5586 = t1006*t5582;
  t5587 = -1.*t1734*t841;
  t5588 = t5586 + t5587;
  t5590 = -1.*t5588*t1039;
  t5591 = t5585 + t5590;
  t5659 = 0.04675*t404*t238;
  t5666 = -0.213*t1006*t5665;
  t5668 = -1.*t404*t4517*t238;
  t5670 = t5668 + t5669;
  t5671 = -0.08*t5670;
  t5672 = t1006*t4418*t5665;
  t5673 = -1.*t5665*t841*t1039;
  t5674 = t5672 + t5673;
  t5675 = -0.213*t5674;
  t5676 = t5659 + t5666 + t5671 + t5675;
  t5711 = -0.213*t1006*t5710;
  t5713 = t5580 + t5669;
  t5714 = -0.08*t5713;
  t5715 = t1006*t4418*t5710;
  t5716 = -1.*t5710*t841*t1039;
  t5717 = t5715 + t5716;
  t5718 = -0.213*t5717;
  t5719 = t5711 + t5714 + t5718;
  t5639 = 0.04675*t1734*t217;
  t5646 = -1.*t1734*t4517*t217;
  t5647 = t5646 + t5572;
  t5649 = -0.08*t5647;
  t5746 = t1006*t5644;
  t5748 = t238*t841;
  t5749 = t5746 + t5748;
  t5596 = -1.*t1006*t5595;
  t5599 = -1.*t5598*t841;
  t5600 = t5596 + t5599;
  t5601 = t9*t5600;
  t5604 = t5602 + t5603;
  t5605 = -1.*t5604*t1039;
  t5606 = t5601 + t5605;
  t5627 = 0.213*t5567*t841;
  t5629 = -1.*t4418*t5567*t841;
  t5630 = t5629 + t5569;
  t5633 = -0.213*t5630;
  t5637 = t5627 + t5633;
  t5697 = 0.213*t5574*t841;
  t5698 = -1.*t4418*t5574*t841;
  t5701 = t5698 + t5576;
  t5702 = -0.213*t5701;
  t5703 = t5697 + t5702;
  t5733 = -0.213*t5584;
  t5734 = t4418*t5584;
  t5735 = -1.*t1006*t5582;
  t5736 = t1734*t841;
  t5737 = t5735 + t5736;
  t5738 = t5737*t1039;
  t5739 = t5734 + t5738;
  t5742 = -0.213*t5739;
  t5743 = t5733 + t5742;
  t5801 = Cos(var1[15]);
  t5797 = Sin(var1[15]);
  t5796 = Cos(var1[16]);
  t5798 = -1.*t5797;
  t5799 = 0. + t5798;
  t5800 = t404*t1734*t152*t5799;
  t5802 = -1.*t5801*t1734*t152*t217;
  t5804 = t5800 + t5802;
  t5813 = -1.*t1734*t152*t5797*t217;
  t5816 = Cos(var1[17]);
  t5817 = 0. + t5816;
  t5827 = -1.*t404*t1734*t152*t5797;
  t5828 = t5827 + t5802;
  t5819 = Sin(var1[16]);
  t5820 = Sin(var1[17]);
  t5830 = t5801*t404*t1734*t152;
  t5840 = t1734*t152*t5799*t217;
  t5841 = t5830 + t5840;
  t5842 = -1.*t5819*t5841;
  t5843 = -1.*t5796*t152*t238;
  t5845 = t5842 + t5843;
  t5811 = 0. + t5801;
  t5871 = -1.*t1734*t152*t5819;
  t5872 = -1.*t5801*t404*t152*t238;
  t5873 = -1.*t152*t5799*t217*t238;
  t5874 = t5872 + t5873;
  t5876 = t5796*t5874;
  t5877 = t5871 + t5876;
  t5894 = t5819*t238*t512;
  t5895 = -1.*t5801*t404*t1734*t512;
  t5896 = -1.*t1734*t5799*t217*t512;
  t5897 = t5895 + t5896;
  t5898 = t5796*t5897;
  t5899 = t5894 + t5898;
  t5829 = -0.213*t5796*t5828;
  t5831 = t5830 + t5813;
  t5832 = 0.08*t5831;
  t5833 = t5796*t5817*t5828;
  t5834 = -1.*t5819*t5820*t5828;
  t5835 = t5833 + t5834;
  t5837 = -0.213*t5835;
  t5838 = t5829 + t5832 + t5837;
  t5917 = -1.*t5801*t1214;
  t5918 = -1.*t5797*t723;
  t5919 = t5917 + t5918;
  t5927 = t5797*t1214;
  t5928 = -1.*t5801*t723;
  t5929 = t5927 + t5928;
  t5940 = -1.*t5797*t578;
  t5941 = t5940 + t5928;
  t5924 = -1.*t5796*t5820*t5919;
  t5961 = -1.*t5797*t2034;
  t5963 = -1.*t5801*t2165;
  t5964 = t5961 + t5963;
  t5846 = t5816*t5845;
  t5847 = t5796*t5841;
  t5848 = -1.*t152*t5819*t238;
  t5849 = t5847 + t5848;
  t5850 = -1.*t5820*t5849;
  t5852 = t5846 + t5850;
  t5943 = t5801*t578;
  t5989 = t5799*t723;
  t5991 = t5943 + t5989;
  t5923 = -1.*t5816*t5819*t5919;
  t5925 = t5923 + t5924;
  t6002 = t5799*t1214;
  t6006 = t5801*t723;
  t6007 = 0. + t6002 + t6006;
  t6014 = t5796*t4150;
  t6015 = -1.*t5819*t6007;
  t5966 = t5801*t2034;
  t6031 = t5799*t2165;
  t6032 = t5966 + t6031;
  t5795 = 0.04675*t404*t1734*t152;
  t5806 = -0.213*t5796*t5804;
  t5812 = t5811*t404*t1734*t152;
  t5814 = t5812 + t5813;
  t5815 = 0.08*t5814;
  t5818 = t5796*t5817*t5804;
  t5821 = -1.*t5819*t5820*t5804;
  t5823 = t5818 + t5821;
  t5824 = -0.213*t5823;
  t5825 = t5795 + t5806 + t5815 + t5824;
  t5994 = -1.*t5816*t5819*t5991;
  t5996 = -1.*t5796*t5820*t5991;
  t5997 = t5994 + t5996;
  t6050 = t5799*t578;
  t6051 = t5801*t4602;
  t6053 = t6050 + t6051;
  t5942 = -0.213*t5796*t5941;
  t5944 = t5943 + t5918;
  t5945 = 0.08*t5944;
  t5946 = t5796*t5817*t5941;
  t5947 = -1.*t5819*t5820*t5941;
  t5948 = t5946 + t5947;
  t5949 = -0.213*t5948;
  t5950 = t5942 + t5945 + t5949;
  t6073 = t5799*t2034;
  t6074 = t5801*t4699;
  t6075 = t6073 + t6074;
  t5888 = -0.04675*t1734*t217*t512;
  t5889 = -0.1881*t238*t512;
  t5890 = -1.*t404*t1734*t5797*t512;
  t5891 = -1.*t5811*t1734*t217*t512;
  t5892 = t5890 + t5891;
  t5893 = 0.08*t5892;
  t5900 = -0.213*t5899;
  t5901 = t5817*t5899;
  t5902 = t5796*t238*t512;
  t5903 = -1.*t5819*t5897;
  t5904 = t5902 + t5903;
  t5907 = t5820*t5904;
  t5908 = t5901 + t5907;
  t5910 = -0.213*t5908;
  t5911 = t5888 + t5889 + t5893 + t5900 + t5910;
  t5965 = -0.213*t5796*t5964;
  t5967 = -1.*t5797*t2165;
  t5968 = t5966 + t5967;
  t5970 = 0.08*t5968;
  t5971 = t5796*t5817*t5964;
  t5973 = -1.*t5819*t5820*t5964;
  t5978 = t5971 + t5973;
  t5979 = -0.213*t5978;
  t5980 = t5965 + t5970 + t5979;
  t6030 = -1.*t1734*t5819*t512;
  t6033 = t5796*t6032;
  t6035 = t6030 + t6033;
  t6036 = -1.*t5820*t6035;
  t6037 = -1.*t5796*t1734*t512;
  t6038 = -1.*t5819*t6032;
  t6040 = t6037 + t6038;
  t6041 = t5816*t6040;
  t6042 = t6036 + t6041;
  t6072 = 0.04675*t2034;
  t6076 = -0.213*t5796*t6075;
  t6077 = t5811*t2034;
  t6078 = t5797*t4699;
  t6080 = t6077 + t6078;
  t6081 = 0.08*t6080;
  t6082 = t5796*t5817*t6075;
  t6083 = -1.*t5819*t5820*t6075;
  t6084 = t6082 + t6083;
  t6085 = -0.213*t6084;
  t6086 = t6072 + t6076 + t6081 + t6085;
  t5865 = 0.1881*t1734*t152;
  t6049 = 0.04675*t578;
  t6055 = t5811*t578;
  t6056 = t5797*t4602;
  t6057 = t6055 + t6056;
  t6058 = 0.08*t6057;
  t6098 = t5796*t6053;
  t6099 = t5871 + t6098;
  t5880 = -1.*t5796*t1734*t152;
  t5854 = -0.213*t5845;
  t5855 = t5817*t5845;
  t5856 = -1.*t5796*t5841;
  t5857 = t152*t5819*t238;
  t5858 = t5856 + t5857;
  t5859 = t5820*t5858;
  t5860 = t5855 + t5859;
  t5861 = -0.213*t5860;
  t5862 = t5854 + t5861;
  t6001 = -1.*t4150*t5819;
  t6011 = -1.*t5796*t6007;
  t6012 = t6001 + t6011;
  t6013 = t5816*t6012;
  t6016 = t6014 + t6015;
  t6017 = -1.*t5820*t6016;
  t6018 = t6013 + t6017;
  t6066 = 0.213*t5819*t5991;
  t6067 = -1.*t5817*t5819*t5991;
  t6068 = t6067 + t5996;
  t6069 = -0.213*t6068;
  t6070 = t6066 + t6069;
  t5952 = 0.213*t5819*t5919;
  t5953 = -1.*t5817*t5819*t5919;
  t5954 = t5953 + t5924;
  t5956 = -0.213*t5954;
  t5957 = t5952 + t5956;
  t6109 = -0.213*t6040;
  t6110 = t1734*t5819*t512;
  t6111 = -1.*t5796*t6032;
  t6112 = t6110 + t6111;
  t6113 = t5820*t6112;
  t6115 = t5817*t6040;
  t6116 = t6113 + t6115;
  t6117 = -0.213*t6116;
  t6118 = t6109 + t6117;
  t6141 = t404*t1734*t5799*t512;
  t6142 = -1.*t5801*t1734*t217*t512;
  t6143 = t6141 + t6142;
  t6160 = t5799*t5225;
  t6161 = t5801*t2165;
  t6162 = t6160 + t6161;
  t6166 = -1.*t5796*t5820*t6162;
  t6215 = -1.*t5801*t5225;
  t6216 = t6215 + t5967;
  t6230 = t5801*t404*t1734*t512;
  t6231 = t1734*t5799*t217*t512;
  t6232 = t6230 + t6231;
  t6165 = -1.*t5816*t5819*t6162;
  t6170 = t6165 + t6166;
  t6212 = -1.*t5797*t5225;
  t6250 = -1.*t5801*t4699;
  t6251 = t6212 + t6250;
  t6262 = t6002 + t6006;
  t6274 = t5801*t5225;
  t6275 = t5799*t4699;
  t6276 = 0. + t6274 + t6275;
  t6280 = t5796*t5312;
  t6281 = -1.*t5819*t6276;
  t6146 = -1.*t1734*t5797*t217*t512;
  t6297 = t5890 + t6142;
  t6252 = -1.*t5816*t5819*t6251;
  t6253 = -1.*t5796*t5820*t6251;
  t6256 = t6252 + t6253;
  t6213 = t6212 + t6161;
  t6214 = 0.08*t6213;
  t6218 = -0.213*t5796*t6216;
  t6220 = t5796*t5817*t6216;
  t6221 = -1.*t5819*t5820*t6216;
  t6222 = t6220 + t6221;
  t6224 = -0.213*t6222;
  t6225 = t6214 + t6218 + t6224;
  t6326 = t6215 + t6078;
  t6140 = 0.04675*t404*t1734*t512;
  t6144 = -0.213*t5796*t6143;
  t6145 = t5811*t404*t1734*t512;
  t6147 = t6145 + t6146;
  t6148 = 0.08*t6147;
  t6149 = t5796*t5817*t6143;
  t6154 = -1.*t5819*t5820*t6143;
  t6155 = t6149 + t6154;
  t6156 = -0.213*t6155;
  t6158 = t6140 + t6144 + t6148 + t6156;
  t6298 = -0.213*t5796*t6297;
  t6299 = t6230 + t6146;
  t6300 = 0.08*t6299;
  t6301 = t5796*t5817*t6297;
  t6302 = -1.*t5819*t5820*t6297;
  t6303 = t6301 + t6302;
  t6304 = -0.213*t6303;
  t6305 = t6298 + t6300 + t6304;
  t6229 = -1.*t5819*t238*t512;
  t6233 = t5796*t6232;
  t6236 = t6229 + t6233;
  t6242 = -1.*t5820*t6236;
  t6243 = -1.*t5796*t238*t512;
  t6244 = -1.*t5819*t6232;
  t6245 = t6243 + t6244;
  t6246 = t5816*t6245;
  t6247 = t6242 + t6246;
  t6367 = -1.*t5801*t404*t238*t512;
  t6368 = -1.*t5799*t217*t238*t512;
  t6369 = t6367 + t6368;
  t6370 = t5796*t6369;
  t6371 = t6030 + t6370;
  t6336 = 0.04675*t1734*t152*t217;
  t6337 = t404*t1734*t152*t5797;
  t6338 = t5811*t1734*t152*t217;
  t6339 = t6337 + t6338;
  t6340 = 0.08*t6339;
  t6341 = 0.1881*t152*t238;
  t6342 = -0.213*t5849;
  t6343 = t5820*t5845;
  t6344 = t5817*t5849;
  t6345 = t6343 + t6344;
  t6346 = -0.213*t6345;
  t6347 = t6336 + t6340 + t6341 + t6342 + t6346;
  t6261 = t1734*t152*t5819;
  t6263 = t5796*t6262;
  t6264 = t6261 + t6263;
  t6265 = -1.*t5820*t6264;
  t6266 = t5796*t1734*t152;
  t6267 = -1.*t5819*t6262;
  t6268 = t6266 + t6267;
  t6269 = t5816*t6268;
  t6271 = t6265 + t6269;
  t6172 = 0.04675*t723;
  t6173 = t5797*t578;
  t6174 = t5811*t723;
  t6175 = t6173 + t6174;
  t6176 = 0.08*t6175;
  t6178 = -0.213*t5796*t5991;
  t6179 = t5796*t5817*t5991;
  t6181 = -1.*t5819*t5820*t5991;
  t6182 = t6179 + t6181;
  t6184 = -0.213*t6182;
  t6185 = t6172 + t6176 + t6178 + t6184;
  t6308 = -1.*t5797*t1214;
  t6309 = t6308 + t6006;
  t6310 = 0.08*t6309;
  t6311 = -0.213*t5796*t5919;
  t6312 = t5796*t5817*t5919;
  t6313 = -1.*t5819*t5820*t5919;
  t6314 = t6312 + t6313;
  t6315 = -0.213*t6314;
  t6316 = t6310 + t6311 + t6315;
  t6361 = 0.1881*t1734*t512;
  t6196 = 0.04675*t2165;
  t6197 = t5797*t2034;
  t6199 = t5811*t2165;
  t6200 = t6197 + t6199;
  t6201 = 0.08*t6200;
  t6352 = -0.213*t6245;
  t6353 = -1.*t5796*t6232;
  t6354 = t5894 + t6353;
  t6355 = t5820*t6354;
  t6356 = t5817*t6245;
  t6357 = t6355 + t6356;
  t6358 = -0.213*t6357;
  t6359 = t6352 + t6358;
  t6187 = 0.213*t5819*t6162;
  t6188 = -1.*t5817*t5819*t6162;
  t6190 = t6188 + t6166;
  t6192 = -0.213*t6190;
  t6194 = t6187 + t6192;
  t6319 = 0.213*t5819*t6251;
  t6320 = -1.*t5817*t5819*t6251;
  t6321 = t6320 + t6253;
  t6322 = -0.213*t6321;
  t6323 = t6319 + t6322;
  t6273 = -1.*t5819*t5312;
  t6277 = -1.*t5796*t6276;
  t6278 = t6273 + t6277;
  t6279 = t5816*t6278;
  t6282 = t6280 + t6281;
  t6283 = -1.*t5820*t6282;
  t6284 = t6279 + t6283;
  t6387 = -0.213*t6268;
  t6388 = -1.*t5796*t6262;
  t6389 = t5871 + t6388;
  t6390 = t5820*t6389;
  t6391 = t5817*t6268;
  t6392 = t6390 + t6391;
  t6393 = -0.213*t6392;
  t6394 = t6387 + t6393;
  t6423 = t404*t1734*t5799;
  t6424 = -1.*t5801*t1734*t217;
  t6425 = t6423 + t6424;
  t6427 = -1.*t5796*t5820*t6425;
  t6441 = -1.*t5801*t404*t1734;
  t6442 = -1.*t1734*t5799*t217;
  t6443 = t6441 + t6442;
  t6437 = -1.*t404*t1734*t5797;
  t6453 = t1734*t5797*t217;
  t6454 = t6441 + t6453;
  t6463 = -1.*t404*t5799*t238;
  t6464 = t5801*t217*t238;
  t6465 = t6463 + t6464;
  t6451 = t6437 + t6424;
  t6480 = -1.*t5796*t5820*t6451;
  t6452 = 0.08*t6451;
  t6455 = -0.213*t5796*t6454;
  t6456 = t5796*t5817*t6454;
  t6457 = -1.*t5819*t5820*t6454;
  t6458 = t6456 + t6457;
  t6459 = -0.213*t6458;
  t6460 = t6452 + t6455 + t6459;
  t6461 = var2[15]*t6460;
  t6468 = t5797*t217*t238;
  t6490 = t404*t5797*t238;
  t6491 = t6490 + t6464;
  t6426 = -1.*t5816*t5819*t6425;
  t6428 = t6426 + t6427;
  t6479 = -1.*t5816*t5819*t6451;
  t6481 = t6479 + t6480;
  t6506 = t5801*t404*t1734;
  t6507 = t1734*t5799*t217;
  t6508 = 0. + t6506 + t6507;
  t6509 = -1.*t5819*t6508;
  t6510 = t5796*t5598;
  t6493 = -1.*t5801*t404*t238;
  t6528 = -1.*t5799*t217*t238;
  t6529 = t6493 + t6528;
  t6436 = -0.04675*t1734*t217;
  t6438 = -1.*t5811*t1734*t217;
  t6439 = t6437 + t6438;
  t6440 = 0.08*t6439;
  t6542 = t5796*t6443;
  t6543 = t5819*t238;
  t6544 = t6542 + t6543;
  t6462 = -0.04675*t404*t238;
  t6466 = -0.213*t5796*t6465;
  t6467 = -1.*t5811*t404*t238;
  t6469 = t6467 + t6468;
  t6470 = 0.08*t6469;
  t6471 = t5796*t5817*t6465;
  t6472 = -1.*t5819*t5820*t6465;
  t6473 = t6471 + t6472;
  t6474 = -0.213*t6473;
  t6475 = t6462 + t6466 + t6470 + t6474;
  t6492 = -0.213*t5796*t6491;
  t6494 = t6493 + t6468;
  t6495 = 0.08*t6494;
  t6496 = t5796*t5817*t6491;
  t6497 = -1.*t5819*t5820*t6491;
  t6498 = t6496 + t6497;
  t6499 = -0.213*t6498;
  t6500 = t6492 + t6495 + t6499;
  t6527 = -1.*t1734*t5819;
  t6530 = t5796*t6529;
  t6531 = t6527 + t6530;
  t6532 = -1.*t5820*t6531;
  t6533 = -1.*t5796*t1734;
  t6534 = -1.*t5819*t6529;
  t6535 = t6533 + t6534;
  t6536 = t5816*t6535;
  t6537 = t6532 + t6536;
  t6430 = 0.213*t5819*t6425;
  t6431 = -1.*t5817*t5819*t6425;
  t6432 = t6431 + t6427;
  t6433 = -0.213*t6432;
  t6434 = t6430 + t6433;
  t6483 = 0.213*t5819*t6451;
  t6484 = -1.*t5817*t5819*t6451;
  t6485 = t6484 + t6480;
  t6486 = -0.213*t6485;
  t6487 = t6483 + t6486;
  t6513 = -1.*t5796*t6508;
  t6514 = -1.*t5819*t5598;
  t6515 = t6513 + t6514;
  t6511 = t6509 + t6510;
  t6512 = -1.*t5820*t6511;
  t6516 = t5816*t6515;
  t6517 = t6512 + t6516;
  t6558 = -0.213*t6535;
  t6559 = t1734*t5819;
  t6560 = -1.*t5796*t6529;
  t6561 = t6559 + t6560;
  t6562 = t5820*t6561;
  t6563 = t5817*t6535;
  t6564 = t6562 + t6563;
  t6565 = -0.213*t6564;
  t6566 = t6558 + t6565;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=var2[3]*((t4565 - 0.213*t1006*t4617 + t4643 - 0.213*(t1006*t4418*t4617 - 1.*t1039*t4617*t841))*var2[3] + t4563*var2[4] + t4729*var2[5] + t4792*var2[6] + t4450*var2[7] - 0.213*t1093*var2[8]) + var2[6]*(t4792*var2[3] + t4890*var2[4] + t4971*var2[5] + (-0.08*t1351 - 0.213*t1006*t4896 - 0.213*(t1006*t4418*t4896 - 1.*t1039*t4896*t841))*var2[6] + t4821*var2[7] - 0.213*t1466*var2[8]) + var2[4]*(t4563*var2[3] + (0.04675*t152*t217*t238 + t5016 - 0.213*t5038 - 0.08*(-1.*t152*t217*t238*t4517 - 1.*t152*t238*t404*t724) - 0.213*(t4418*t5038 + t1039*(t5044 - 1.*t5035*t841)))*var2[4] + t5107*var2[5] + t4890*var2[6] + t5010*var2[7] - 0.213*t1881*var2[8]) + var2[5]*(t4729*var2[3] + t5107*var2[4] + (t4565 + t4643 + t5016 - 0.213*t5207 - 0.213*(t4418*t5207 + t1039*(t5044 - 1.*t4617*t841)))*var2[5] + t4971*var2[6] + t5144*var2[7] - 0.213*t2935*var2[8]) + var2[7]*(t4450*var2[3] + t5010*var2[4] + t5144*var2[5] + t4821*var2[6] + (-0.213*t4180 - 0.213*(t4180*t4418 + t1039*(-1.*t1006*t4150 + t3826*t841)))*var2[7] - 0.213*t4256*var2[8]) + var2[8]*(-0.213*t1093*var2[3] - 0.213*t1881*var2[4] - 0.213*t2935*var2[5] - 0.213*t1466*var2[6] - 0.213*t4256*var2[7] - 0.213*(-1.*t1039*(0. + t4232 + t4251) - 1.*(0. + t1006*t3826 + t4150*t841)*t9)*var2[8]);
  p_output1[7]=var2[3]*((-0.213*t1006*t2176 + t5372 + t5377 - 0.213*(t1006*t2176*t4418 - 1.*t1039*t2176*t841))*var2[3] + t5358*var2[4] + t5370*var2[5] + t5397*var2[6] + t5341*var2[7] - 0.213*t5230*var2[8]) + var2[6]*(t5397*var2[3] + t5418*var2[4] + t5428*var2[5] + (-0.08*t5234 - 0.213*t1006*t5432 - 0.213*(t1006*t4418*t5432 - 1.*t1039*t5432*t841))*var2[6] + t5407*var2[7] - 0.213*t5241*var2[8]) + var2[5]*(t5370*var2[3] + t5475*var2[4] + (-0.213*t2727 - 0.213*(t1039*t2196 + t2727*t4418) + t5372 + t5377 + t5477)*var2[5] + t5428*var2[6] + t5521*var2[7] - 0.213*t5263*var2[8]) + var2[4]*(t5358*var2[3] + (0.04675*t217*t238*t512 + t5477 - 0.213*t5491 - 0.08*(-1.*t217*t238*t4517*t512 - 1.*t238*t404*t512*t724) - 0.213*(t4418*t5491 + t1039*(t1916 - 1.*t5488*t841)))*var2[4] + t5475*var2[5] + t5418*var2[6] + t5456*var2[7] - 0.213*t5294*var2[8]) + var2[7]*(t5341*var2[3] + t5456*var2[4] + t5521*var2[5] + t5407*var2[6] + (-0.213*t5314 - 0.213*(t4418*t5314 + t1039*(-1.*t1006*t5312 + t5303*t841)))*var2[7] - 0.213*t5320*var2[8]) + var2[8]*(-0.213*t5230*var2[3] - 0.213*t5294*var2[4] - 0.213*t5263*var2[5] - 0.213*t5241*var2[6] - 0.213*t5320*var2[7] - 0.213*(-1.*t1039*(0. + t5316 + t5317) - 1.*(0. + t1006*t5303 + t5312*t841)*t9)*var2[8]);
  p_output1[8]=var2[3]*(t5693 + (t5639 - 0.213*t1006*t5644 + t5649 - 0.213*(t1006*t4418*t5644 - 1.*t1039*t5644*t841))*var2[3] + t5676*var2[4] + t5637*var2[7] - 0.213*t5570*var2[8]) + var2[6]*(t5693 + t5692*var2[3] + t5719*var2[4] + t5703*var2[7] - 0.213*t5577*var2[8]) + var2[4]*(t5676*var2[3] + (0.1881*t238 + t5639 + t5649 - 0.213*t5749 - 0.213*(t4418*t5749 + t1039*(t1006*t238 - 1.*t5644*t841)))*var2[4] + t5719*var2[6] + t5743*var2[7] - 0.213*t5591*var2[8]) + var2[7]*(t5637*var2[3] + t5743*var2[4] + t5703*var2[6] + (-0.213*t5600 - 0.213*(t4418*t5600 + t1039*(-1.*t1006*t5598 + t5595*t841)))*var2[7] - 0.213*t5606*var2[8]) + var2[8]*(-0.213*t5570*var2[3] - 0.213*t5591*var2[4] - 0.213*t5577*var2[6] - 0.213*t5606*var2[7] - 0.213*(-1.*t1039*(0. + t5602 + t5603) - 1.*(0. + t1006*t5595 + t5598*t841)*t9)*var2[8]);
  p_output1[9]=var2[4]*(t5825*var2[3] + (-0.04675*t152*t217*t238 + 0.08*(-1.*t152*t238*t404*t5797 - 1.*t152*t217*t238*t5811) + t5865 - 0.213*t5877 - 0.213*(t5817*t5877 + t5820*(-1.*t5819*t5874 + t5880)))*var2[4] + t5911*var2[5] + t5838*var2[15] + t5862*var2[16] - 0.213*t5852*var2[17]) + var2[15]*(t5950*var2[3] + t5838*var2[4] + t5980*var2[5] + (0.08*t5919 - 0.213*t5796*t5929 - 0.213*(t5796*t5817*t5929 - 1.*t5819*t5820*t5929))*var2[15] + t5957*var2[16] - 0.213*t5925*var2[17]) + var2[3]*((t6049 - 0.213*t5796*t6053 - 0.213*(t5796*t5817*t6053 - 1.*t5819*t5820*t6053) + t6058)*var2[3] + t5825*var2[4] + t6086*var2[5] + t5950*var2[15] + t6070*var2[16] - 0.213*t5997*var2[17]) + var2[17]*(-0.213*t5997*var2[3] - 0.213*t5852*var2[4] - 0.213*t6042*var2[5] - 0.213*t5925*var2[15] - 0.213*t6018*var2[16] - 0.213*(-1.*t5816*(0. + t4150*t5819 + t5796*t6007) - 1.*t5820*(0. + t6014 + t6015))*var2[17]) + var2[16]*(t6070*var2[3] + t5862*var2[4] + t6118*var2[5] + t5957*var2[15] + (-0.213*t6012 - 0.213*(t5820*(-1.*t4150*t5796 + t5819*t6007) + t5817*t6012))*var2[16] - 0.213*t6018*var2[17]) + var2[5]*(t6086*var2[3] + t5911*var2[4] + (t5865 + t6049 + t6058 - 0.213*t6099 - 0.213*(t5820*(t5880 - 1.*t5819*t6053) + t5817*t6099))*var2[5] + t5980*var2[15] + t6118*var2[16] - 0.213*t6042*var2[17]);
  p_output1[10]=var2[3]*((-0.213*t5796*t6032 - 0.213*(t5796*t5817*t6032 - 1.*t5819*t5820*t6032) + t6196 + t6201)*var2[3] + t6158*var2[4] + t6185*var2[5] + t6225*var2[15] + t6194*var2[16] - 0.213*t6170*var2[17]) + var2[4]*(t6158*var2[3] + (-0.04675*t217*t238*t512 + 0.08*(-1.*t238*t404*t512*t5797 - 1.*t217*t238*t512*t5811) + t6361 - 0.213*t6371 - 0.213*(t5820*(t6037 - 1.*t5819*t6369) + t5817*t6371))*var2[4] + t6347*var2[5] + t6305*var2[15] + t6359*var2[16] - 0.213*t6247*var2[17]) + var2[15]*(t6225*var2[3] + t6305*var2[4] + t6316*var2[5] + (0.08*t6251 - 0.213*t5796*t6326 - 0.213*(t5796*t5817*t6326 - 1.*t5819*t5820*t6326))*var2[15] + t6323*var2[16] - 0.213*t6256*var2[17]) + var2[5]*(t6185*var2[3] + t6347*var2[4] + (-0.213*t6035 - 0.213*(t5817*t6035 + t5820*t6040) + t6196 + t6201 + t6361)*var2[5] + t6316*var2[15] + t6394*var2[16] - 0.213*t6271*var2[17]) + var2[17]*(-0.213*t6170*var2[3] - 0.213*t6247*var2[4] - 0.213*t6271*var2[5] - 0.213*t6256*var2[15] - 0.213*t6284*var2[16] - 0.213*(-1.*t5816*(0. + t5312*t5819 + t5796*t6276) - 1.*t5820*(0. + t6280 + t6281))*var2[17]) + var2[16]*(t6194*var2[3] + t6359*var2[4] + t6394*var2[5] + t6323*var2[15] + (-0.213*t6278 - 0.213*(t5820*(-1.*t5312*t5796 + t5819*t6276) + t5817*t6278))*var2[16] - 0.213*t6284*var2[17]);
  p_output1[11]=var2[3]*(t6461 + (t6436 + t6440 - 0.213*t5796*t6443 - 0.213*(t5796*t5817*t6443 - 1.*t5819*t5820*t6443))*var2[3] + t6475*var2[4] + t6434*var2[16] - 0.213*t6428*var2[17]) + var2[15]*(t6461 + t6460*var2[3] + t6500*var2[4] + t6487*var2[16] - 0.213*t6481*var2[17]) + var2[17]*(-0.213*t6428*var2[3] - 0.213*t6537*var2[4] - 0.213*t6481*var2[15] - 0.213*t6517*var2[16] - 0.213*(-1.*t5816*(0. + t5598*t5819 + t5796*t6508) - 1.*t5820*(0. + t6509 + t6510))*var2[17]) + var2[16]*(t6434*var2[3] + t6566*var2[4] + t6487*var2[15] + (-0.213*t6515 - 0.213*(t5820*(-1.*t5598*t5796 + t5819*t6508) + t5817*t6515))*var2[16] - 0.213*t6517*var2[17]) + var2[4]*(t6475*var2[3] + (-0.1881*t238 + t6436 + t6440 - 0.213*t6544 - 0.213*(t5820*(t238*t5796 - 1.*t5819*t6443) + t5817*t6544))*var2[4] + t6500*var2[15] + t6566*var2[16] - 0.213*t6537*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 12, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_trotting_2_func.hh"

namespace SymFunction
{

void jj_hc_trotting_2_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
