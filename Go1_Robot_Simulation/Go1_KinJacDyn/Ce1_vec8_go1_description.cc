/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:27:05 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t130;
  double t141;
  double t190;
  double t135;
  double t145;
  double t193;
  double t319;
  double t378;
  double t323;
  double t343;
  double t429;
  double t444;
  double t449;
  double t452;
  double t363;
  double t367;
  double t397;
  double t400;
  double t524;
  double t528;
  double t529;
  double t656;
  double t697;
  double t421;
  double t423;
  double t461;
  double t469;
  double t482;
  double t485;
  double t503;
  double t567;
  double t576;
  double t577;
  double t583;
  double t591;
  double t595;
  double t604;
  double t886;
  double t887;
  double t891;
  double t939;
  double t945;
  double t946;
  double t1168;
  double t1172;
  double t1177;
  double t1134;
  double t1140;
  double t1149;
  double t1162;
  double t1314;
  double t1326;
  double t1271;
  double t1287;
  double t1298;
  double t992;
  double t1005;
  double t1008;
  double t1178;
  double t1181;
  double t1198;
  double t1199;
  double t1209;
  double t1214;
  double t1225;
  double t1395;
  double t1411;
  double t836;
  double t850;
  double t862;
  double t163;
  double t216;
  double t261;
  double t292;
  double t297;
  double t306;
  double t521;
  double t537;
  double t556;
  double t615;
  double t622;
  double t624;
  double t1082;
  double t833;
  double t866;
  double t870;
  double t875;
  double t908;
  double t911;
  double t916;
  double t955;
  double t958;
  double t987;
  double t1045;
  double t1050;
  double t1083;
  double t1086;
  double t1090;
  double t1871;
  double t1872;
  double t1878;
  double t1908;
  double t1909;
  double t1912;
  double t1981;
  double t1982;
  double t1987;
  double t1993;
  double t1248;
  double t1253;
  double t1301;
  double t1307;
  double t1327;
  double t1330;
  double t1347;
  double t1349;
  double t1352;
  double t1930;
  double t1932;
  double t1938;
  double t1994;
  double t1996;
  double t2000;
  double t2006;
  double t2007;
  double t2011;
  double t2020;
  double t2025;
  double t2028;
  double t2029;
  double t1415;
  double t1416;
  double t1419;
  double t1493;
  double t1503;
  double t1504;
  double t1536;
  double t1538;
  double t1543;
  double t1557;
  double t1559;
  double t1562;
  double t1714;
  double t1717;
  double t1724;
  double t1733;
  double t1749;
  double t1756;
  double t1765;
  double t1785;
  double t1794;
  double t1802;
  double t1812;
  double t1823;
  double t1835;
  double t1836;
  double t1971;
  double t1973;
  double t1976;
  double t2039;
  double t2046;
  double t2049;
  double t1959;
  double t1963;
  double t1964;
  double t2321;
  double t2330;
  double t2331;
  double t2334;
  double t2335;
  double t2337;
  double t2341;
  double t2351;
  double t2436;
  double t2437;
  double t2440;
  double t2429;
  double t2430;
  double t2433;
  double t2435;
  double t2442;
  double t2447;
  double t2450;
  double t2457;
  double t2458;
  double t2465;
  double t2468;
  double t2469;
  double t2481;
  double t2483;
  double t2487;
  double t2488;
  double t2498;
  double t2502;
  double t2508;
  double t2510;
  double t2511;
  double t2408;
  double t2409;
  double t2410;
  double t2517;
  double t2527;
  double t2532;
  double t2563;
  double t2565;
  double t2568;
  double t2604;
  double t2608;
  double t2617;
  double t2574;
  double t2587;
  double t2589;
  double t2547;
  double t2548;
  double t2550;
  double t2420;
  double t2421;
  double t2422;
  double t1109;
  double t1111;
  double t1116;
  double t2875;
  double t2880;
  double t2885;
  double t2890;
  double t2872;
  double t2895;
  double t2897;
  double t2903;
  double t2904;
  double t2905;
  double t2912;
  double t2918;
  double t2920;
  double t2925;
  double t2947;
  double t2950;
  double t2968;
  double t2969;
  double t3013;
  double t3014;
  double t2994;
  double t2995;
  double t2998;
  double t3070;
  double t3045;
  double t2901;
  double t2974;
  double t2981;
  double t3104;
  double t3115;
  double t3126;
  double t1355;
  double t1361;
  double t1364;
  double t673;
  double t698;
  double t705;
  double t2600;
  double t2601;
  double t2625;
  double t2627;
  double t3315;
  double t3316;
  double t3318;
  double t3347;
  double t3349;
  double t3360;
  double t3378;
  double t3397;
  double t2631;
  double t2632;
  double t2634;
  double t2636;
  double t3415;
  double t3418;
  double t3420;
  double t3362;
  double t3406;
  double t3407;
  double t2771;
  double t2772;
  double t2776;
  double t2787;
  double t721;
  double t722;
  double t723;
  double t3327;
  double t3330;
  double t3336;
  double t3452;
  double t2799;
  double t2801;
  double t2805;
  double t2807;
  double t761;
  double t766;
  double t769;
  double t784;
  double t787;
  double t801;
  double t3100;
  double t3101;
  double t3128;
  double t3130;
  double t3591;
  double t3592;
  double t3593;
  double t3603;
  double t3604;
  double t3618;
  double t3620;
  double t3621;
  double t3594;
  double t3605;
  double t3612;
  double t3148;
  double t3150;
  double t3160;
  double t3162;
  double t3209;
  double t3211;
  double t3212;
  double t3241;
  double t3277;
  double t3281;
  double t3282;
  double t3283;
  double t3797;
  double t3805;
  double t3808;
  double t3965;
  double t3969;
  double t3975;
  double t3963;
  double t4111;
  double t4114;
  double t4120;
  double t4104;
  double t4122;
  double t4128;
  double t4147;
  double t4149;
  double t4153;
  double t4138;
  double t4140;
  double t4144;
  double t4131;
  double t4132;
  double t4134;
  double t1095;
  double t1098;
  double t4231;
  double t4232;
  double t4233;
  double t4235;
  double t4227;
  double t4230;
  double t4236;
  double t4241;
  double t4278;
  double t4280;
  double t4282;
  double t4270;
  double t4271;
  double t4274;
  double t4247;
  double t4254;
  double t4262;
  double t4223;
  double t4224;
  double t4225;
  double t4421;
  double t4422;
  double t4427;
  double t4429;
  double t4430;
  double t4439;
  double t4440;
  double t4447;
  double t4448;
  double t4294;
  double t4474;
  double t4478;
  double t4481;
  double t4307;
  double t4311;
  double t4461;
  double t4463;
  double t4469;
  double t4449;
  double t4453;
  double t4454;
  double t4350;
  double t4354;
  double t4362;
  double t4374;
  double t3438;
  double t3454;
  double t3469;
  double t3475;
  double t3514;
  double t3523;
  double t4564;
  double t3551;
  double t3555;
  double t3634;
  double t3635;
  double t3642;
  double t3654;
  double t3709;
  double t3711;
  double t3730;
  double t3738;
  double t4548;
  double t4550;
  double t4551;
  double t3814;
  double t3828;
  double t3847;
  double t4575;
  double t4576;
  double t4586;
  double t3900;
  double t4624;
  double t4625;
  double t4627;
  double t4640;
  double t4641;
  double t4646;
  double t3920;
  double t3922;
  double t4683;
  double t4684;
  double t4686;
  double t3964;
  double t3987;
  double t4007;
  double t4012;
  double t4717;
  double t4719;
  double t4720;
  double t4038;
  double t4041;
  double t4735;
  double t4736;
  double t4739;
  double t4799;
  double t4807;
  double t4809;
  double t4052;
  double t4059;
  double t4154;
  double t4165;
  double t4166;
  double t4192;
  double t4978;
  double t4197;
  double t4199;
  double t4284;
  double t4305;
  double t4345;
  double t4353;
  double t5065;
  double t5068;
  double t5073;
  double t4482;
  double t5103;
  double t5112;
  double t4487;
  double t4505;
  double t5137;
  double t5149;
  double t4510;
  double t5156;
  double t4632;
  double t4633;
  double t4651;
  double t4652;
  double t4601;
  double t4603;
  double t4566;
  double t4567;
  double t5480;
  double t4751;
  double t4767;
  double t4696;
  double t4704;
  double t5391;
  double t5396;
  double t4980;
  double t4982;
  double t5313;
  double t5317;
  double t5449;
  double t5454;
  double t5034;
  double t5651;
  double t5482;
  double t5483;
  double t5485;
  double t5105;
  double t5542;
  double t5543;
  double t5545;
  double t5139;
  double t5690;
  double t5698;
  double t5500;
  double t5504;
  double t5505;
  double t5506;
  double t5600;
  double t5601;
  double t5602;
  double t5613;
  double t5699;
  double t5700;
  double t5711;
  double t5726;
  double t5228;
  double t5766;
  double t5774;
  double t5271;
  double t5783;
  double t5785;
  double t5912;
  double t5916;
  double t5917;
  double t5918;
  double t5926;
  double t5927;
  double t5930;
  t130 = Cos(var1[4]);
  t141 = Cos(var1[7]);
  t190 = Sin(var1[5]);
  t135 = Cos(var1[5]);
  t145 = Sin(var1[6]);
  t193 = Sin(var1[7]);
  t319 = Cos(var1[8]);
  t378 = Sin(var1[8]);
  t323 = -1.*t319;
  t343 = 1. + t323;
  t429 = 0.1881*t343;
  t444 = 0.194386*t319;
  t449 = -0.12226899999999999*t378;
  t452 = t429 + t444 + t449;
  t363 = -0.213*t343;
  t367 = -0.335269*t319;
  t397 = -0.006286*t378;
  t400 = t363 + t367 + t397;
  t524 = t141*t319;
  t528 = -1.*t193*t378;
  t529 = t524 + t528;
  t656 = Cos(var1[6]);
  t697 = Sin(var1[4]);
  t421 = t319*t400;
  t423 = -0.1881*t378;
  t461 = t452*t378;
  t469 = 0. + t421 + t423 + t461;
  t482 = -1.*t319*t193;
  t485 = -1.*t141*t378;
  t503 = t482 + t485;
  t567 = 0.1881*t319;
  t576 = -1.*t319*t452;
  t577 = t400*t378;
  t583 = 0. + t567 + t576 + t577;
  t591 = t319*t193;
  t595 = t141*t378;
  t604 = t591 + t595;
  t886 = t135*t141;
  t887 = -1.*t190*t145*t193;
  t891 = t886 + t887;
  t939 = t190*t145*t503;
  t945 = t135*t529;
  t946 = t939 + t945;
  t1168 = -1.*t141*t319;
  t1172 = t193*t378;
  t1177 = t1168 + t1172;
  t1134 = t656*t697*t503;
  t1140 = t130*t946;
  t1149 = t1134 + t1140;
  t1162 = 0.158015*t583*t1149;
  t1314 = -0.12226899999999999*t319;
  t1326 = t1314 + t397;
  t1271 = -0.006286*t319;
  t1287 = 0.12226899999999999*t378;
  t1298 = t1271 + t1287;
  t992 = t135*t604;
  t1005 = t190*t145*t529;
  t1008 = t992 + t1005;
  t1178 = t656*t697*t1177;
  t1181 = t135*t503;
  t1198 = t190*t145*t1177;
  t1199 = t1181 + t1198;
  t1209 = t130*t1199;
  t1214 = t1178 + t1209;
  t1225 = 0.158015*t469*t1214;
  t1395 = Cos(var1[3]);
  t1411 = Sin(var1[3]);
  t836 = t141*t190*t145;
  t850 = t135*t193;
  t862 = t836 + t850;
  t163 = t135*t141*t145;
  t216 = -1.*t190*t193;
  t261 = t163 + t216;
  t292 = -1.*t141*t190;
  t297 = -1.*t135*t145*t193;
  t306 = t292 + t297;
  t521 = t135*t145*t503;
  t537 = -1.*t190*t529;
  t556 = t521 + t537;
  t615 = -1.*t190*t604;
  t622 = t135*t145*t529;
  t624 = t615 + t622;
  t1082 = -1.*t656*t141*t697;
  t833 = t130*t656*t141;
  t866 = -1.*t697*t862;
  t870 = t833 + t866;
  t875 = -1.*t130*t656*t193;
  t908 = -1.*t697*t891;
  t911 = t875 + t908;
  t916 = t130*t656*t503;
  t955 = -1.*t697*t946;
  t958 = t916 + t955;
  t987 = t130*t656*t529;
  t1045 = -1.*t697*t1008;
  t1050 = t987 + t1045;
  t1083 = -1.*t141*t190*t145;
  t1086 = -1.*t135*t193;
  t1090 = t1083 + t1086;
  t1871 = t141*t190;
  t1872 = t135*t145*t193;
  t1878 = t1871 + t1872;
  t1908 = -1.*t135*t145*t503;
  t1909 = t190*t529;
  t1912 = t1908 + t1909;
  t1981 = t1395*t1912;
  t1982 = -1.*t1411*t958;
  t1987 = t1981 + t1982;
  t1993 = 0.158015*t583*t1987;
  t1248 = -0.1881*t319;
  t1253 = t319*t452;
  t1301 = t319*t1298;
  t1307 = -1.*t400*t378;
  t1327 = t1326*t378;
  t1330 = t1248 + t1253 + t1301 + t1307 + t1327;
  t1347 = -1.*t319*t1326;
  t1349 = t1298*t378;
  t1352 = t421 + t1347 + t423 + t461 + t1349;
  t1930 = t190*t604;
  t1932 = -1.*t135*t145*t529;
  t1938 = t1930 + t1932;
  t1994 = t190*t503;
  t1996 = -1.*t135*t145*t1177;
  t2000 = t1994 + t1996;
  t2006 = t1395*t2000;
  t2007 = t130*t656*t1177;
  t2011 = -1.*t697*t1199;
  t2020 = t2007 + t2011;
  t2025 = -1.*t1411*t2020;
  t2028 = t2006 + t2025;
  t2029 = 0.158015*t469*t2028;
  t1415 = -1.*t656*t141*t697*t190;
  t1416 = -1.*t130*t141*t145;
  t1419 = t1415 + t1416;
  t1493 = t656*t697*t190*t193;
  t1503 = t130*t145*t193;
  t1504 = t1493 + t1503;
  t1536 = -1.*t656*t697*t190*t503;
  t1538 = -1.*t130*t145*t503;
  t1543 = t1536 + t1538;
  t1557 = -1.*t656*t697*t190*t529;
  t1559 = -1.*t130*t145*t529;
  t1562 = t1557 + t1559;
  t1714 = -1.*t130*t862;
  t1717 = t1082 + t1714;
  t1724 = t656*t697*t193;
  t1733 = -1.*t130*t891;
  t1749 = t1724 + t1733;
  t1756 = -1.*t656*t697*t503;
  t1765 = -1.*t130*t946;
  t1785 = t1756 + t1765;
  t1794 = -1.*t656*t697*t529;
  t1802 = -1.*t130*t1008;
  t1812 = t1794 + t1802;
  t1823 = -1.*t135*t141*t145;
  t1835 = t190*t193;
  t1836 = t1823 + t1835;
  t1971 = t1395*t1878;
  t1973 = -1.*t1411*t911;
  t1976 = t1971 + t1973;
  t2039 = t1395*t1938;
  t2046 = -1.*t1411*t1050;
  t2049 = t2039 + t2046;
  t1959 = -1.*t130*t656*t141;
  t1963 = -1.*t697*t1090;
  t1964 = t1959 + t1963;
  t2321 = t1411*t1912;
  t2330 = t1395*t958;
  t2331 = t2321 + t2330;
  t2334 = 0.158015*t583*t2331;
  t2335 = t1411*t2000;
  t2337 = t1395*t2020;
  t2341 = t2335 + t2337;
  t2351 = 0.158015*t469*t2341;
  t2436 = -0.032736*t141;
  t2437 = 0.003468*t193;
  t2440 = t2436 + t2437;
  t2429 = -1.*t656;
  t2430 = 1. + t2429;
  t2433 = -0.04675*t2430;
  t2435 = -0.107803*t656;
  t2442 = -1.*t145*t2440;
  t2447 = t2433 + t2435 + t2442;
  t2450 = -1.*t190*t2447;
  t2457 = -1.*t141;
  t2458 = 1. + t2457;
  t2465 = 0.1881*t2458;
  t2468 = 0.184632*t141;
  t2469 = -0.032736*t193;
  t2481 = t2465 + t2468 + t2469;
  t2483 = t135*t2481;
  t2487 = t2450 + t2483;
  t2488 = -1.*t697*t2487;
  t2498 = -0.061053*t145;
  t2502 = t656*t2440;
  t2508 = t2498 + t2502;
  t2510 = t130*t2508;
  t2511 = t2488 + t2510;
  t2408 = t656*t697*t190;
  t2409 = t130*t145;
  t2410 = t2408 + t2409;
  t2517 = -1.*t130*t656*t190;
  t2527 = t697*t145;
  t2532 = t2517 + t2527;
  t2563 = t130*t2487;
  t2565 = t697*t2508;
  t2568 = t2563 + t2565;
  t2604 = t135*t2447;
  t2608 = t190*t2481;
  t2617 = t2604 + t2608;
  t2574 = t656*t141*t697;
  t2587 = t130*t862;
  t2589 = t2574 + t2587;
  t2547 = -1.*t130*t2487;
  t2548 = -1.*t697*t2508;
  t2550 = t2547 + t2548;
  t2420 = t130*t656*t190;
  t2421 = -1.*t697*t145;
  t2422 = t2420 + t2421;
  t1109 = -1.*t656*t697*t193;
  t1111 = t130*t891;
  t1116 = t1109 + t1111;
  t2875 = 0.1881*t193;
  t2880 = -1.*t193*t452;
  t2885 = t141*t400;
  t2890 = 0. + t2875 + t2880 + t2885;
  t2872 = -0.078693*t145;
  t2895 = t656*t2890;
  t2897 = 0. + t2872 + t2895;
  t2903 = -0.04675*t2430;
  t2904 = -0.125443*t656;
  t2905 = -1.*t145*t2890;
  t2912 = t2903 + t2904 + t2905;
  t2918 = -1.*t190*t2912;
  t2920 = 0.1881*t2458;
  t2925 = t141*t452;
  t2947 = t193*t400;
  t2950 = 0. + t2920 + t2925 + t2947;
  t2968 = t135*t2950;
  t2969 = 0. + t2918 + t2968;
  t3013 = t130*t2897;
  t3014 = -1.*t697*t2969;
  t2994 = t697*t2897;
  t2995 = t130*t2969;
  t2998 = 0. + t2994 + t2995;
  t3070 = 0. + t3013 + t3014;
  t3045 = t3013 + t3014;
  t2901 = -1.*t697*t2897;
  t2974 = -1.*t130*t2969;
  t2981 = t2901 + t2974;
  t3104 = t135*t2912;
  t3115 = t190*t2950;
  t3126 = 0. + t3104 + t3115;
  t1355 = t656*t697*t529;
  t1361 = t130*t1008;
  t1364 = t1355 + t1361;
  t673 = t130*t656*t141*t190;
  t698 = -1.*t141*t697*t145;
  t705 = t673 + t698;
  t2600 = -1.*t2410*t2511;
  t2601 = -1.*t2532*t2568;
  t2625 = -1.*t135*t656*t2617;
  t2627 = t2600 + t2601 + t2625;
  t3315 = t656*t697;
  t3316 = t130*t190*t145;
  t3318 = t3315 + t3316;
  t3347 = 0.061053*t145;
  t3349 = -1.*t656*t2440;
  t3360 = t3347 + t3349;
  t3378 = -0.061053*t656;
  t3397 = t3378 + t2442;
  t2631 = t2617*t1836;
  t2632 = t2568*t2589;
  t2634 = t2511*t870;
  t2636 = t2631 + t2632 + t2634;
  t3415 = -1.*t130*t190*t3360;
  t3418 = t697*t3397;
  t3420 = t3415 + t3418;
  t3362 = t697*t190*t3360;
  t3406 = t130*t3397;
  t3407 = t3362 + t3406;
  t2771 = t2410*t2511;
  t2772 = t2532*t2568;
  t2776 = t135*t656*t2617;
  t2787 = t2771 + t2772 + t2776;
  t721 = -1.*t130*t656*t190*t193;
  t722 = t697*t145*t193;
  t723 = t721 + t722;
  t3327 = t130*t656;
  t3330 = -1.*t697*t190*t145;
  t3336 = t3327 + t3330;
  t3452 = Power(t135,2);
  t2799 = -1.*t2617*t1878;
  t2801 = -1.*t2568*t1116;
  t2805 = -1.*t2511*t911;
  t2807 = t2799 + t2801 + t2805;
  t761 = t130*t656*t190*t503;
  t766 = -1.*t697*t145*t503;
  t769 = t761 + t766;
  t784 = t130*t656*t190*t529;
  t787 = -1.*t697*t145*t529;
  t801 = t784 + t787;
  t3100 = t2532*t2998;
  t3101 = t2410*t3070;
  t3128 = t135*t656*t3126;
  t3130 = t3100 + t3101 + t3128;
  t3591 = 0.078693*t145;
  t3592 = -1.*t656*t2890;
  t3593 = t3591 + t3592;
  t3603 = -0.078693*t656;
  t3604 = t3603 + t2905;
  t3618 = -1.*t130*t190*t3593;
  t3620 = t697*t3604;
  t3621 = t3618 + t3620;
  t3594 = t697*t190*t3593;
  t3605 = t130*t3604;
  t3612 = t3594 + t3605;
  t3148 = -1.*t3126*t1912;
  t3150 = -1.*t2998*t1149;
  t3160 = -1.*t3070*t958;
  t3162 = t3148 + t3150 + t3160;
  t3209 = -1.*t2532*t2998;
  t3211 = -1.*t2410*t3070;
  t3212 = -1.*t135*t656*t3126;
  t3241 = t3209 + t3211 + t3212;
  t3277 = t3126*t1938;
  t3281 = t2998*t1364;
  t3282 = t3070*t1050;
  t3283 = t3277 + t3281 + t3282;
  t3797 = -1.*t135*t2447;
  t3805 = -1.*t190*t2481;
  t3808 = t3797 + t3805;
  t3965 = -1.*t135*t2912;
  t3969 = -1.*t190*t2950;
  t3975 = t3965 + t3969;
  t3963 = t2918 + t2968;
  t4111 = 0.003468*t141;
  t4114 = 0.032736*t193;
  t4120 = t4111 + t4114;
  t4104 = t135*t2440;
  t4122 = t190*t145*t4120;
  t4128 = t4104 + t4122;
  t4147 = t190*t2440;
  t4149 = -1.*t135*t145*t4120;
  t4153 = t4147 + t4149;
  t4138 = t130*t4128;
  t4140 = t656*t697*t4120;
  t4144 = t4138 + t4140;
  t4131 = -1.*t697*t4128;
  t4132 = t130*t656*t4120;
  t4134 = t4131 + t4132;
  t1095 = t130*t1090;
  t1098 = t1082 + t1095;
  t4231 = 0.1881*t141;
  t4232 = -1.*t141*t452;
  t4233 = -1.*t193*t400;
  t4235 = t4231 + t4232 + t4233;
  t4227 = t2875 + t2880 + t2885;
  t4230 = t135*t4227;
  t4236 = t190*t145*t4235;
  t4241 = t4230 + t4236;
  t4278 = t190*t4227;
  t4280 = -1.*t135*t145*t4235;
  t4282 = t4278 + t4280;
  t4270 = t130*t4241;
  t4271 = t656*t697*t4235;
  t4274 = t4270 + t4271;
  t4247 = -1.*t697*t4241;
  t4254 = t130*t656*t4235;
  t4262 = t4247 + t4254;
  t4223 = -0.000029*t1149;
  t4224 = 1.e-6*t1214;
  t4225 = t3241*t1149;
  t4421 = -1.*t193*t1326;
  t4422 = t141*t1298;
  t4427 = t4421 + t4422;
  t4429 = t190*t145*t4427;
  t4430 = t141*t1326;
  t4439 = t193*t1298;
  t4440 = t4430 + t4439;
  t4447 = t135*t4440;
  t4448 = t4429 + t4447;
  t4294 = t3126*t1912;
  t4474 = -1.*t135*t145*t4427;
  t4478 = t190*t4440;
  t4481 = t4474 + t4478;
  t4307 = t2998*t1149;
  t4311 = t3070*t958;
  t4461 = t130*t4448;
  t4463 = t656*t697*t4427;
  t4469 = t4461 + t4463;
  t4449 = -1.*t697*t4448;
  t4453 = t130*t656*t4427;
  t4454 = t4449 + t4453;
  t4350 = t3130*t1214;
  t4354 = -1.*t3126*t2000;
  t4362 = -1.*t2998*t1214;
  t4374 = -1.*t3070*t2020;
  t3438 = t135*t145*t2617;
  t3454 = -1.*t3452*t656*t3360;
  t3469 = -1.*t135*t656*t141*t2617;
  t3475 = t135*t3360*t1836;
  t3514 = -1.*t135*t145*t2617;
  t3523 = t3452*t656*t3360;
  t4564 = Power(t190,2);
  t3551 = -1.*t135*t656*t2617*t193;
  t3555 = -1.*t135*t3360*t1878;
  t3634 = t3452*t656*t3593;
  t3635 = -1.*t135*t145*t3126;
  t3642 = t135*t656*t3126*t503;
  t3654 = -1.*t135*t3593*t1912;
  t3709 = -1.*t3452*t656*t3593;
  t3711 = t135*t145*t3126;
  t3730 = -1.*t135*t656*t3126*t529;
  t3738 = t135*t3593*t1938;
  t4548 = t656*t190*t2487;
  t4550 = -1.*t145*t2508;
  t4551 = t4548 + t2625 + t4550;
  t3814 = t656*t190*t2617;
  t3828 = t2617*t862;
  t3847 = t2487*t1836;
  t4575 = t656*t141*t2508;
  t4576 = t2487*t862;
  t4586 = t4575 + t4576 + t2631;
  t3900 = -1.*t656*t190*t2617;
  t4624 = -1.*t656*t190*t2487;
  t4625 = t145*t2508;
  t4627 = t4624 + t2776 + t4625;
  t4640 = t656*t2508*t193;
  t4641 = -1.*t2487*t891;
  t4646 = t4640 + t2799 + t4641;
  t3920 = -1.*t2487*t1878;
  t3922 = -1.*t2617*t891;
  t4683 = t145*t2897;
  t4684 = -1.*t656*t190*t2969;
  t4686 = t4683 + t4684 + t3128;
  t3964 = t135*t656*t3963;
  t3987 = -1.*t656*t190*t3126;
  t4007 = -1.*t3126*t946;
  t4012 = -1.*t3963*t1912;
  t4717 = -1.*t656*t2897*t503;
  t4719 = -1.*t2969*t946;
  t4720 = t4717 + t4719 + t3148;
  t4038 = -1.*t135*t656*t3963;
  t4041 = t656*t190*t3126;
  t4735 = -1.*t145*t2897;
  t4736 = t656*t190*t2969;
  t4739 = t4735 + t4736 + t3212;
  t4799 = t656*t2897*t529;
  t4807 = t2969*t1008;
  t4809 = t4799 + t3277 + t4807;
  t4052 = t3963*t1938;
  t4059 = t3126*t1008;
  t4154 = -1.*t135*t656*t4153;
  t4165 = t4153*t1836;
  t4166 = t2617*t1878;
  t4192 = t135*t656*t4153;
  t4978 = Power(t656,2);
  t4197 = -1.*t2617*t261;
  t4199 = -1.*t4153*t1878;
  t4284 = -1.*t135*t656*t4282;
  t4305 = t4282*t1938;
  t4345 = t135*t656*t4282;
  t4353 = -1.*t4282*t1912;
  t5065 = -0.000029*t1912;
  t5068 = 1.e-6*t2000;
  t5073 = t4739*t1912;
  t4482 = -1.*t135*t656*t4481;
  t5103 = t656*t2897*t503;
  t5112 = t2969*t946;
  t4487 = t4481*t1938;
  t4505 = t135*t656*t4481;
  t5137 = t4686*t2000;
  t5149 = -1.*t656*t2897*t1177;
  t4510 = -1.*t4481*t1912;
  t5156 = -1.*t2969*t1199;
  t4632 = t656*t2508;
  t4633 = t145*t3397;
  t4651 = -1.*t145*t2508*t193;
  t4652 = t656*t3397*t193;
  t4601 = -1.*t141*t145*t2508;
  t4603 = t656*t141*t3397;
  t4566 = -1.*t656*t2508;
  t4567 = -1.*t145*t3397;
  t5480 = t2872 + t2895;
  t4751 = -1.*t145*t3604;
  t4767 = t656*t3604*t529;
  t4696 = t145*t3604;
  t4704 = -1.*t656*t3604*t503;
  t5391 = -1.*t656*t2447;
  t5396 = t4550 + t5391;
  t4980 = t4978*t141*t4120;
  t4982 = -1.*t656*t2508*t193;
  t5313 = t656*t2447;
  t5317 = t4625 + t5313;
  t5449 = -1.*t141*t145*t2447;
  t5454 = t2481*t193;
  t5034 = t4978*t4120*t193;
  t5651 = Power(t145,2);
  t5482 = -1.*t145*t5480;
  t5483 = -1.*t656*t2912;
  t5485 = t5482 + t5483;
  t5105 = t4978*t4235*t529;
  t5542 = t145*t5480;
  t5543 = t656*t2912;
  t5545 = t5542 + t5543;
  t5139 = -1.*t4978*t4235*t503;
  t5690 = -0.000029*t656*t503;
  t5698 = 1.e-6*t656*t1177;
  t5500 = t2950*t604;
  t5504 = t656*t5480*t529;
  t5505 = -1.*t145*t2912*t529;
  t5506 = t5500 + t5504 + t5505;
  t5600 = -1.*t656*t5480*t503;
  t5601 = t145*t2912*t503;
  t5602 = -1.*t2950*t529;
  t5613 = t5600 + t5601 + t5602;
  t5699 = t656*t5485*t503;
  t5700 = t656*t5480*t503;
  t5711 = -1.*t145*t2912*t503;
  t5726 = t2950*t529;
  t5228 = t4978*t4427*t529;
  t5766 = t656*t5545*t1177;
  t5774 = -1.*t2950*t503;
  t5271 = -1.*t4978*t4427*t503;
  t5783 = -1.*t656*t5480*t1177;
  t5785 = t145*t2912*t1177;
  t5912 = 1.e-6*t503;
  t5916 = -0.000029*t529;
  t5917 = -0.012434674395*t503*t583;
  t5918 = 0.125443*t529;
  t5926 = 0.04675*t1177;
  t5927 = t5918 + t5926;
  t5930 = 0.158015*t469*t5927;
  p_output1[0]=var2[7]*(-0.5*(0.158015*t1050*t583 + 0.0031174510920000003*t870 - 0.029427012384*t911 + 0.158015*t469*t958)*var2[4] - 0.5*(0.0031174510920000003*t130*t261 - 0.029427012384*t130*t306 + 0.158015*t130*t469*t556 + 0.158015*t130*t583*t624)*var2[5] - 0.5*(0.0031174510920000003*t705 - 0.029427012384*t723 + 0.158015*t469*t769 + 0.158015*t583*t801)*var2[6] - 0.5*(-0.029427012384*t1098 + 0.0031174510920000003*t1116 + t1162 + t1225)*var2[7] - 0.5*(t1162 + t1225 + 0.158015*t1149*t1330 + 0.158015*t1352*t1364)*var2[8]);
  p_output1[1]=var2[7]*(-0.5*(0.158015*(-1.*t1050*t1395 - 1.*t1411*t1938)*t583 + 0.0031174510920000003*(-1.*t1411*t1836 - 1.*t1395*t870) - 0.029427012384*(-1.*t1411*t1878 - 1.*t1395*t911) + 0.158015*t469*(-1.*t1411*t1912 - 1.*t1395*t958))*var2[3] - 0.5*(-0.0031174510920000003*t1411*t1717 + 0.029427012384*t1411*t1749 - 0.158015*t1411*t1785*t469 - 0.158015*t1411*t1812*t583)*var2[4] - 0.5*(0.158015*t583*(t1008*t1395 + t1411*t624*t697) + 0.0031174510920000003*(t1411*t261*t697 + t1395*t862) - 0.029427012384*(t1411*t306*t697 + t1395*t891) + 0.158015*t469*(t1411*t556*t697 + t1395*t946))*var2[5] - 0.5*(0.0031174510920000003*(-1.*t1411*t1419 - 1.*t135*t1395*t141*t656) - 0.029427012384*(-1.*t1411*t1504 + t135*t1395*t193*t656) + 0.158015*t469*(-1.*t1411*t1543 - 1.*t135*t1395*t503*t656) + 0.158015*t583*(-1.*t1411*t1562 - 1.*t135*t1395*t529*t656))*var2[6] - 0.5*(0.0031174510920000003*t1976 + t1993 + t2029 - 0.029427012384*(-1.*t1411*t1964 + t1395*t261))*var2[7] - 0.5*(0.158015*t1330*t1987 + t1993 + t2029 + 0.158015*t1352*t2049)*var2[8]);
  p_output1[2]=var2[7]*(-0.5*(-0.029427012384*t1976 + 0.158015*t1987*t469 + 0.158015*t2049*t583 + 0.0031174510920000003*(t1395*t1836 - 1.*t1411*t870))*var2[3] - 0.5*(0.0031174510920000003*t1395*t1717 - 0.029427012384*t1395*t1749 + 0.158015*t1395*t1785*t469 + 0.158015*t1395*t1812*t583)*var2[4] - 0.5*(0.158015*t583*(t1008*t1411 - 1.*t1395*t624*t697) + 0.0031174510920000003*(-1.*t1395*t261*t697 + t1411*t862) - 0.029427012384*(-1.*t1395*t306*t697 + t1411*t891) + 0.158015*t469*(-1.*t1395*t556*t697 + t1411*t946))*var2[5] - 0.5*(0.0031174510920000003*(t1395*t1419 - 1.*t135*t141*t1411*t656) - 0.029427012384*(t1395*t1504 + t135*t1411*t193*t656) + 0.158015*t469*(t1395*t1543 - 1.*t135*t1411*t503*t656) + 0.158015*t583*(t1395*t1562 - 1.*t135*t1411*t529*t656))*var2[6] - 0.5*(t2334 + t2351 - 0.029427012384*(t1395*t1964 + t1411*t261) + 0.0031174510920000003*(t1411*t1878 + t1395*t911))*var2[7] - 0.5*(0.158015*t1352*(t1050*t1395 + t1411*t1938) + 0.158015*t1330*t2331 + t2334 + t2351)*var2[8]);
  p_output1[3]=var2[7]*(-0.5*(-0.000029*t1050 + 0.008769*t2410 + 0.158015*(t2532*(t1050*t2981 + t1050*t2998 + t1364*t3045 + t1812*t3070) + t1364*(-1.*t2410*t2981 - 1.*t2410*t2998 - 1.*t2532*t3045 - 1.*t2422*t3070) + t1050*t3241 + t2410*t3283)*t469 + 6.e-6*t870 - 0.029427012384*((-1.*t2422*t2511 - 1.*t2511*t2532 - 1.*t2410*t2550 - 1.*t2410*t2568)*t2589 + t2410*t2636 + t2627*t870 + t2532*(t1717*t2511 + t2511*t2589 + t2550*t870 + t2568*t870)) + 0.0031174510920000003*(t1116*(t2422*t2511 + t2511*t2532 + t2410*t2550 + t2410*t2568) + t2410*t2807 + t2787*t911 + t2532*(-1.*t1116*t2511 - 1.*t1749*t2511 - 1.*t2550*t911 - 1.*t2568*t911)) + 1.e-6*t958 + 0.158015*t583*(t1149*(t2410*t2981 + t2410*t2998 + t2532*t3045 + t2422*t3070) + t2410*t3162 + t3130*t958 + t2532*(-1.*t1149*t3045 - 1.*t1785*t3070 - 1.*t2981*t958 - 1.*t2998*t958)))*var2[4] - 0.5*(6.e-6*t130*t261 + 1.e-6*t130*t556 - 0.000029*t130*t624 - 0.008769*t130*t135*t656 + 0.158015*t469*(t130*t3241*t624 - 1.*t130*t135*t3283*t656 + t2532*(t130*t1364*t3975 + t4052 + t4059 + t130*t2998*t624 - 1.*t1050*t3975*t697 - 1.*t3070*t624*t697) + t1364*(-1.*t130*t2532*t3975 + t4038 + t4041 + t130*t135*t2998*t656 + t2410*t3975*t697 - 1.*t135*t3070*t656*t697)) - 0.029427012384*(t130*t261*t2627 - 1.*t130*t135*t2636*t656 + t2589*(-1.*t130*t2532*t3808 + t3814 - 1.*t135*t2487*t656 + t130*t135*t2568*t656 + t2410*t3808*t697 - 1.*t135*t2511*t656*t697) + t2532*(t130*t2568*t261 + t130*t2589*t3808 + t3828 + t3847 - 1.*t2511*t261*t697 - 1.*t3808*t697*t870)) + 0.0031174510920000003*(t130*t2787*t306 - 1.*t130*t135*t2807*t656 + t1116*(t130*t2532*t3808 + t3900 + t135*t2487*t656 - 1.*t130*t135*t2568*t656 - 1.*t2410*t3808*t697 + t135*t2511*t656*t697) + t2532*(-1.*t130*t2568*t306 - 1.*t1116*t130*t3808 + t3920 + t3922 + t2511*t306*t697 + t3808*t697*t911)) + 0.158015*t583*(t130*t3130*t556 - 1.*t130*t135*t3162*t656 + t1149*(t3964 + t130*t2532*t3975 + t3987 - 1.*t130*t135*t2998*t656 - 1.*t2410*t3975*t697 + t135*t3070*t656*t697) + t2532*(-1.*t1149*t130*t3975 + t4007 + t4012 - 1.*t130*t2998*t556 + t3070*t556*t697 + t3975*t697*t958)))*var2[5] - 0.5*(0.008769*t3318 + 6.e-6*t705 + 1.e-6*t769 - 0.000029*t801 + 0.158015*t469*(t3283*t3318 + t1364*(-1.*t2998*t3318 - 1.*t3070*t3336 - 1.*t2410*t3612 - 1.*t2532*t3621 + t3709 + t3711) + t3241*t801 + t2532*(t1562*t3070 + t1050*t3612 + t1364*t3621 + t3730 + t3738 + t2998*t801)) - 0.029427012384*(t2636*t3318 + t2589*(-1.*t2568*t3318 - 1.*t2511*t3336 - 1.*t2410*t3407 - 1.*t2532*t3420 + t3438 + t3454) + t2627*t705 + t2532*(t1419*t2511 + t2589*t3420 + t3469 + t3475 + t2568*t705 + t3407*t870)) + 0.0031174510920000003*(t2807*t3318 + t1116*(t2568*t3318 + t2511*t3336 + t2410*t3407 + t2532*t3420 + t3514 + t3523) + t2787*t723 + t2532*(-1.*t1504*t2511 - 1.*t1116*t3420 + t3551 + t3555 - 1.*t2568*t723 - 1.*t3407*t911)) + 0.158015*t583*(t3162*t3318 + t1149*(t2998*t3318 + t3070*t3336 + t2410*t3612 + t2532*t3621 + t3634 + t3635) + t3130*t769 + t2532*(-1.*t1543*t3070 - 1.*t1149*t3621 + t3642 + t3654 - 1.*t2998*t769 - 1.*t3612*t958)))*var2[6] - 0.5*(6.e-6*t1116 + t4223 + t4224 + 0.158015*(t4225 + t1364*(-1.*t2410*t4262 - 1.*t2532*t4274 + t4284) + t2532*(t1050*t4262 + t1364*t4274 + t4294 + t4305 + t4307 + t4311))*t469 - 0.029427012384*(t1116*t2627 + t2589*(-1.*t2410*t4134 - 1.*t2532*t4144 + t4154) + t2532*(t1116*t2568 + t2589*t4144 + t4165 + t4166 + t4134*t870 + t2511*t911)) + 0.0031174510920000003*(t1098*t2787 + t1116*(t2410*t4134 + t2532*t4144 + t4192) + t2532*(-1.*t1964*t2511 - 1.*t1098*t2568 - 1.*t1116*t4144 + t4197 + t4199 - 1.*t4134*t911)) + 0.158015*t583*(t1149*(t2410*t4262 + t2532*t4274 + t4345) + t4350 + t2532*(-1.*t1149*t4274 + t4353 + t4354 + t4362 + t4374 - 1.*t4262*t958)))*var2[7] - 0.5*(0.158015*t1352*(t1149*t3130 + t2532*t3162) + 0.158015*t1330*(t1364*t3241 + t2532*t3283) + t4223 + t4224 + 0.158015*(t4225 + t1364*(-1.*t2410*t4454 - 1.*t2532*t4469 + t4482) + t2532*(t4294 + t4307 + t4311 + t1050*t4454 + t1364*t4469 + t4487))*t469 + 0.158015*t583*(t4350 + t1149*(t2410*t4454 + t2532*t4469 + t4505) + t2532*(t4354 + t4362 + t4374 - 1.*t1149*t4469 + t4510 - 1.*t4454*t958)))*var2[8]);
  p_output1[4]=var2[7]*(-0.5*(-0.000029*t1008 - 0.008769*t190*t656 + 0.158015*t469*(t1008*t4739 - 1.*t190*t4809*t656 + t135*(t1008*t3975 + t4052 + t4059 + t2969*t624)*t656 + t1938*(t4038 + t4041 + t135*t2969*t656 + t190*t3975*t656)) + 6.e-6*t862 - 0.029427012384*(-1.*t190*t4586*t656 + t1836*(t3814 + t190*t3808*t656) + t4551*t862 + t135*t656*(t2487*t261 + t3828 + t3847 + t3808*t862)) + 0.0031174510920000003*(-1.*t190*t4646*t656 + t1878*(t3900 - 1.*t190*t3808*t656) + t4627*t891 + t135*t656*(-1.*t2487*t306 + t3920 + t3922 - 1.*t3808*t891)) + 1.e-6*t946 + 0.158015*t583*(-1.*t190*t4720*t656 + t1912*(t3964 + t3987 - 1.*t135*t2969*t656 - 1.*t190*t3975*t656) + t4686*t946 + t135*t656*(t4007 + t4012 - 1.*t2969*t556 - 1.*t3975*t946)))*var2[5] - 0.5*(-0.008769*t135*t145 - 6.e-6*t135*t141*t656 - 1.e-6*t135*t503*t656 + 0.000029*t135*t529*t656 + 0.158015*t469*(-1.*t135*t145*t4809 - 1.*t135*t4739*t529*t656 + t1938*(-1.*t145*t190*t2969 + t3709 + t3711 + t4751 - 1.*t2897*t656 - 1.*t3593*t4564*t656) + t135*t656*(-1.*t1008*t190*t3593 + t3730 + t3738 + t4767 - 1.*t145*t2897*t529 + t190*t2969*t529*t656)) - 0.029427012384*(-1.*t135*t145*t4586 - 1.*t135*t141*t4551*t656 + t1836*(-1.*t145*t190*t2487 + t3438 + t3454 + t4566 + t4567 - 1.*t3360*t4564*t656) + t135*t656*(t3469 + t3475 + t4601 + t4603 + t141*t190*t2487*t656 - 1.*t190*t3360*t862)) + 0.0031174510920000003*(-1.*t135*t145*t4646 + t135*t193*t4627*t656 + t1878*(t145*t190*t2487 + t3514 + t3523 + t4632 + t4633 + t3360*t4564*t656) + t135*t656*(t3551 + t3555 + t4651 + t4652 + t190*t193*t2487*t656 + t190*t3360*t891)) + 0.158015*t583*(-1.*t135*t145*t4720 - 1.*t135*t4686*t503*t656 + t1912*(t145*t190*t2969 + t3634 + t3635 + t4696 + t2897*t656 + t3593*t4564*t656) + t135*t656*(t3642 + t3654 + t4704 + t145*t2897*t503 - 1.*t190*t2969*t503*t656 + t190*t3593*t946)))*var2[6] - 0.5*(6.e-6*t1878 + t5065 + t5068 + 0.158015*t469*(t5073 + t135*(t1008*t4241 + t4294 + t4305 + t5103 + t5105 + t5112)*t656 + t1938*(t4284 - 1.*t145*t4235*t656 + t190*t4241*t656)) - 0.029427012384*(t1878*t4551 + t1836*(t4154 - 1.*t145*t4120*t656 + t190*t4128*t656) + t135*t656*(t4165 + t4166 + t4980 + t4982 + t4128*t862 + t2487*t891)) + 0.0031174510920000003*(t261*t4627 + t1878*(t4192 + t145*t4120*t656 - 1.*t190*t4128*t656) + t135*t656*(-1.*t1090*t2487 + t4197 + t4199 + t4575 + t5034 - 1.*t4128*t891)) + 0.158015*t583*(t5137 + t1912*(t4345 + t145*t4235*t656 - 1.*t190*t4241*t656) + t135*t656*(t4353 + t4354 + t5139 + t5149 + t5156 - 1.*t4241*t946)))*var2[7] - 0.5*(t5065 + t5068 + 0.158015*t1352*(t1912*t4686 + t135*t4720*t656) + 0.158015*t1330*(t1938*t4739 + t135*t4809*t656) + 0.158015*t469*(t5073 + t135*(t4294 + t1008*t4448 + t4487 + t5103 + t5112 + t5228)*t656 + t1938*(t4482 - 1.*t145*t4427*t656 + t190*t4448*t656)) + 0.158015*t583*(t5137 + t1912*(t4505 + t145*t4427*t656 - 1.*t190*t4448*t656) + t135*t656*(t4354 + t4510 + t5149 + t5156 + t5271 - 1.*t4448*t946)))*var2[8]);
  p_output1[5]=var2[7]*(-0.5*(-6.e-6*t141*t145 - 1.e-6*t145*t503 + 0.000029*t145*t529 + 0.008769*t656 - 0.029427012384*(-1.*t141*t145*t5396 + (t4575 + t5449 + t5454)*t656 + t145*(-1.*t141*t145*t3360 + t4601 + t4603 - 1.*t141*t2447*t656) + t141*t656*(t145*t2447 + t4566 + t4567 - 1.*t3360*t656)) + 0.0031174510920000003*(t145*t193*t5317 + (-1.*t145*t193*t2447 - 1.*t141*t2481 + t4640)*t656 + t145*(-1.*t145*t193*t3360 + t4651 + t4652 - 1.*t193*t2447*t656) - 1.*t193*t656*(-1.*t145*t2447 + t4632 + t4633 + t3360*t656)) + 0.158015*t469*(-1.*t145*t529*t5485 + t5506*t656 + t145*(t4767 - 1.*t145*t3593*t529 - 1.*t145*t529*t5480 - 1.*t2912*t529*t656) + t529*t656*(t145*t2912 + t4751 - 1.*t3593*t656 - 1.*t5480*t656)) + 0.158015*t583*(-1.*t145*t503*t5545 + t5613*t656 + t145*(t4704 + t145*t3593*t503 + t145*t503*t5480 + t2912*t503*t656) + t503*t656*(-1.*t145*t2912 + t4696 + t3593*t656 + t5480*t656)))*var2[6] - 0.5*(t5690 + t5698 + 0.158015*(t5766 + t145*(t5139 - 1.*t4227*t529 - 1.*t4235*t503*t5651 + t5774 + t5783 + t5785))*t583 + 0.158015*t469*(t5699 + t145*(t5105 + t4235*t529*t5651 + t5700 + t5711 + t5726 + t4227*t604)) - 6.e-6*t193*t656 + 0.0031174510920000003*(t145*(-1.*t141*t2440 + t4575 + t5034 + t5449 + t5454 + t193*t4120*t5651) - 1.*t141*t5317*t656) - 0.029427012384*(t145*(t193*t2440 + t145*t193*t2447 + t141*t2481 + t4980 + t4982 + t141*t4120*t5651) - 1.*t193*t5396*t656))*var2[7] - 0.5*(t5690 + t5698 + 0.158015*(t5766 + t145*(t5271 - 1.*t4440*t529 - 1.*t4427*t503*t5651 + t5774 + t5783 + t5785))*t583 + 0.158015*t469*(t5699 + t145*(t5228 + t4427*t529*t5651 + t5700 + t5711 + t5726 + t4440*t604)) + 0.158015*t1330*(t145*t5506 + t529*t5485*t656) + 0.158015*t1352*(t145*t5613 + t503*t5545*t656))*var2[8]);
  p_output1[6]=var2[7]*(-0.5*(-0.0017906073870803524*t141 + 0.00019032974151987603*t193 + t5912 + t5916 + t5917 + t5930)*var2[7] - 0.5*(0.158015*t1352*(0. - 0.078693*t529) + t5912 + t5916 + t5917 + t5930 + 0.158015*t1330*(0. + 0.04675*t503 + 0.125443*t604))*var2[8]);
  p_output1[7]=-0.5*(0.31603*t1330*t469 + 0.31603*t1352*t583)*var2[7]*var2[8];
  p_output1[8]=-0.5*(-0.019320336034999996*t1330 - 0.0009932822900000022*t1352)*var2[7]*var2[8];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec8_go1_description.hh"

namespace SymFunction
{

void Ce1_vec8_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
