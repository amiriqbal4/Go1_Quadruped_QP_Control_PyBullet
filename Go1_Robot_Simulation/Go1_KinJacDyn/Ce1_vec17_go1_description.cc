/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:27:41 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t14;
  double t75;
  double t34;
  double t57;
  double t63;
  double t114;
  double t221;
  double t229;
  double t233;
  double t307;
  double t328;
  double t330;
  double t339;
  double t346;
  double t245;
  double t280;
  double t310;
  double t323;
  double t371;
  double t391;
  double t400;
  double t538;
  double t547;
  double t459;
  double t465;
  double t466;
  double t467;
  double t483;
  double t488;
  double t501;
  double t222;
  double t324;
  double t365;
  double t369;
  double t425;
  double t430;
  double t432;
  double t763;
  double t774;
  double t782;
  double t842;
  double t849;
  double t852;
  double t1035;
  double t1052;
  double t1065;
  double t1018;
  double t1023;
  double t1033;
  double t1034;
  double t1185;
  double t1186;
  double t1160;
  double t1164;
  double t1165;
  double t876;
  double t895;
  double t897;
  double t1084;
  double t1091;
  double t1098;
  double t1108;
  double t1113;
  double t1114;
  double t1120;
  double t729;
  double t736;
  double t747;
  double t183;
  double t203;
  double t211;
  double t1283;
  double t73;
  double t121;
  double t122;
  double t1262;
  double t508;
  double t509;
  double t515;
  double t412;
  double t433;
  double t448;
  double t937;
  double t727;
  double t749;
  double t751;
  double t755;
  double t803;
  double t806;
  double t831;
  double t855;
  double t856;
  double t872;
  double t918;
  double t919;
  double t944;
  double t949;
  double t973;
  double t1653;
  double t1655;
  double t1661;
  double t1686;
  double t1699;
  double t1705;
  double t1928;
  double t1959;
  double t1970;
  double t1977;
  double t1136;
  double t1139;
  double t1168;
  double t1184;
  double t1189;
  double t1200;
  double t1206;
  double t1214;
  double t1221;
  double t1728;
  double t1730;
  double t1783;
  double t1980;
  double t1985;
  double t1992;
  double t1996;
  double t2001;
  double t2006;
  double t2011;
  double t2030;
  double t2041;
  double t2043;
  double t1388;
  double t1390;
  double t1397;
  double t1398;
  double t1399;
  double t1406;
  double t1412;
  double t1421;
  double t1435;
  double t1438;
  double t1447;
  double t1505;
  double t1507;
  double t1509;
  double t1537;
  double t1541;
  double t1542;
  double t1563;
  double t1568;
  double t1570;
  double t1584;
  double t1585;
  double t1588;
  double t1624;
  double t1625;
  double t1626;
  double t1875;
  double t1884;
  double t1887;
  double t2120;
  double t2124;
  double t2125;
  double t1839;
  double t1856;
  double t1867;
  double t2611;
  double t2615;
  double t2616;
  double t2618;
  double t2619;
  double t2626;
  double t2628;
  double t2634;
  double t2729;
  double t2730;
  double t2746;
  double t2753;
  double t2754;
  double t2759;
  double t2794;
  double t2802;
  double t2804;
  double t2709;
  double t2712;
  double t2713;
  double t2715;
  double t2717;
  double t2723;
  double t2877;
  double t2883;
  double t2893;
  double t2728;
  double t2809;
  double t2813;
  double t2964;
  double t2965;
  double t2966;
  double t2815;
  double t2828;
  double t2854;
  double t2902;
  double t2907;
  double t2909;
  double t2705;
  double t2706;
  double t2707;
  double t2983;
  double t2989;
  double t2991;
  double t3006;
  double t3010;
  double t3015;
  double t2927;
  double t2931;
  double t2946;
  double t997;
  double t1003;
  double t1014;
  double t3326;
  double t3329;
  double t3331;
  double t3349;
  double t3364;
  double t3371;
  double t3378;
  double t3407;
  double t3275;
  double t3278;
  double t3290;
  double t3301;
  double t3422;
  double t3437;
  double t3439;
  double t3322;
  double t3413;
  double t3467;
  double t3484;
  double t3485;
  double t3502;
  double t3448;
  double t3449;
  double t3459;
  double t3488;
  double t3506;
  double t3517;
  double t3546;
  double t3548;
  double t3561;
  double t3419;
  double t1225;
  double t1231;
  double t1232;
  double t542;
  double t550;
  double t552;
  double t616;
  double t629;
  double t653;
  double t681;
  double t683;
  double t698;
  double t3076;
  double t3077;
  double t3083;
  double t3087;
  double t3897;
  double t3898;
  double t3899;
  double t3927;
  double t3932;
  double t3937;
  double t3940;
  double t3946;
  double t3949;
  double t3950;
  double t3955;
  double t3842;
  double t3843;
  double t3849;
  double t3095;
  double t3109;
  double t3110;
  double t3112;
  double t582;
  double t599;
  double t612;
  double t3162;
  double t3163;
  double t3164;
  double t3166;
  double t3998;
  double t4020;
  double t4022;
  double t4023;
  double t3215;
  double t3216;
  double t3221;
  double t3223;
  double t3570;
  double t3571;
  double t3573;
  double t3575;
  double t4145;
  double t4150;
  double t4155;
  double t4165;
  double t4166;
  double t4168;
  double t4169;
  double t4170;
  double t4179;
  double t4183;
  double t4187;
  double t3642;
  double t3646;
  double t3648;
  double t3649;
  double t3701;
  double t3705;
  double t3706;
  double t3710;
  double t3801;
  double t3807;
  double t3812;
  double t3817;
  double t4320;
  double t4321;
  double t4326;
  double t4349;
  double t4360;
  double t4365;
  double t4494;
  double t4478;
  double t4482;
  double t4486;
  double t4602;
  double t4604;
  double t4611;
  double t4658;
  double t4666;
  double t4684;
  double t4618;
  double t4628;
  double t4634;
  double t4650;
  double t4691;
  double t4695;
  double t4713;
  double t4715;
  double t4718;
  double t977;
  double t990;
  double t4912;
  double t4915;
  double t4921;
  double t4922;
  double t4943;
  double t4983;
  double t4984;
  double t4992;
  double t4939;
  double t4946;
  double t4963;
  double t4965;
  double t4993;
  double t4997;
  double t5004;
  double t5012;
  double t5014;
  double t4590;
  double t4593;
  double t4901;
  double t5227;
  double t5229;
  double t5230;
  double t5247;
  double t5263;
  double t5269;
  double t5297;
  double t5298;
  double t5300;
  double t5232;
  double t5272;
  double t5273;
  double t5031;
  double t5043;
  double t5062;
  double t5290;
  double t5301;
  double t5315;
  double t5321;
  double t5332;
  double t5333;
  double t5088;
  double t5125;
  double t5135;
  double t5146;
  double t4000;
  double t4013;
  double t3895;
  double t3918;
  double t4050;
  double t5475;
  double t4058;
  double t4102;
  double t4103;
  double t4159;
  double t4178;
  double t4210;
  double t4212;
  double t4243;
  double t4248;
  double t4270;
  double t4273;
  double t5460;
  double t5464;
  double t5466;
  double t2919;
  double t3040;
  double t3041;
  double t5548;
  double t5566;
  double t5568;
  double t5603;
  double t5611;
  double t5614;
  double t3134;
  double t5719;
  double t5721;
  double t5722;
  double t3186;
  double t3187;
  double t5744;
  double t5751;
  double t5756;
  double t3420;
  double t3462;
  double t3586;
  double t3588;
  double t5828;
  double t5842;
  double t5843;
  double t5851;
  double t5852;
  double t5859;
  double t3662;
  double t3669;
  double t5911;
  double t5912;
  double t5914;
  double t3737;
  double t3751;
  double t4643;
  double t4734;
  double t4738;
  double t4769;
  double t6160;
  double t4780;
  double t4789;
  double t4964;
  double t5029;
  double t5090;
  double t5129;
  double t6125;
  double t6127;
  double t6233;
  double t5281;
  double t6234;
  double t6237;
  double t5342;
  double t6271;
  double t5369;
  double t6276;
  double t5404;
  double t6278;
  double t5657;
  double t5659;
  double t5670;
  double t5673;
  double t5512;
  double t5519;
  double t5471;
  double t5474;
  double t6472;
  double t5875;
  double t5893;
  double t5781;
  double t5814;
  double t6398;
  double t6400;
  double t6164;
  double t6165;
  double t6364;
  double t6369;
  double t6446;
  double t6451;
  double t6212;
  double t6634;
  double t6475;
  double t6476;
  double t6478;
  double t6236;
  double t6545;
  double t6546;
  double t6547;
  double t6275;
  double t6709;
  double t6710;
  double t6522;
  double t6525;
  double t6529;
  double t6532;
  double t6593;
  double t6597;
  double t6598;
  double t6599;
  double t6714;
  double t6716;
  double t6719;
  double t6723;
  double t6327;
  double t6739;
  double t6743;
  double t6341;
  double t6747;
  double t6748;
  double t6822;
  double t6823;
  double t6824;
  double t6825;
  double t6826;
  double t6827;
  double t6830;
  t14 = Cos(var1[4]);
  t75 = Cos(var1[16]);
  t34 = Cos(var1[5]);
  t57 = Sin(var1[15]);
  t63 = Sin(var1[16]);
  t114 = Sin(var1[5]);
  t221 = Cos(var1[17]);
  t229 = -1.*t221;
  t233 = 1. + t229;
  t307 = Sin(var1[17]);
  t328 = -0.213*t233;
  t330 = -0.335269*t221;
  t339 = -0.006286*t307;
  t346 = t328 + t330 + t339;
  t245 = -0.1881*t233;
  t280 = -0.181814*t221;
  t310 = -0.12226899999999999*t307;
  t323 = t245 + t280 + t310;
  t371 = t75*t221;
  t391 = -1.*t63*t307;
  t400 = t371 + t391;
  t538 = Sin(var1[4]);
  t547 = Cos(var1[15]);
  t459 = t221*t346;
  t465 = 0.1881*t307;
  t466 = t323*t307;
  t467 = 0. + t459 + t465 + t466;
  t483 = -1.*t221*t63;
  t488 = -1.*t75*t307;
  t501 = t483 + t488;
  t222 = -0.1881*t221;
  t324 = -1.*t221*t323;
  t365 = t346*t307;
  t369 = 0. + t222 + t324 + t365;
  t425 = t221*t63;
  t430 = t75*t307;
  t432 = t425 + t430;
  t763 = t75*t34;
  t774 = -1.*t57*t63*t114;
  t782 = t763 + t774;
  t842 = t34*t400;
  t849 = t57*t501*t114;
  t852 = t842 + t849;
  t1035 = -1.*t75*t221;
  t1052 = t63*t307;
  t1065 = t1035 + t1052;
  t1018 = t547*t501*t538;
  t1023 = t14*t852;
  t1033 = t1018 + t1023;
  t1034 = 0.158015*t369*t1033;
  t1185 = -0.12226899999999999*t221;
  t1186 = t1185 + t339;
  t1160 = -0.006286*t221;
  t1164 = 0.12226899999999999*t307;
  t1165 = t1160 + t1164;
  t876 = t34*t432;
  t895 = t57*t400*t114;
  t897 = t876 + t895;
  t1084 = t547*t1065*t538;
  t1091 = t34*t501;
  t1098 = t57*t1065*t114;
  t1108 = t1091 + t1098;
  t1113 = t14*t1108;
  t1114 = t1084 + t1113;
  t1120 = 0.158015*t467*t1114;
  t729 = t34*t63;
  t736 = t75*t57*t114;
  t747 = t729 + t736;
  t183 = t75*t34*t57;
  t203 = -1.*t63*t114;
  t211 = t183 + t203;
  t1283 = Sin(var1[3]);
  t73 = -1.*t34*t57*t63;
  t121 = -1.*t75*t114;
  t122 = t73 + t121;
  t1262 = Cos(var1[3]);
  t508 = t34*t57*t501;
  t509 = -1.*t400*t114;
  t515 = t508 + t509;
  t412 = t34*t57*t400;
  t433 = -1.*t432*t114;
  t448 = t412 + t433;
  t937 = -1.*t547*t75*t538;
  t727 = t547*t75*t14;
  t749 = -1.*t538*t747;
  t751 = t727 + t749;
  t755 = -1.*t547*t14*t63;
  t803 = -1.*t538*t782;
  t806 = t755 + t803;
  t831 = t547*t14*t501;
  t855 = -1.*t538*t852;
  t856 = t831 + t855;
  t872 = t547*t14*t400;
  t918 = -1.*t538*t897;
  t919 = t872 + t918;
  t944 = -1.*t34*t63;
  t949 = -1.*t75*t57*t114;
  t973 = t944 + t949;
  t1653 = t34*t57*t63;
  t1655 = t75*t114;
  t1661 = t1653 + t1655;
  t1686 = -1.*t34*t57*t501;
  t1699 = t400*t114;
  t1705 = t1686 + t1699;
  t1928 = t1262*t1705;
  t1959 = -1.*t1283*t856;
  t1970 = t1928 + t1959;
  t1977 = 0.158015*t369*t1970;
  t1136 = 0.1881*t221;
  t1139 = t221*t323;
  t1168 = t221*t1165;
  t1184 = -1.*t346*t307;
  t1189 = t1186*t307;
  t1200 = t1136 + t1139 + t1168 + t1184 + t1189;
  t1206 = -1.*t221*t1186;
  t1214 = t1165*t307;
  t1221 = t459 + t1206 + t465 + t466 + t1214;
  t1728 = -1.*t34*t57*t400;
  t1730 = t432*t114;
  t1783 = t1728 + t1730;
  t1980 = -1.*t34*t57*t1065;
  t1985 = t501*t114;
  t1992 = t1980 + t1985;
  t1996 = t1262*t1992;
  t2001 = t547*t14*t1065;
  t2006 = -1.*t538*t1108;
  t2011 = t2001 + t2006;
  t2030 = -1.*t1283*t2011;
  t2041 = t1996 + t2030;
  t2043 = 0.158015*t467*t2041;
  t1388 = -1.*t14*t747;
  t1390 = t937 + t1388;
  t1397 = t547*t63*t538;
  t1398 = -1.*t14*t782;
  t1399 = t1397 + t1398;
  t1406 = -1.*t547*t501*t538;
  t1412 = -1.*t14*t852;
  t1421 = t1406 + t1412;
  t1435 = -1.*t547*t400*t538;
  t1438 = -1.*t14*t897;
  t1447 = t1435 + t1438;
  t1505 = -1.*t75*t14*t57;
  t1507 = -1.*t547*t75*t538*t114;
  t1509 = t1505 + t1507;
  t1537 = t14*t57*t63;
  t1541 = t547*t63*t538*t114;
  t1542 = t1537 + t1541;
  t1563 = -1.*t14*t57*t501;
  t1568 = -1.*t547*t501*t538*t114;
  t1570 = t1563 + t1568;
  t1584 = -1.*t14*t57*t400;
  t1585 = -1.*t547*t400*t538*t114;
  t1588 = t1584 + t1585;
  t1624 = -1.*t75*t34*t57;
  t1625 = t63*t114;
  t1626 = t1624 + t1625;
  t1875 = t1262*t1661;
  t1884 = -1.*t1283*t806;
  t1887 = t1875 + t1884;
  t2120 = t1262*t1783;
  t2124 = -1.*t1283*t919;
  t2125 = t2120 + t2124;
  t1839 = -1.*t547*t75*t14;
  t1856 = -1.*t538*t973;
  t1867 = t1839 + t1856;
  t2611 = t1283*t1705;
  t2615 = t1262*t856;
  t2616 = t2611 + t2615;
  t2618 = 0.158015*t369*t2616;
  t2619 = t1283*t1992;
  t2626 = t1262*t2011;
  t2628 = t2619 + t2626;
  t2634 = 0.158015*t467*t2628;
  t2729 = -1.*t547;
  t2730 = 1. + t2729;
  t2746 = 0.04675*t2730;
  t2753 = 0.107803*t547;
  t2754 = -0.032736*t75;
  t2759 = 0.003468*t63;
  t2794 = t2754 + t2759;
  t2802 = -1.*t57*t2794;
  t2804 = t2746 + t2753 + t2802;
  t2709 = -1.*t75;
  t2712 = 1. + t2709;
  t2713 = -0.1881*t2712;
  t2715 = -0.191568*t75;
  t2717 = -0.032736*t63;
  t2723 = t2713 + t2715 + t2717;
  t2877 = -1.*t34*t2804;
  t2883 = -1.*t2723*t114;
  t2893 = t2877 + t2883;
  t2728 = t34*t2723;
  t2809 = -1.*t2804*t114;
  t2813 = t2728 + t2809;
  t2964 = 0.061053*t57;
  t2965 = t547*t2794;
  t2966 = t2964 + t2965;
  t2815 = t57*t538;
  t2828 = -1.*t547*t14*t114;
  t2854 = t2815 + t2828;
  t2902 = t34*t2804;
  t2907 = t2723*t114;
  t2909 = t2902 + t2907;
  t2705 = t547*t75*t538;
  t2706 = t14*t747;
  t2707 = t2705 + t2706;
  t2983 = t2966*t538;
  t2989 = t14*t2813;
  t2991 = t2983 + t2989;
  t3006 = t14*t2966;
  t3010 = -1.*t538*t2813;
  t3015 = t3006 + t3010;
  t2927 = t14*t57;
  t2931 = t547*t538*t114;
  t2946 = t2927 + t2931;
  t997 = -1.*t547*t63*t538;
  t1003 = t14*t782;
  t1014 = t997 + t1003;
  t3326 = 0.04675*t2730;
  t3329 = 0.128057*t547;
  t3331 = -0.1881*t63;
  t3349 = -1.*t63*t323;
  t3364 = t75*t346;
  t3371 = 0. + t3331 + t3349 + t3364;
  t3378 = -1.*t57*t3371;
  t3407 = t3326 + t3329 + t3378;
  t3275 = -0.1881*t2712;
  t3278 = t75*t323;
  t3290 = t63*t346;
  t3301 = 0. + t3275 + t3278 + t3290;
  t3422 = -1.*t34*t3407;
  t3437 = -1.*t3301*t114;
  t3439 = t3422 + t3437;
  t3322 = t34*t3301;
  t3413 = -1.*t3407*t114;
  t3467 = 0.081307*t57;
  t3484 = t547*t3371;
  t3485 = 0. + t3467 + t3484;
  t3502 = 0. + t3322 + t3413;
  t3448 = t34*t3407;
  t3449 = t3301*t114;
  t3459 = 0. + t3448 + t3449;
  t3488 = t3485*t538;
  t3506 = t14*t3502;
  t3517 = 0. + t3488 + t3506;
  t3546 = t14*t3485;
  t3548 = -1.*t538*t3502;
  t3561 = 0. + t3546 + t3548;
  t3419 = t3322 + t3413;
  t1225 = t547*t400*t538;
  t1231 = t14*t897;
  t1232 = t1225 + t1231;
  t542 = -1.*t75*t57*t538;
  t550 = t547*t75*t14*t114;
  t552 = t542 + t550;
  t616 = -1.*t57*t501*t538;
  t629 = t547*t14*t501*t114;
  t653 = t616 + t629;
  t681 = -1.*t57*t400*t538;
  t683 = t547*t14*t400*t114;
  t698 = t681 + t683;
  t3076 = -1.*t547*t34*t2909;
  t3077 = -1.*t2854*t2991;
  t3083 = -1.*t2946*t3015;
  t3087 = t3076 + t3077 + t3083;
  t3897 = -0.061053*t57;
  t3898 = -1.*t547*t2794;
  t3899 = t3897 + t3898;
  t3927 = 0.061053*t547;
  t3932 = t3927 + t2802;
  t3937 = t3932*t538;
  t3940 = -1.*t14*t3899*t114;
  t3946 = t3937 + t3940;
  t3949 = t14*t3932;
  t3950 = t3899*t538*t114;
  t3955 = t3949 + t3950;
  t3842 = t547*t538;
  t3843 = t14*t57*t114;
  t3849 = t3842 + t3843;
  t3095 = t2909*t1626;
  t3109 = t2707*t2991;
  t3110 = t751*t3015;
  t3112 = t3095 + t3109 + t3110;
  t582 = t57*t63*t538;
  t599 = -1.*t547*t14*t63*t114;
  t612 = t582 + t599;
  t3162 = t547*t34*t2909;
  t3163 = t2854*t2991;
  t3164 = t2946*t3015;
  t3166 = t3162 + t3163 + t3164;
  t3998 = Power(t34,2);
  t4020 = t547*t14;
  t4022 = -1.*t57*t538*t114;
  t4023 = t4020 + t4022;
  t3215 = -1.*t1661*t2909;
  t3216 = -1.*t2991*t1014;
  t3221 = -1.*t3015*t806;
  t3223 = t3215 + t3216 + t3221;
  t3570 = t547*t34*t3459;
  t3571 = t2854*t3517;
  t3573 = t2946*t3561;
  t3575 = t3570 + t3571 + t3573;
  t4145 = -0.081307*t57;
  t4150 = -1.*t547*t3371;
  t4155 = t4145 + t4150;
  t4165 = 0.081307*t547;
  t4166 = t4165 + t3378;
  t4168 = t4166*t538;
  t4169 = -1.*t14*t4155*t114;
  t4170 = t4168 + t4169;
  t4179 = t14*t4166;
  t4183 = t4155*t538*t114;
  t4187 = t4179 + t4183;
  t3642 = -1.*t3459*t1705;
  t3646 = -1.*t3517*t1033;
  t3648 = -1.*t3561*t856;
  t3649 = t3642 + t3646 + t3648;
  t3701 = -1.*t547*t34*t3459;
  t3705 = -1.*t2854*t3517;
  t3706 = -1.*t2946*t3561;
  t3710 = t3701 + t3705 + t3706;
  t3801 = t3459*t1783;
  t3807 = t3517*t1232;
  t3812 = t3561*t919;
  t3817 = t3801 + t3807 + t3812;
  t4320 = -1.*t2966*t538;
  t4321 = -1.*t14*t2813;
  t4326 = t4320 + t4321;
  t4349 = -1.*t57*t538;
  t4360 = t547*t14*t114;
  t4365 = t4349 + t4360;
  t4494 = t3546 + t3548;
  t4478 = -1.*t3485*t538;
  t4482 = -1.*t14*t3502;
  t4486 = t4478 + t4482;
  t4602 = 0.003468*t75;
  t4604 = 0.032736*t63;
  t4611 = t4602 + t4604;
  t4658 = t34*t2794;
  t4666 = t57*t4611*t114;
  t4684 = t4658 + t4666;
  t4618 = -1.*t34*t57*t4611;
  t4628 = t2794*t114;
  t4634 = t4618 + t4628;
  t4650 = t547*t4611*t538;
  t4691 = t14*t4684;
  t4695 = t4650 + t4691;
  t4713 = t547*t14*t4611;
  t4715 = -1.*t538*t4684;
  t4718 = t4713 + t4715;
  t977 = t14*t973;
  t990 = t937 + t977;
  t4912 = -0.1881*t75;
  t4915 = -1.*t75*t323;
  t4921 = -1.*t63*t346;
  t4922 = t4912 + t4915 + t4921;
  t4943 = t3331 + t3349 + t3364;
  t4983 = t34*t4943;
  t4984 = t57*t4922*t114;
  t4992 = t4983 + t4984;
  t4939 = -1.*t34*t57*t4922;
  t4946 = t4943*t114;
  t4963 = t4939 + t4946;
  t4965 = t547*t4922*t538;
  t4993 = t14*t4992;
  t4997 = t4965 + t4993;
  t5004 = t547*t14*t4922;
  t5012 = -1.*t538*t4992;
  t5014 = t5004 + t5012;
  t4590 = -0.000029*t1033;
  t4593 = 1.e-6*t1114;
  t4901 = t1033*t3710;
  t5227 = -1.*t63*t1186;
  t5229 = t75*t1165;
  t5230 = t5227 + t5229;
  t5247 = t75*t1186;
  t5263 = t63*t1165;
  t5269 = t5247 + t5263;
  t5297 = t34*t5269;
  t5298 = t57*t5230*t114;
  t5300 = t5297 + t5298;
  t5232 = -1.*t34*t57*t5230;
  t5272 = t5269*t114;
  t5273 = t5232 + t5272;
  t5031 = t3459*t1705;
  t5043 = t3517*t1033;
  t5062 = t3561*t856;
  t5290 = t547*t5230*t538;
  t5301 = t14*t5300;
  t5315 = t5290 + t5301;
  t5321 = t547*t14*t5230;
  t5332 = -1.*t538*t5300;
  t5333 = t5321 + t5332;
  t5088 = t1114*t3575;
  t5125 = -1.*t3459*t1992;
  t5135 = -1.*t3517*t1114;
  t5146 = -1.*t3561*t2011;
  t4000 = -1.*t547*t3998*t3899;
  t4013 = t34*t57*t2909;
  t3895 = -1.*t547*t75*t34*t2909;
  t3918 = t34*t3899*t1626;
  t4050 = t547*t3998*t3899;
  t5475 = Power(t114,2);
  t4058 = -1.*t34*t57*t2909;
  t4102 = -1.*t34*t3899*t1661;
  t4103 = -1.*t547*t34*t63*t2909;
  t4159 = t547*t3998*t4155;
  t4178 = -1.*t34*t57*t3459;
  t4210 = t547*t34*t501*t3459;
  t4212 = -1.*t34*t4155*t1705;
  t4243 = -1.*t547*t3998*t4155;
  t4248 = t34*t57*t3459;
  t4270 = -1.*t547*t34*t400*t3459;
  t4273 = t34*t4155*t1783;
  t5460 = -1.*t57*t2966;
  t5464 = t547*t114*t2813;
  t5466 = t5460 + t5464 + t3076;
  t2919 = t547*t114*t2909;
  t3040 = t747*t2909;
  t3041 = t2813*t1626;
  t5548 = t547*t75*t2966;
  t5566 = t747*t2813;
  t5568 = t5548 + t5566 + t3095;
  t5603 = t57*t2966;
  t5611 = -1.*t547*t114*t2813;
  t5614 = t5603 + t5611 + t3162;
  t3134 = -1.*t547*t114*t2909;
  t5719 = t547*t2966*t63;
  t5721 = -1.*t2813*t782;
  t5722 = t5719 + t3215 + t5721;
  t3186 = -1.*t1661*t2813;
  t3187 = -1.*t2909*t782;
  t5744 = t57*t3485;
  t5751 = -1.*t547*t114*t3502;
  t5756 = t5744 + t5751 + t3570;
  t3420 = t547*t34*t3419;
  t3462 = -1.*t547*t114*t3459;
  t3586 = -1.*t3459*t852;
  t3588 = -1.*t3419*t1705;
  t5828 = -1.*t547*t3485*t501;
  t5842 = -1.*t3502*t852;
  t5843 = t5828 + t5842 + t3642;
  t5851 = -1.*t57*t3485;
  t5852 = t547*t114*t3502;
  t5859 = t5851 + t5852 + t3701;
  t3662 = -1.*t547*t34*t3419;
  t3669 = t547*t114*t3459;
  t5911 = t547*t3485*t400;
  t5912 = t3502*t897;
  t5914 = t5911 + t3801 + t5912;
  t3737 = t3419*t1783;
  t3751 = t3459*t897;
  t4643 = -1.*t547*t34*t4634;
  t4734 = t1661*t2909;
  t4738 = t4634*t1626;
  t4769 = t547*t34*t4634;
  t6160 = Power(t547,2);
  t4780 = -1.*t1661*t4634;
  t4789 = -1.*t2909*t211;
  t4964 = -1.*t547*t34*t4963;
  t5029 = t4963*t1783;
  t5090 = t547*t34*t4963;
  t5129 = -1.*t4963*t1705;
  t6125 = 1.e-6*t1992;
  t6127 = -0.000029*t1705;
  t6233 = t1705*t5859;
  t5281 = -1.*t547*t34*t5273;
  t6234 = t547*t3485*t501;
  t6237 = t3502*t852;
  t5342 = t5273*t1783;
  t6271 = t1992*t5756;
  t5369 = t547*t34*t5273;
  t6276 = -1.*t547*t3485*t1065;
  t5404 = -1.*t5273*t1705;
  t6278 = -1.*t3502*t1108;
  t5657 = t547*t2966;
  t5659 = t57*t3932;
  t5670 = -1.*t57*t2966*t63;
  t5673 = t547*t3932*t63;
  t5512 = -1.*t75*t57*t2966;
  t5519 = t547*t75*t3932;
  t5471 = -1.*t547*t2966;
  t5474 = -1.*t57*t3932;
  t6472 = t3467 + t3484;
  t5875 = -1.*t57*t4166;
  t5893 = t547*t4166*t400;
  t5781 = t57*t4166;
  t5814 = -1.*t547*t4166*t501;
  t6398 = -1.*t547*t2804;
  t6400 = t5460 + t6398;
  t6164 = t6160*t75*t4611;
  t6165 = -1.*t547*t2966*t63;
  t6364 = t547*t2804;
  t6369 = t5603 + t6364;
  t6446 = -1.*t75*t57*t2804;
  t6451 = t2723*t63;
  t6212 = t6160*t4611*t63;
  t6634 = Power(t57,2);
  t6475 = -1.*t57*t6472;
  t6476 = -1.*t547*t3407;
  t6478 = t6475 + t6476;
  t6236 = t6160*t4922*t400;
  t6545 = t57*t6472;
  t6546 = t547*t3407;
  t6547 = t6545 + t6546;
  t6275 = -1.*t6160*t4922*t501;
  t6709 = -0.000029*t547*t501;
  t6710 = 1.e-6*t547*t1065;
  t6522 = t3301*t432;
  t6525 = t547*t6472*t400;
  t6529 = -1.*t57*t3407*t400;
  t6532 = t6522 + t6525 + t6529;
  t6593 = -1.*t547*t6472*t501;
  t6597 = t57*t3407*t501;
  t6598 = -1.*t3301*t400;
  t6599 = t6593 + t6597 + t6598;
  t6714 = t547*t6478*t501;
  t6716 = t547*t6472*t501;
  t6719 = -1.*t57*t3407*t501;
  t6723 = t3301*t400;
  t6327 = t6160*t5230*t400;
  t6739 = t547*t6547*t1065;
  t6743 = -1.*t3301*t501;
  t6341 = -1.*t6160*t5230*t501;
  t6747 = -1.*t547*t6472*t1065;
  t6748 = t57*t3407*t1065;
  t6822 = 1.e-6*t501;
  t6823 = -0.000029*t400;
  t6824 = 0.012847725605*t501*t369;
  t6825 = -0.128057*t400;
  t6826 = -0.04675*t1065;
  t6827 = t6825 + t6826;
  t6830 = 0.158015*t467*t6827;
  p_output1[0]=var2[16]*(-0.5*(0.0031174510920000003*t751 - 0.029427012384*t806 + 0.158015*t467*t856 + 0.158015*t369*t919)*var2[4] - 0.5*(-0.029427012384*t122*t14 + 0.0031174510920000003*t14*t211 + 0.158015*t14*t369*t448 + 0.158015*t14*t467*t515)*var2[5] - 0.5*(0.0031174510920000003*t552 - 0.029427012384*t612 + 0.158015*t467*t653 + 0.158015*t369*t698)*var2[15] - 0.5*(0.0031174510920000003*t1014 + t1034 + t1120 - 0.029427012384*t990)*var2[16] - 0.5*(t1034 + t1120 + 0.158015*t1033*t1200 + 0.158015*t1221*t1232)*var2[17]);
  p_output1[1]=var2[16]*(-0.5*(0.0031174510920000003*(-1.*t1283*t1626 - 1.*t1262*t751) - 0.029427012384*(-1.*t1283*t1661 - 1.*t1262*t806) + 0.158015*t467*(-1.*t1283*t1705 - 1.*t1262*t856) + 0.158015*t369*(-1.*t1283*t1783 - 1.*t1262*t919))*var2[3] - 0.5*(-0.0031174510920000003*t1283*t1390 + 0.029427012384*t1283*t1399 - 0.158015*t1283*t1447*t369 - 0.158015*t1283*t1421*t467)*var2[4] - 0.5*(0.0031174510920000003*(t1283*t211*t538 + t1262*t747) - 0.029427012384*(t122*t1283*t538 + t1262*t782) + 0.158015*t467*(t1283*t515*t538 + t1262*t852) + 0.158015*t369*(t1283*t448*t538 + t1262*t897))*var2[5] - 0.5*(0.158015*t369*(-1.*t1283*t1588 - 1.*t1262*t34*t400*t547) + 0.158015*t467*(-1.*t1283*t1570 - 1.*t1262*t34*t501*t547) - 0.029427012384*(-1.*t1283*t1542 + t1262*t34*t547*t63) + 0.0031174510920000003*(-1.*t1283*t1509 - 1.*t1262*t34*t547*t75))*var2[15] - 0.5*(0.0031174510920000003*t1887 + t1977 + t2043 - 0.029427012384*(-1.*t1283*t1867 + t1262*t211))*var2[16] - 0.5*(0.158015*t1200*t1970 + t1977 + t2043 + 0.158015*t1221*t2125)*var2[17]);
  p_output1[2]=var2[16]*(-0.5*(-0.029427012384*t1887 + 0.158015*t2125*t369 + 0.158015*t1970*t467 + 0.0031174510920000003*(t1262*t1626 - 1.*t1283*t751))*var2[3] - 0.5*(0.0031174510920000003*t1262*t1390 - 0.029427012384*t1262*t1399 + 0.158015*t1262*t1447*t369 + 0.158015*t1262*t1421*t467)*var2[4] - 0.5*(0.0031174510920000003*(-1.*t1262*t211*t538 + t1283*t747) - 0.029427012384*(-1.*t122*t1262*t538 + t1283*t782) + 0.158015*t467*(-1.*t1262*t515*t538 + t1283*t852) + 0.158015*t369*(-1.*t1262*t448*t538 + t1283*t897))*var2[5] - 0.5*(0.158015*t369*(t1262*t1588 - 1.*t1283*t34*t400*t547) + 0.158015*t467*(t1262*t1570 - 1.*t1283*t34*t501*t547) - 0.029427012384*(t1262*t1542 + t1283*t34*t547*t63) + 0.0031174510920000003*(t1262*t1509 - 1.*t1283*t34*t547*t75))*var2[15] - 0.5*(-0.029427012384*(t1262*t1867 + t1283*t211) + t2618 + t2634 + 0.0031174510920000003*(t1283*t1661 + t1262*t806))*var2[16] - 0.5*(0.158015*t1200*t2616 + t2618 + t2634 + 0.158015*t1221*(t1283*t1783 + t1262*t919))*var2[17]);
  p_output1[3]=var2[16]*(-0.5*(0.008769*t2946 - 6.e-6*t751 - 0.029427012384*(t2946*t3112 + t2707*(-1.*t2946*t2991 - 1.*t2854*t3015 - 1.*t2946*t4326 - 1.*t3015*t4365) + t3087*t751 + t2854*(t1390*t3015 + t2707*t3015 + t2991*t751 + t4326*t751)) + 0.0031174510920000003*(t2946*t3223 + t1014*(t2946*t2991 + t2854*t3015 + t2946*t4326 + t3015*t4365) + t3166*t806 + t2854*(-1.*t1014*t3015 - 1.*t1399*t3015 - 1.*t2991*t806 - 1.*t4326*t806)) + 1.e-6*t856 + 0.158015*t369*(t2946*t3649 + t1033*(t2946*t3517 + t3561*t4365 + t2946*t4486 + t2854*t4494) + t3575*t856 + t2854*(-1.*t1421*t3561 - 1.*t1033*t4494 - 1.*t3517*t856 - 1.*t4486*t856)) - 0.000029*t919 + 0.158015*t467*(t2946*t3817 + t1232*(-1.*t2946*t3517 - 1.*t3561*t4365 - 1.*t2946*t4486 - 1.*t2854*t4494) + t3710*t919 + t2854*(t1447*t3561 + t1232*t4494 + t3517*t919 + t4486*t919)))*var2[4] - 0.5*(-6.e-6*t14*t211 - 0.000029*t14*t448 + 1.e-6*t14*t515 - 0.008769*t14*t34*t547 - 0.029427012384*(t14*t211*t3087 - 1.*t14*t3112*t34*t547 + t2707*(-1.*t14*t2854*t2893 + t2919 + t2893*t2946*t538 - 1.*t2813*t34*t547 + t14*t2991*t34*t547 - 1.*t3015*t34*t538*t547) + t2854*(t14*t2707*t2893 + t14*t211*t2991 + t3040 + t3041 - 1.*t211*t3015*t538 - 1.*t2893*t538*t751)) + 0.0031174510920000003*(t122*t14*t3166 - 1.*t14*t3223*t34*t547 + t1014*(t14*t2854*t2893 + t3134 - 1.*t2893*t2946*t538 + t2813*t34*t547 - 1.*t14*t2991*t34*t547 + t3015*t34*t538*t547) + t2854*(-1.*t1014*t14*t2893 - 1.*t122*t14*t2991 + t3186 + t3187 + t122*t3015*t538 + t2893*t538*t806)) + 0.158015*t369*(t14*t3575*t515 - 1.*t14*t34*t3649*t547 + t1033*(t3420 + t14*t2854*t3439 + t3462 - 1.*t2946*t3439*t538 - 1.*t14*t34*t3517*t547 + t34*t3561*t538*t547) + t2854*(-1.*t1033*t14*t3439 + t3586 + t3588 - 1.*t14*t3517*t515 + t3561*t515*t538 + t3439*t538*t856)) + 0.158015*t467*(t14*t3710*t448 - 1.*t14*t34*t3817*t547 + t1232*(-1.*t14*t2854*t3439 + t3662 + t3669 + t2946*t3439*t538 + t14*t34*t3517*t547 - 1.*t34*t3561*t538*t547) + t2854*(t1232*t14*t3439 + t3737 + t3751 + t14*t3517*t448 - 1.*t3561*t448*t538 - 1.*t3439*t538*t919)))*var2[5] - 0.5*(0.008769*t3849 - 6.e-6*t552 + 1.e-6*t653 - 0.000029*t698 - 0.029427012384*(t3112*t3849 + t2707*(-1.*t2991*t3849 - 1.*t2854*t3946 - 1.*t2946*t3955 + t4000 + t4013 - 1.*t3015*t4023) + t3087*t552 + t2854*(t1509*t3015 + t3895 + t3918 + t2707*t3946 + t2991*t552 + t3955*t751)) + 0.0031174510920000003*(t3223*t3849 + t1014*(t2991*t3849 + t2854*t3946 + t2946*t3955 + t3015*t4023 + t4050 + t4058) + t3166*t612 + t2854*(-1.*t1542*t3015 - 1.*t1014*t3946 + t4102 + t4103 - 1.*t2991*t612 - 1.*t3955*t806)) + 0.158015*t369*(t3649*t3849 + t1033*(t3517*t3849 + t3561*t4023 + t4159 + t2854*t4170 + t4178 + t2946*t4187) + t3575*t653 + t2854*(-1.*t1570*t3561 - 1.*t1033*t4170 + t4210 + t4212 - 1.*t3517*t653 - 1.*t4187*t856)) + 0.158015*t467*(t3817*t3849 + t1232*(-1.*t3517*t3849 - 1.*t3561*t4023 - 1.*t2854*t4170 - 1.*t2946*t4187 + t4243 + t4248) + t3710*t698 + t2854*(t1588*t3561 + t1232*t4170 + t4270 + t4273 + t3517*t698 + t4187*t919)))*var2[15] - 0.5*(-6.e-6*t1014 + t4590 + t4593 - 0.029427012384*(t1014*t3087 + t2707*(t4643 - 1.*t2854*t4695 - 1.*t2946*t4718) + t2854*(t1014*t2991 + t2707*t4695 + t4734 + t4738 + t4718*t751 + t3015*t806)) + 0.158015*t369*(t5088 + t1033*(t2854*t4997 + t2946*t5014 + t5090) + t2854*(-1.*t1033*t4997 + t5125 + t5129 + t5135 + t5146 - 1.*t5014*t856)) + 0.158015*t467*(t4901 + t1232*(t4964 - 1.*t2854*t4997 - 1.*t2946*t5014) + t2854*(t1232*t4997 + t5029 + t5031 + t5043 + t5062 + t5014*t919)) + 0.0031174510920000003*(t1014*(t2854*t4695 + t2946*t4718 + t4769) + t3166*t990 + t2854*(-1.*t1867*t3015 - 1.*t1014*t4695 + t4780 + t4789 - 1.*t4718*t806 - 1.*t2991*t990)))*var2[16] - 0.5*(0.158015*t1221*(t1033*t3575 + t2854*t3649) + 0.158015*t1200*(t1232*t3710 + t2854*t3817) + t4590 + t4593 + 0.158015*t369*(t5088 + t1033*(t2854*t5315 + t2946*t5333 + t5369) + t2854*(t5125 + t5135 + t5146 - 1.*t1033*t5315 + t5404 - 1.*t5333*t856)) + 0.158015*t467*(t4901 + t1232*(t5281 - 1.*t2854*t5315 - 1.*t2946*t5333) + t2854*(t5031 + t5043 + t5062 + t1232*t5315 + t5342 + t5333*t919)))*var2[17]);
  p_output1[4]=var2[16]*(-0.5*(-0.008769*t114*t547 - 6.e-6*t747 - 0.029427012384*(t1626*(t2919 + t114*t2893*t547) - 1.*t114*t547*t5568 + t5466*t747 + t34*t547*(t211*t2813 + t3040 + t3041 + t2893*t747)) + 0.0031174510920000003*(t1661*(t3134 - 1.*t114*t2893*t547) - 1.*t114*t547*t5722 + t5614*t782 + t34*t547*(-1.*t122*t2813 + t3186 + t3187 - 1.*t2893*t782)) + 1.e-6*t852 + 0.158015*t369*(t1705*(t3420 + t3462 - 1.*t114*t3439*t547 - 1.*t34*t3502*t547) - 1.*t114*t547*t5843 + t5756*t852 + t34*t547*(t3586 + t3588 - 1.*t3502*t515 - 1.*t3439*t852)) - 0.000029*t897 + 0.158015*t467*(t1783*(t3662 + t3669 + t114*t3439*t547 + t34*t3502*t547) - 1.*t114*t547*t5914 + t5859*t897 + t34*t547*(t3737 + t3751 + t3502*t448 + t3439*t897)))*var2[5] - 0.5*(0.000029*t34*t400*t547 - 1.e-6*t34*t501*t547 - 0.008769*t34*t57 + 6.e-6*t34*t547*t75 - 0.029427012384*(-1.*t34*t5568*t57 + t1626*(t4000 + t4013 + t5471 + t5474 - 1.*t3899*t547*t5475 - 1.*t114*t2813*t57) - 1.*t34*t5466*t547*t75 + t34*t547*(t3895 + t3918 + t5512 + t5519 - 1.*t114*t3899*t747 + t114*t2813*t547*t75)) + 0.0031174510920000003*(t1661*(t4050 + t4058 + t3899*t547*t5475 + t5657 + t5659 + t114*t2813*t57) - 1.*t34*t57*t5722 + t34*t547*t5614*t63 + t34*t547*(t4102 + t4103 + t5670 + t5673 + t114*t2813*t547*t63 + t114*t3899*t782)) + 0.158015*t369*(-1.*t34*t501*t547*t5756 + t1705*(t4159 + t4178 + t3485*t547 + t4155*t547*t5475 + t114*t3502*t57 + t5781) - 1.*t34*t57*t5843 + t34*t547*(t4210 + t4212 - 1.*t114*t3502*t501*t547 + t3485*t501*t57 + t5814 + t114*t4155*t852)) + 0.158015*t467*(-1.*t34*t400*t547*t5859 + t1783*(t4243 + t4248 - 1.*t3485*t547 - 1.*t4155*t547*t5475 - 1.*t114*t3502*t57 + t5875) - 1.*t34*t57*t5914 + t34*t547*(t4270 + t4273 + t114*t3502*t400*t547 - 1.*t3485*t400*t57 + t5893 - 1.*t114*t4155*t897)))*var2[15] - 0.5*(-6.e-6*t1661 + t6125 + t6127 - 0.029427012384*(t1661*t5466 + t1626*(t4643 + t114*t4684*t547 - 1.*t4611*t547*t57) + t34*t547*(t4734 + t4738 + t6164 + t6165 + t4684*t747 + t2813*t782)) + 0.158015*t369*(t1705*(t5090 - 1.*t114*t4992*t547 + t4922*t547*t57) + t6271 + t34*t547*(t5125 + t5129 + t6275 + t6276 + t6278 - 1.*t4992*t852)) + 0.158015*t467*(t1783*(t4964 + t114*t4992*t547 - 1.*t4922*t547*t57) + t6233 + t34*t547*(t5029 + t5031 + t6234 + t6236 + t6237 + t4992*t897)) + 0.0031174510920000003*(t211*t5614 + t1661*(t4769 - 1.*t114*t4684*t547 + t4611*t547*t57) + t34*t547*(t4780 + t4789 + t5548 + t6212 - 1.*t4684*t782 - 1.*t2813*t973)))*var2[16] - 0.5*(0.158015*t1221*(t1705*t5756 + t34*t547*t5843) + 0.158015*t1200*(t1783*t5859 + t34*t547*t5914) + t6125 + t6127 + 0.158015*t369*(t1705*(t5369 - 1.*t114*t5300*t547 + t5230*t547*t57) + t6271 + t34*t547*(t5125 + t5404 + t6276 + t6278 + t6341 - 1.*t5300*t852)) + 0.158015*t467*(t1783*(t5281 + t114*t5300*t547 - 1.*t5230*t547*t57) + t6233 + t34*t547*(t5031 + t5342 + t6234 + t6237 + t6327 + t5300*t897)))*var2[17]);
  p_output1[5]=var2[16]*(-0.5*(0.008769*t547 + 0.000029*t400*t57 - 1.e-6*t501*t57 + 0.158015*t467*(t400*t547*(-1.*t4155*t547 + t3407*t57 + t5875 - 1.*t547*t6472) + t57*(-1.*t3407*t400*t547 - 1.*t400*t4155*t57 + t5893 - 1.*t400*t57*t6472) - 1.*t400*t57*t6478 + t547*t6532) + 0.158015*t369*(t501*t547*(t4155*t547 - 1.*t3407*t57 + t5781 + t547*t6472) + t57*(t3407*t501*t547 + t4155*t501*t57 + t5814 + t501*t57*t6472) - 1.*t501*t57*t6547 + t547*t6599) + 6.e-6*t57*t75 + 0.0031174510920000003*(-1.*t547*(t3899*t547 + t5657 + t5659 - 1.*t2804*t57)*t63 + t57*(t5670 + t5673 - 1.*t2804*t547*t63 - 1.*t3899*t57*t63) + t57*t63*t6369 + t547*(t5719 - 1.*t2804*t57*t63 - 1.*t2723*t75)) - 0.029427012384*(t547*(t5548 + t6446 + t6451) + t547*(-1.*t3899*t547 + t5471 + t5474 + t2804*t57)*t75 - 1.*t57*t6400*t75 + t57*(t5512 + t5519 - 1.*t2804*t547*t75 - 1.*t3899*t57*t75)))*var2[15] - 0.5*(6.e-6*t547*t63 + t6709 + t6710 + 0.158015*t467*(t6714 + t57*(t432*t4943 + t6236 + t400*t4922*t6634 + t6716 + t6719 + t6723)) + 0.158015*t369*(t6739 + t57*(-1.*t400*t4943 + t6275 - 1.*t4922*t501*t6634 + t6743 + t6747 + t6748)) + 0.0031174510920000003*(-1.*t547*t6369*t75 + t57*(t5548 + t6212 + t6446 + t6451 + t4611*t63*t6634 - 1.*t2794*t75)) - 0.029427012384*(-1.*t547*t63*t6400 + t57*(t6164 + t6165 + t2794*t63 + t2804*t57*t63 + t2723*t75 + t4611*t6634*t75)))*var2[16] - 0.5*(0.158015*t1200*(t400*t547*t6478 + t57*t6532) + 0.158015*t1221*(t501*t547*t6547 + t57*t6599) + t6709 + t6710 + 0.158015*t467*(t6714 + t57*(t432*t5269 + t6327 + t400*t5230*t6634 + t6716 + t6719 + t6723)) + 0.158015*t369*(t6739 + t57*(-1.*t400*t5269 + t6341 - 1.*t501*t5230*t6634 + t6743 + t6747 + t6748)))*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*(-0.00019032974151987603*t63 + t6822 + t6823 + t6824 + t6830 + 0.0017906073870803524*t75)*var2[16] - 0.5*(0.158015*t1221*(0. + 0.081307*t400) + 0.158015*t1200*(0. - 0.128057*t432 - 0.04675*t501) + t6822 + t6823 + t6824 + t6830)*var2[17]);
  p_output1[16]=-0.5*(0.31603*t1221*t369 + 0.31603*t1200*t467)*var2[16]*var2[17];
  p_output1[17]=-0.5*(-0.019320336034999996*t1200 - 0.0009932822899999978*t1221)*var2[16]*var2[17];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec17_go1_description.hh"

namespace SymFunction
{

void Ce1_vec17_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
