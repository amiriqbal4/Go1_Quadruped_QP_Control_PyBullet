/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:27:29 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t9;
  double t80;
  double t44;
  double t58;
  double t62;
  double t89;
  double t124;
  double t147;
  double t149;
  double t160;
  double t200;
  double t228;
  double t234;
  double t244;
  double t151;
  double t153;
  double t161;
  double t166;
  double t299;
  double t333;
  double t334;
  double t566;
  double t570;
  double t416;
  double t417;
  double t425;
  double t426;
  double t443;
  double t454;
  double t456;
  double t137;
  double t176;
  double t282;
  double t284;
  double t353;
  double t370;
  double t375;
  double t774;
  double t778;
  double t785;
  double t855;
  double t858;
  double t877;
  double t1056;
  double t1065;
  double t1068;
  double t1003;
  double t1018;
  double t1031;
  double t1054;
  double t1174;
  double t1180;
  double t1151;
  double t1156;
  double t1160;
  double t898;
  double t904;
  double t905;
  double t1072;
  double t1073;
  double t1075;
  double t1077;
  double t1089;
  double t1097;
  double t1099;
  double t710;
  double t712;
  double t716;
  double t116;
  double t119;
  double t120;
  double t1288;
  double t63;
  double t101;
  double t105;
  double t1276;
  double t471;
  double t476;
  double t477;
  double t351;
  double t396;
  double t399;
  double t942;
  double t704;
  double t717;
  double t725;
  double t760;
  double t815;
  double t817;
  double t851;
  double t880;
  double t883;
  double t888;
  double t923;
  double t933;
  double t943;
  double t955;
  double t956;
  double t1705;
  double t1716;
  double t1718;
  double t1759;
  double t1767;
  double t1768;
  double t1981;
  double t1983;
  double t1989;
  double t1990;
  double t1141;
  double t1144;
  double t1171;
  double t1172;
  double t1206;
  double t1208;
  double t1223;
  double t1227;
  double t1229;
  double t1789;
  double t1791;
  double t1792;
  double t1995;
  double t2008;
  double t2027;
  double t2031;
  double t2040;
  double t2047;
  double t2054;
  double t2059;
  double t2069;
  double t2071;
  double t1386;
  double t1402;
  double t1424;
  double t1434;
  double t1437;
  double t1450;
  double t1455;
  double t1476;
  double t1484;
  double t1491;
  double t1498;
  double t1536;
  double t1538;
  double t1540;
  double t1584;
  double t1585;
  double t1587;
  double t1610;
  double t1614;
  double t1623;
  double t1641;
  double t1647;
  double t1649;
  double t1667;
  double t1669;
  double t1682;
  double t1954;
  double t1957;
  double t1960;
  double t2095;
  double t2102;
  double t2105;
  double t1852;
  double t1857;
  double t1862;
  double t2601;
  double t2603;
  double t2607;
  double t2608;
  double t2610;
  double t2616;
  double t2620;
  double t2621;
  double t2765;
  double t2766;
  double t2767;
  double t2769;
  double t2770;
  double t2779;
  double t2790;
  double t2797;
  double t2798;
  double t2735;
  double t2741;
  double t2742;
  double t2746;
  double t2747;
  double t2756;
  double t2837;
  double t2848;
  double t2849;
  double t2758;
  double t2800;
  double t2812;
  double t2908;
  double t2911;
  double t2913;
  double t2828;
  double t2833;
  double t2835;
  double t2872;
  double t2876;
  double t2879;
  double t2715;
  double t2723;
  double t2727;
  double t2914;
  double t2927;
  double t2928;
  double t2931;
  double t2937;
  double t2974;
  double t2883;
  double t2885;
  double t2901;
  double t984;
  double t989;
  double t996;
  double t3322;
  double t3326;
  double t3328;
  double t3331;
  double t3334;
  double t3338;
  double t3344;
  double t3346;
  double t3286;
  double t3294;
  double t3295;
  double t3304;
  double t3358;
  double t3359;
  double t3362;
  double t3316;
  double t3350;
  double t3405;
  double t3411;
  double t3417;
  double t3427;
  double t3378;
  double t3380;
  double t3395;
  double t3422;
  double t3431;
  double t3435;
  double t3448;
  double t3451;
  double t3471;
  double t3354;
  double t1231;
  double t1232;
  double t1234;
  double t569;
  double t584;
  double t587;
  double t637;
  double t641;
  double t642;
  double t648;
  double t659;
  double t674;
  double t3066;
  double t3077;
  double t3078;
  double t3085;
  double t3890;
  double t3891;
  double t3892;
  double t3904;
  double t3909;
  double t3921;
  double t3928;
  double t3933;
  double t3937;
  double t3940;
  double t3942;
  double t3857;
  double t3858;
  double t3870;
  double t3110;
  double t3128;
  double t3132;
  double t3135;
  double t590;
  double t594;
  double t631;
  double t3217;
  double t3222;
  double t3223;
  double t3227;
  double t3953;
  double t3982;
  double t3994;
  double t3999;
  double t3262;
  double t3263;
  double t3266;
  double t3269;
  double t3508;
  double t3511;
  double t3517;
  double t3524;
  double t4102;
  double t4103;
  double t4109;
  double t4116;
  double t4118;
  double t4122;
  double t4129;
  double t4130;
  double t4141;
  double t4145;
  double t4158;
  double t3579;
  double t3583;
  double t3588;
  double t3591;
  double t3706;
  double t3708;
  double t3714;
  double t3726;
  double t3794;
  double t3795;
  double t3813;
  double t3815;
  double t4321;
  double t4324;
  double t4332;
  double t4337;
  double t4338;
  double t4340;
  double t4483;
  double t4443;
  double t4450;
  double t4467;
  double t4611;
  double t4617;
  double t4663;
  double t4727;
  double t4734;
  double t4743;
  double t4690;
  double t4691;
  double t4701;
  double t4722;
  double t4749;
  double t4753;
  double t4758;
  double t4762;
  double t4764;
  double t962;
  double t969;
  double t4915;
  double t4916;
  double t4917;
  double t4918;
  double t4924;
  double t4932;
  double t4937;
  double t4938;
  double t4923;
  double t4926;
  double t4927;
  double t4931;
  double t4939;
  double t4941;
  double t4946;
  double t4951;
  double t4962;
  double t4592;
  double t4598;
  double t4909;
  double t5181;
  double t5183;
  double t5185;
  double t5188;
  double t5192;
  double t5193;
  double t5235;
  double t5236;
  double t5240;
  double t5187;
  double t5205;
  double t5210;
  double t4969;
  double t4972;
  double t4977;
  double t5221;
  double t5241;
  double t5255;
  double t5259;
  double t5260;
  double t5262;
  double t5048;
  double t5086;
  double t5099;
  double t5100;
  double t3956;
  double t3965;
  double t3889;
  double t3901;
  double t4025;
  double t5411;
  double t4032;
  double t4040;
  double t4042;
  double t4115;
  double t4140;
  double t4173;
  double t4175;
  double t4211;
  double t4213;
  double t4231;
  double t4233;
  double t5385;
  double t5388;
  double t5393;
  double t2882;
  double t3001;
  double t3007;
  double t5461;
  double t5466;
  double t5472;
  double t5507;
  double t5508;
  double t5509;
  double t3167;
  double t5620;
  double t5623;
  double t5625;
  double t3236;
  double t3240;
  double t5646;
  double t5652;
  double t5653;
  double t3357;
  double t3398;
  double t3554;
  double t3559;
  double t5705;
  double t5710;
  double t5716;
  double t5729;
  double t5736;
  double t5745;
  double t3626;
  double t3644;
  double t5828;
  double t5832;
  double t5838;
  double t3733;
  double t3745;
  double t4711;
  double t4783;
  double t4788;
  double t4837;
  double t6027;
  double t4854;
  double t4860;
  double t4930;
  double t4967;
  double t5054;
  double t5087;
  double t6002;
  double t6003;
  double t6100;
  double t5218;
  double t6107;
  double t6115;
  double t5275;
  double t6155;
  double t5308;
  double t6157;
  double t5328;
  double t6159;
  double t5513;
  double t5518;
  double t5533;
  double t5537;
  double t5430;
  double t5440;
  double t5401;
  double t5407;
  double t6440;
  double t5780;
  double t5810;
  double t5660;
  double t5677;
  double t6359;
  double t6360;
  double t6029;
  double t6032;
  double t6309;
  double t6311;
  double t6416;
  double t6418;
  double t6073;
  double t6584;
  double t6441;
  double t6444;
  double t6447;
  double t6112;
  double t6496;
  double t6502;
  double t6505;
  double t6156;
  double t6613;
  double t6618;
  double t6463;
  double t6465;
  double t6466;
  double t6474;
  double t6550;
  double t6552;
  double t6553;
  double t6555;
  double t6619;
  double t6621;
  double t6625;
  double t6632;
  double t6235;
  double t6646;
  double t6676;
  double t6267;
  double t6685;
  double t6686;
  double t6762;
  double t6763;
  double t6764;
  double t6766;
  double t6768;
  double t6770;
  double t6773;
  t9 = Cos(var1[4]);
  t80 = Cos(var1[13]);
  t44 = Cos(var1[5]);
  t58 = Sin(var1[12]);
  t62 = Sin(var1[13]);
  t89 = Sin(var1[5]);
  t124 = Cos(var1[14]);
  t147 = -1.*t124;
  t149 = 1. + t147;
  t160 = Sin(var1[14]);
  t200 = -0.213*t149;
  t228 = -0.335269*t124;
  t234 = -0.006286*t160;
  t244 = t200 + t228 + t234;
  t151 = -0.1881*t149;
  t153 = -0.181814*t124;
  t161 = -0.12226899999999999*t160;
  t166 = t151 + t153 + t161;
  t299 = t80*t124;
  t333 = -1.*t62*t160;
  t334 = t299 + t333;
  t566 = Sin(var1[4]);
  t570 = Cos(var1[12]);
  t416 = t124*t244;
  t417 = 0.1881*t160;
  t425 = t166*t160;
  t426 = 0. + t416 + t417 + t425;
  t443 = -1.*t124*t62;
  t454 = -1.*t80*t160;
  t456 = t443 + t454;
  t137 = -0.1881*t124;
  t176 = -1.*t124*t166;
  t282 = t244*t160;
  t284 = 0. + t137 + t176 + t282;
  t353 = t124*t62;
  t370 = t80*t160;
  t375 = t353 + t370;
  t774 = t80*t44;
  t778 = -1.*t58*t62*t89;
  t785 = t774 + t778;
  t855 = t44*t334;
  t858 = t58*t456*t89;
  t877 = t855 + t858;
  t1056 = -1.*t80*t124;
  t1065 = t62*t160;
  t1068 = t1056 + t1065;
  t1003 = t570*t456*t566;
  t1018 = t9*t877;
  t1031 = t1003 + t1018;
  t1054 = 0.158015*t284*t1031;
  t1174 = -0.12226899999999999*t124;
  t1180 = t1174 + t234;
  t1151 = -0.006286*t124;
  t1156 = 0.12226899999999999*t160;
  t1160 = t1151 + t1156;
  t898 = t44*t375;
  t904 = t58*t334*t89;
  t905 = t898 + t904;
  t1072 = t570*t1068*t566;
  t1073 = t44*t456;
  t1075 = t58*t1068*t89;
  t1077 = t1073 + t1075;
  t1089 = t9*t1077;
  t1097 = t1072 + t1089;
  t1099 = 0.158015*t426*t1097;
  t710 = t44*t62;
  t712 = t80*t58*t89;
  t716 = t710 + t712;
  t116 = t80*t44*t58;
  t119 = -1.*t62*t89;
  t120 = t116 + t119;
  t1288 = Sin(var1[3]);
  t63 = -1.*t44*t58*t62;
  t101 = -1.*t80*t89;
  t105 = t63 + t101;
  t1276 = Cos(var1[3]);
  t471 = t44*t58*t456;
  t476 = -1.*t334*t89;
  t477 = t471 + t476;
  t351 = t44*t58*t334;
  t396 = -1.*t375*t89;
  t399 = t351 + t396;
  t942 = -1.*t570*t80*t566;
  t704 = t570*t80*t9;
  t717 = -1.*t566*t716;
  t725 = t704 + t717;
  t760 = -1.*t570*t9*t62;
  t815 = -1.*t566*t785;
  t817 = t760 + t815;
  t851 = t570*t9*t456;
  t880 = -1.*t566*t877;
  t883 = t851 + t880;
  t888 = t570*t9*t334;
  t923 = -1.*t566*t905;
  t933 = t888 + t923;
  t943 = -1.*t44*t62;
  t955 = -1.*t80*t58*t89;
  t956 = t943 + t955;
  t1705 = t44*t58*t62;
  t1716 = t80*t89;
  t1718 = t1705 + t1716;
  t1759 = -1.*t44*t58*t456;
  t1767 = t334*t89;
  t1768 = t1759 + t1767;
  t1981 = t1276*t1768;
  t1983 = -1.*t1288*t883;
  t1989 = t1981 + t1983;
  t1990 = 0.158015*t284*t1989;
  t1141 = 0.1881*t124;
  t1144 = t124*t166;
  t1171 = t124*t1160;
  t1172 = -1.*t244*t160;
  t1206 = t1180*t160;
  t1208 = t1141 + t1144 + t1171 + t1172 + t1206;
  t1223 = -1.*t124*t1180;
  t1227 = t1160*t160;
  t1229 = t416 + t1223 + t417 + t425 + t1227;
  t1789 = -1.*t44*t58*t334;
  t1791 = t375*t89;
  t1792 = t1789 + t1791;
  t1995 = -1.*t44*t58*t1068;
  t2008 = t456*t89;
  t2027 = t1995 + t2008;
  t2031 = t1276*t2027;
  t2040 = t570*t9*t1068;
  t2047 = -1.*t566*t1077;
  t2054 = t2040 + t2047;
  t2059 = -1.*t1288*t2054;
  t2069 = t2031 + t2059;
  t2071 = 0.158015*t426*t2069;
  t1386 = -1.*t9*t716;
  t1402 = t942 + t1386;
  t1424 = t570*t62*t566;
  t1434 = -1.*t9*t785;
  t1437 = t1424 + t1434;
  t1450 = -1.*t570*t456*t566;
  t1455 = -1.*t9*t877;
  t1476 = t1450 + t1455;
  t1484 = -1.*t570*t334*t566;
  t1491 = -1.*t9*t905;
  t1498 = t1484 + t1491;
  t1536 = -1.*t80*t9*t58;
  t1538 = -1.*t570*t80*t566*t89;
  t1540 = t1536 + t1538;
  t1584 = t9*t58*t62;
  t1585 = t570*t62*t566*t89;
  t1587 = t1584 + t1585;
  t1610 = -1.*t9*t58*t456;
  t1614 = -1.*t570*t456*t566*t89;
  t1623 = t1610 + t1614;
  t1641 = -1.*t9*t58*t334;
  t1647 = -1.*t570*t334*t566*t89;
  t1649 = t1641 + t1647;
  t1667 = -1.*t80*t44*t58;
  t1669 = t62*t89;
  t1682 = t1667 + t1669;
  t1954 = t1276*t1718;
  t1957 = -1.*t1288*t817;
  t1960 = t1954 + t1957;
  t2095 = t1276*t1792;
  t2102 = -1.*t1288*t933;
  t2105 = t2095 + t2102;
  t1852 = -1.*t570*t80*t9;
  t1857 = -1.*t566*t956;
  t1862 = t1852 + t1857;
  t2601 = t1288*t1768;
  t2603 = t1276*t883;
  t2607 = t2601 + t2603;
  t2608 = 0.158015*t284*t2607;
  t2610 = t1288*t2027;
  t2616 = t1276*t2054;
  t2620 = t2610 + t2616;
  t2621 = 0.158015*t426*t2620;
  t2765 = -1.*t570;
  t2766 = 1. + t2765;
  t2767 = -0.04675*t2766;
  t2769 = -0.107803*t570;
  t2770 = -0.032736*t80;
  t2779 = 0.003468*t62;
  t2790 = t2770 + t2779;
  t2797 = -1.*t58*t2790;
  t2798 = t2767 + t2769 + t2797;
  t2735 = -1.*t80;
  t2741 = 1. + t2735;
  t2742 = -0.1881*t2741;
  t2746 = -0.191568*t80;
  t2747 = -0.032736*t62;
  t2756 = t2742 + t2746 + t2747;
  t2837 = -1.*t44*t2798;
  t2848 = -1.*t2756*t89;
  t2849 = t2837 + t2848;
  t2758 = t44*t2756;
  t2800 = -1.*t2798*t89;
  t2812 = t2758 + t2800;
  t2908 = -0.061053*t58;
  t2911 = t570*t2790;
  t2913 = t2908 + t2911;
  t2828 = t58*t566;
  t2833 = -1.*t570*t9*t89;
  t2835 = t2828 + t2833;
  t2872 = t44*t2798;
  t2876 = t2756*t89;
  t2879 = t2872 + t2876;
  t2715 = t570*t80*t566;
  t2723 = t9*t716;
  t2727 = t2715 + t2723;
  t2914 = t2913*t566;
  t2927 = t9*t2812;
  t2928 = t2914 + t2927;
  t2931 = t9*t2913;
  t2937 = -1.*t566*t2812;
  t2974 = t2931 + t2937;
  t2883 = t9*t58;
  t2885 = t570*t566*t89;
  t2901 = t2883 + t2885;
  t984 = -1.*t570*t62*t566;
  t989 = t9*t785;
  t996 = t984 + t989;
  t3322 = -0.04675*t2766;
  t3326 = -0.125443*t570;
  t3328 = -0.1881*t62;
  t3331 = -1.*t62*t166;
  t3334 = t80*t244;
  t3338 = 0. + t3328 + t3331 + t3334;
  t3344 = -1.*t58*t3338;
  t3346 = t3322 + t3326 + t3344;
  t3286 = -0.1881*t2741;
  t3294 = t80*t166;
  t3295 = t62*t244;
  t3304 = 0. + t3286 + t3294 + t3295;
  t3358 = -1.*t44*t3346;
  t3359 = -1.*t3304*t89;
  t3362 = t3358 + t3359;
  t3316 = t44*t3304;
  t3350 = -1.*t3346*t89;
  t3405 = -0.078693*t58;
  t3411 = t570*t3338;
  t3417 = 0. + t3405 + t3411;
  t3427 = 0. + t3316 + t3350;
  t3378 = t44*t3346;
  t3380 = t3304*t89;
  t3395 = 0. + t3378 + t3380;
  t3422 = t3417*t566;
  t3431 = t9*t3427;
  t3435 = 0. + t3422 + t3431;
  t3448 = t9*t3417;
  t3451 = -1.*t566*t3427;
  t3471 = 0. + t3448 + t3451;
  t3354 = t3316 + t3350;
  t1231 = t570*t334*t566;
  t1232 = t9*t905;
  t1234 = t1231 + t1232;
  t569 = -1.*t80*t58*t566;
  t584 = t570*t80*t9*t89;
  t587 = t569 + t584;
  t637 = -1.*t58*t456*t566;
  t641 = t570*t9*t456*t89;
  t642 = t637 + t641;
  t648 = -1.*t58*t334*t566;
  t659 = t570*t9*t334*t89;
  t674 = t648 + t659;
  t3066 = -1.*t570*t44*t2879;
  t3077 = -1.*t2835*t2928;
  t3078 = -1.*t2901*t2974;
  t3085 = t3066 + t3077 + t3078;
  t3890 = 0.061053*t58;
  t3891 = -1.*t570*t2790;
  t3892 = t3890 + t3891;
  t3904 = -0.061053*t570;
  t3909 = t3904 + t2797;
  t3921 = t3909*t566;
  t3928 = -1.*t9*t3892*t89;
  t3933 = t3921 + t3928;
  t3937 = t9*t3909;
  t3940 = t3892*t566*t89;
  t3942 = t3937 + t3940;
  t3857 = t570*t566;
  t3858 = t9*t58*t89;
  t3870 = t3857 + t3858;
  t3110 = t2879*t1682;
  t3128 = t2727*t2928;
  t3132 = t725*t2974;
  t3135 = t3110 + t3128 + t3132;
  t590 = t58*t62*t566;
  t594 = -1.*t570*t9*t62*t89;
  t631 = t590 + t594;
  t3217 = t570*t44*t2879;
  t3222 = t2835*t2928;
  t3223 = t2901*t2974;
  t3227 = t3217 + t3222 + t3223;
  t3953 = Power(t44,2);
  t3982 = t570*t9;
  t3994 = -1.*t58*t566*t89;
  t3999 = t3982 + t3994;
  t3262 = -1.*t1718*t2879;
  t3263 = -1.*t2928*t996;
  t3266 = -1.*t2974*t817;
  t3269 = t3262 + t3263 + t3266;
  t3508 = t570*t44*t3395;
  t3511 = t2835*t3435;
  t3517 = t2901*t3471;
  t3524 = t3508 + t3511 + t3517;
  t4102 = 0.078693*t58;
  t4103 = -1.*t570*t3338;
  t4109 = t4102 + t4103;
  t4116 = -0.078693*t570;
  t4118 = t4116 + t3344;
  t4122 = t4118*t566;
  t4129 = -1.*t9*t4109*t89;
  t4130 = t4122 + t4129;
  t4141 = t9*t4118;
  t4145 = t4109*t566*t89;
  t4158 = t4141 + t4145;
  t3579 = -1.*t3395*t1768;
  t3583 = -1.*t3435*t1031;
  t3588 = -1.*t3471*t883;
  t3591 = t3579 + t3583 + t3588;
  t3706 = -1.*t570*t44*t3395;
  t3708 = -1.*t2835*t3435;
  t3714 = -1.*t2901*t3471;
  t3726 = t3706 + t3708 + t3714;
  t3794 = t3395*t1792;
  t3795 = t3435*t1234;
  t3813 = t3471*t933;
  t3815 = t3794 + t3795 + t3813;
  t4321 = -1.*t2913*t566;
  t4324 = -1.*t9*t2812;
  t4332 = t4321 + t4324;
  t4337 = -1.*t58*t566;
  t4338 = t570*t9*t89;
  t4340 = t4337 + t4338;
  t4483 = t3448 + t3451;
  t4443 = -1.*t3417*t566;
  t4450 = -1.*t9*t3427;
  t4467 = t4443 + t4450;
  t4611 = 0.003468*t80;
  t4617 = 0.032736*t62;
  t4663 = t4611 + t4617;
  t4727 = t44*t2790;
  t4734 = t58*t4663*t89;
  t4743 = t4727 + t4734;
  t4690 = -1.*t44*t58*t4663;
  t4691 = t2790*t89;
  t4701 = t4690 + t4691;
  t4722 = t570*t4663*t566;
  t4749 = t9*t4743;
  t4753 = t4722 + t4749;
  t4758 = t570*t9*t4663;
  t4762 = -1.*t566*t4743;
  t4764 = t4758 + t4762;
  t962 = t9*t956;
  t969 = t942 + t962;
  t4915 = -0.1881*t80;
  t4916 = -1.*t80*t166;
  t4917 = -1.*t62*t244;
  t4918 = t4915 + t4916 + t4917;
  t4924 = t3328 + t3331 + t3334;
  t4932 = t44*t4924;
  t4937 = t58*t4918*t89;
  t4938 = t4932 + t4937;
  t4923 = -1.*t44*t58*t4918;
  t4926 = t4924*t89;
  t4927 = t4923 + t4926;
  t4931 = t570*t4918*t566;
  t4939 = t9*t4938;
  t4941 = t4931 + t4939;
  t4946 = t570*t9*t4918;
  t4951 = -1.*t566*t4938;
  t4962 = t4946 + t4951;
  t4592 = -0.000029*t1031;
  t4598 = 1.e-6*t1097;
  t4909 = t1031*t3726;
  t5181 = -1.*t62*t1180;
  t5183 = t80*t1160;
  t5185 = t5181 + t5183;
  t5188 = t80*t1180;
  t5192 = t62*t1160;
  t5193 = t5188 + t5192;
  t5235 = t44*t5193;
  t5236 = t58*t5185*t89;
  t5240 = t5235 + t5236;
  t5187 = -1.*t44*t58*t5185;
  t5205 = t5193*t89;
  t5210 = t5187 + t5205;
  t4969 = t3395*t1768;
  t4972 = t3435*t1031;
  t4977 = t3471*t883;
  t5221 = t570*t5185*t566;
  t5241 = t9*t5240;
  t5255 = t5221 + t5241;
  t5259 = t570*t9*t5185;
  t5260 = -1.*t566*t5240;
  t5262 = t5259 + t5260;
  t5048 = t1097*t3524;
  t5086 = -1.*t3395*t2027;
  t5099 = -1.*t3435*t1097;
  t5100 = -1.*t3471*t2054;
  t3956 = -1.*t570*t3953*t3892;
  t3965 = t44*t58*t2879;
  t3889 = -1.*t570*t80*t44*t2879;
  t3901 = t44*t3892*t1682;
  t4025 = t570*t3953*t3892;
  t5411 = Power(t89,2);
  t4032 = -1.*t44*t58*t2879;
  t4040 = -1.*t44*t3892*t1718;
  t4042 = -1.*t570*t44*t62*t2879;
  t4115 = t570*t3953*t4109;
  t4140 = -1.*t44*t58*t3395;
  t4173 = t570*t44*t456*t3395;
  t4175 = -1.*t44*t4109*t1768;
  t4211 = -1.*t570*t3953*t4109;
  t4213 = t44*t58*t3395;
  t4231 = -1.*t570*t44*t334*t3395;
  t4233 = t44*t4109*t1792;
  t5385 = -1.*t58*t2913;
  t5388 = t570*t89*t2812;
  t5393 = t5385 + t5388 + t3066;
  t2882 = t570*t89*t2879;
  t3001 = t716*t2879;
  t3007 = t2812*t1682;
  t5461 = t570*t80*t2913;
  t5466 = t716*t2812;
  t5472 = t5461 + t5466 + t3110;
  t5507 = t58*t2913;
  t5508 = -1.*t570*t89*t2812;
  t5509 = t5507 + t5508 + t3217;
  t3167 = -1.*t570*t89*t2879;
  t5620 = t570*t2913*t62;
  t5623 = -1.*t2812*t785;
  t5625 = t5620 + t3262 + t5623;
  t3236 = -1.*t1718*t2812;
  t3240 = -1.*t2879*t785;
  t5646 = t58*t3417;
  t5652 = -1.*t570*t89*t3427;
  t5653 = t5646 + t5652 + t3508;
  t3357 = t570*t44*t3354;
  t3398 = -1.*t570*t89*t3395;
  t3554 = -1.*t3395*t877;
  t3559 = -1.*t3354*t1768;
  t5705 = -1.*t570*t3417*t456;
  t5710 = -1.*t3427*t877;
  t5716 = t5705 + t5710 + t3579;
  t5729 = -1.*t58*t3417;
  t5736 = t570*t89*t3427;
  t5745 = t5729 + t5736 + t3706;
  t3626 = -1.*t570*t44*t3354;
  t3644 = t570*t89*t3395;
  t5828 = t570*t3417*t334;
  t5832 = t3427*t905;
  t5838 = t5828 + t3794 + t5832;
  t3733 = t3354*t1792;
  t3745 = t3395*t905;
  t4711 = -1.*t570*t44*t4701;
  t4783 = t1718*t2879;
  t4788 = t4701*t1682;
  t4837 = t570*t44*t4701;
  t6027 = Power(t570,2);
  t4854 = -1.*t1718*t4701;
  t4860 = -1.*t2879*t120;
  t4930 = -1.*t570*t44*t4927;
  t4967 = t4927*t1792;
  t5054 = t570*t44*t4927;
  t5087 = -1.*t4927*t1768;
  t6002 = 1.e-6*t2027;
  t6003 = -0.000029*t1768;
  t6100 = t1768*t5745;
  t5218 = -1.*t570*t44*t5210;
  t6107 = t570*t3417*t456;
  t6115 = t3427*t877;
  t5275 = t5210*t1792;
  t6155 = t2027*t5653;
  t5308 = t570*t44*t5210;
  t6157 = -1.*t570*t3417*t1068;
  t5328 = -1.*t5210*t1768;
  t6159 = -1.*t3427*t1077;
  t5513 = t570*t2913;
  t5518 = t58*t3909;
  t5533 = -1.*t58*t2913*t62;
  t5537 = t570*t3909*t62;
  t5430 = -1.*t80*t58*t2913;
  t5440 = t570*t80*t3909;
  t5401 = -1.*t570*t2913;
  t5407 = -1.*t58*t3909;
  t6440 = t3405 + t3411;
  t5780 = -1.*t58*t4118;
  t5810 = t570*t4118*t334;
  t5660 = t58*t4118;
  t5677 = -1.*t570*t4118*t456;
  t6359 = -1.*t570*t2798;
  t6360 = t5385 + t6359;
  t6029 = t6027*t80*t4663;
  t6032 = -1.*t570*t2913*t62;
  t6309 = t570*t2798;
  t6311 = t5507 + t6309;
  t6416 = -1.*t80*t58*t2798;
  t6418 = t2756*t62;
  t6073 = t6027*t4663*t62;
  t6584 = Power(t58,2);
  t6441 = -1.*t58*t6440;
  t6444 = -1.*t570*t3346;
  t6447 = t6441 + t6444;
  t6112 = t6027*t4918*t334;
  t6496 = t58*t6440;
  t6502 = t570*t3346;
  t6505 = t6496 + t6502;
  t6156 = -1.*t6027*t4918*t456;
  t6613 = -0.000029*t570*t456;
  t6618 = 1.e-6*t570*t1068;
  t6463 = t3304*t375;
  t6465 = t570*t6440*t334;
  t6466 = -1.*t58*t3346*t334;
  t6474 = t6463 + t6465 + t6466;
  t6550 = -1.*t570*t6440*t456;
  t6552 = t58*t3346*t456;
  t6553 = -1.*t3304*t334;
  t6555 = t6550 + t6552 + t6553;
  t6619 = t570*t6447*t456;
  t6621 = t570*t6440*t456;
  t6625 = -1.*t58*t3346*t456;
  t6632 = t3304*t334;
  t6235 = t6027*t5185*t334;
  t6646 = t570*t6505*t1068;
  t6676 = -1.*t3304*t456;
  t6267 = -1.*t6027*t5185*t456;
  t6685 = -1.*t570*t6440*t1068;
  t6686 = t58*t3346*t1068;
  t6762 = 1.e-6*t456;
  t6763 = -0.000029*t334;
  t6764 = -0.012434674395*t456*t284;
  t6766 = 0.125443*t334;
  t6768 = 0.04675*t1068;
  t6770 = t6766 + t6768;
  t6773 = 0.158015*t426*t6770;
  p_output1[0]=var2[13]*(-0.5*(0.0031174510920000003*t725 - 0.029427012384*t817 + 0.158015*t426*t883 + 0.158015*t284*t933)*var2[4] - 0.5*(-0.029427012384*t105*t9 + 0.0031174510920000003*t120*t9 + 0.158015*t284*t399*t9 + 0.158015*t426*t477*t9)*var2[5] - 0.5*(0.0031174510920000003*t587 - 0.029427012384*t631 + 0.158015*t426*t642 + 0.158015*t284*t674)*var2[12] - 0.5*(t1054 + t1099 - 0.029427012384*t969 + 0.0031174510920000003*t996)*var2[13] - 0.5*(t1054 + t1099 + 0.158015*t1031*t1208 + 0.158015*t1229*t1234)*var2[14]);
  p_output1[1]=var2[13]*(-0.5*(0.0031174510920000003*(-1.*t1288*t1682 - 1.*t1276*t725) - 0.029427012384*(-1.*t1288*t1718 - 1.*t1276*t817) + 0.158015*t426*(-1.*t1288*t1768 - 1.*t1276*t883) + 0.158015*t284*(-1.*t1288*t1792 - 1.*t1276*t933))*var2[3] - 0.5*(-0.0031174510920000003*t1288*t1402 + 0.029427012384*t1288*t1437 - 0.158015*t1288*t1498*t284 - 0.158015*t1288*t1476*t426)*var2[4] - 0.5*(0.0031174510920000003*(t120*t1288*t566 + t1276*t716) - 0.029427012384*(t105*t1288*t566 + t1276*t785) + 0.158015*t426*(t1288*t477*t566 + t1276*t877) + 0.158015*t284*(t1288*t399*t566 + t1276*t905))*var2[5] - 0.5*(0.158015*t284*(-1.*t1288*t1649 - 1.*t1276*t334*t44*t570) + 0.158015*t426*(-1.*t1288*t1623 - 1.*t1276*t44*t456*t570) - 0.029427012384*(-1.*t1288*t1587 + t1276*t44*t570*t62) + 0.0031174510920000003*(-1.*t1288*t1540 - 1.*t1276*t44*t570*t80))*var2[12] - 0.5*(-0.029427012384*(t120*t1276 - 1.*t1288*t1862) + 0.0031174510920000003*t1960 + t1990 + t2071)*var2[13] - 0.5*(0.158015*t1208*t1989 + t1990 + t2071 + 0.158015*t1229*t2105)*var2[14]);
  p_output1[2]=var2[13]*(-0.5*(-0.029427012384*t1960 + 0.158015*t2105*t284 + 0.158015*t1989*t426 + 0.0031174510920000003*(t1276*t1682 - 1.*t1288*t725))*var2[3] - 0.5*(0.0031174510920000003*t1276*t1402 - 0.029427012384*t1276*t1437 + 0.158015*t1276*t1498*t284 + 0.158015*t1276*t1476*t426)*var2[4] - 0.5*(0.0031174510920000003*(-1.*t120*t1276*t566 + t1288*t716) - 0.029427012384*(-1.*t105*t1276*t566 + t1288*t785) + 0.158015*t426*(-1.*t1276*t477*t566 + t1288*t877) + 0.158015*t284*(-1.*t1276*t399*t566 + t1288*t905))*var2[5] - 0.5*(0.158015*t284*(t1276*t1649 - 1.*t1288*t334*t44*t570) + 0.158015*t426*(t1276*t1623 - 1.*t1288*t44*t456*t570) - 0.029427012384*(t1276*t1587 + t1288*t44*t570*t62) + 0.0031174510920000003*(t1276*t1540 - 1.*t1288*t44*t570*t80))*var2[12] - 0.5*(-0.029427012384*(t120*t1288 + t1276*t1862) + t2608 + t2621 + 0.0031174510920000003*(t1288*t1718 + t1276*t817))*var2[13] - 0.5*(0.158015*t1208*t2607 + t2608 + t2621 + 0.158015*t1229*(t1288*t1792 + t1276*t933))*var2[14]);
  p_output1[3]=var2[13]*(-0.5*(0.008769*t2901 + 6.e-6*t725 - 0.029427012384*(t2901*t3135 + t2727*(-1.*t2901*t2928 - 1.*t2835*t2974 - 1.*t2901*t4332 - 1.*t2974*t4340) + t3085*t725 + t2835*(t1402*t2974 + t2727*t2974 + t2928*t725 + t4332*t725)) + 1.e-6*t883 + 0.158015*t284*(t2901*t3591 + t1031*(t2901*t3435 + t3471*t4340 + t2901*t4467 + t2835*t4483) + t3524*t883 + t2835*(-1.*t1476*t3471 - 1.*t1031*t4483 - 1.*t3435*t883 - 1.*t4467*t883)) - 0.000029*t933 + 0.158015*t426*(t2901*t3815 + t1234*(-1.*t2901*t3435 - 1.*t3471*t4340 - 1.*t2901*t4467 - 1.*t2835*t4483) + t3726*t933 + t2835*(t1498*t3471 + t1234*t4483 + t3435*t933 + t4467*t933)) + 0.0031174510920000003*(t2901*t3269 + t3227*t817 + (t2901*t2928 + t2835*t2974 + t2901*t4332 + t2974*t4340)*t996 + t2835*(-1.*t1437*t2974 - 1.*t2928*t817 - 1.*t4332*t817 - 1.*t2974*t996)))*var2[4] - 0.5*(6.e-6*t120*t9 - 0.000029*t399*t9 + 1.e-6*t477*t9 - 0.008769*t44*t570*t9 - 0.029427012384*(t120*t3085*t9 - 1.*t3135*t44*t570*t9 + t2835*(t3001 + t3007 - 1.*t120*t2974*t566 - 1.*t2849*t566*t725 + t2727*t2849*t9 + t120*t2928*t9) + t2727*(t2882 + t2849*t2901*t566 - 1.*t2812*t44*t570 - 1.*t2974*t44*t566*t570 - 1.*t2835*t2849*t9 + t2928*t44*t570*t9)) + 0.158015*t284*(t3524*t477*t9 - 1.*t3591*t44*t570*t9 + t2835*(t3554 + t3559 + t3471*t477*t566 + t3362*t566*t883 - 1.*t1031*t3362*t9 - 1.*t3435*t477*t9) + t1031*(t3357 + t3398 - 1.*t2901*t3362*t566 + t3471*t44*t566*t570 + t2835*t3362*t9 - 1.*t3435*t44*t570*t9)) + 0.158015*t426*(t3726*t399*t9 - 1.*t3815*t44*t570*t9 + t1234*(t3626 + t3644 + t2901*t3362*t566 - 1.*t3471*t44*t566*t570 - 1.*t2835*t3362*t9 + t3435*t44*t570*t9) + t2835*(t3733 + t3745 - 1.*t3471*t399*t566 + t1234*t3362*t9 + t3435*t399*t9 - 1.*t3362*t566*t933)) + 0.0031174510920000003*(t105*t3227*t9 - 1.*t3269*t44*t570*t9 + (t3167 - 1.*t2849*t2901*t566 + t2812*t44*t570 + t2974*t44*t566*t570 + t2835*t2849*t9 - 1.*t2928*t44*t570*t9)*t996 + t2835*(t3236 + t3240 + t105*t2974*t566 + t2849*t566*t817 - 1.*t105*t2928*t9 - 1.*t2849*t9*t996)))*var2[5] - 0.5*(0.008769*t3870 + 6.e-6*t587 + 1.e-6*t642 - 0.000029*t674 - 0.029427012384*(t3135*t3870 + t2727*(-1.*t2928*t3870 - 1.*t2835*t3933 - 1.*t2901*t3942 + t3956 + t3965 - 1.*t2974*t3999) + t3085*t587 + t2835*(t1540*t2974 + t3889 + t3901 + t2727*t3933 + t2928*t587 + t3942*t725)) + 0.158015*t284*(t3591*t3870 + t1031*(t3435*t3870 + t3471*t3999 + t4115 + t2835*t4130 + t4140 + t2901*t4158) + t3524*t642 + t2835*(-1.*t1623*t3471 - 1.*t1031*t4130 + t4173 + t4175 - 1.*t3435*t642 - 1.*t4158*t883)) + 0.158015*t426*(t3815*t3870 + t1234*(-1.*t3435*t3870 - 1.*t3471*t3999 - 1.*t2835*t4130 - 1.*t2901*t4158 + t4211 + t4213) + t3726*t674 + t2835*(t1649*t3471 + t1234*t4130 + t4231 + t4233 + t3435*t674 + t4158*t933)) + 0.0031174510920000003*(t3269*t3870 + t3227*t631 + (t2928*t3870 + t2835*t3933 + t2901*t3942 + t2974*t3999 + t4025 + t4032)*t996 + t2835*(-1.*t1587*t2974 + t4040 + t4042 - 1.*t2928*t631 - 1.*t3942*t817 - 1.*t3933*t996)))*var2[12] - 0.5*(t4592 + t4598 + 0.158015*t284*(t5048 + t1031*(t2835*t4941 + t2901*t4962 + t5054) + t2835*(-1.*t1031*t4941 + t5086 + t5087 + t5099 + t5100 - 1.*t4962*t883)) + 0.158015*t426*(t4909 + t1234*(t4930 - 1.*t2835*t4941 - 1.*t2901*t4962) + t2835*(t1234*t4941 + t4967 + t4969 + t4972 + t4977 + t4962*t933)) + 6.e-6*t996 - 0.029427012384*(t2727*(t4711 - 1.*t2835*t4753 - 1.*t2901*t4764) + t3085*t996 + t2835*(t2727*t4753 + t4783 + t4788 + t4764*t725 + t2974*t817 + t2928*t996)) + 0.0031174510920000003*(t3227*t969 + (t2835*t4753 + t2901*t4764 + t4837)*t996 + t2835*(-1.*t1862*t2974 + t4854 + t4860 - 1.*t4764*t817 - 1.*t2928*t969 - 1.*t4753*t996)))*var2[13] - 0.5*(0.158015*t1229*(t1031*t3524 + t2835*t3591) + 0.158015*t1208*(t1234*t3726 + t2835*t3815) + t4592 + t4598 + 0.158015*t284*(t5048 + t1031*(t2835*t5255 + t2901*t5262 + t5308) + t2835*(t5086 + t5099 + t5100 - 1.*t1031*t5255 + t5328 - 1.*t5262*t883)) + 0.158015*t426*(t4909 + t1234*(t5218 - 1.*t2835*t5255 - 1.*t2901*t5262) + t2835*(t4969 + t4972 + t4977 + t1234*t5255 + t5275 + t5262*t933)))*var2[14]);
  p_output1[4]=var2[13]*(-0.5*(6.e-6*t716 + 1.e-6*t877 - 0.008769*t570*t89 + 0.0031174510920000003*(t5509*t785 + t44*t570*(-1.*t105*t2812 + t3236 + t3240 - 1.*t2849*t785) - 1.*t5625*t570*t89 + t1718*(t3167 - 1.*t2849*t570*t89)) - 0.029427012384*(t5393*t716 + t44*t570*(t120*t2812 + t3001 + t3007 + t2849*t716) - 1.*t5472*t570*t89 + t1682*(t2882 + t2849*t570*t89)) + 0.158015*t284*(t5653*t877 + t44*t570*(t3554 + t3559 - 1.*t3427*t477 - 1.*t3362*t877) - 1.*t570*t5716*t89 + t1768*(t3357 + t3398 - 1.*t3427*t44*t570 - 1.*t3362*t570*t89)) - 0.000029*t905 + 0.158015*t426*(-1.*t570*t5838*t89 + t1792*(t3626 + t3644 + t3427*t44*t570 + t3362*t570*t89) + t5745*t905 + t44*t570*(t3733 + t3745 + t3427*t399 + t3362*t905)))*var2[5] - 0.5*(0.000029*t334*t44*t570 - 1.e-6*t44*t456*t570 - 0.008769*t44*t58 - 6.e-6*t44*t570*t80 + 0.0031174510920000003*(-1.*t44*t5625*t58 + t44*t5509*t570*t62 + t1718*(t4025 + t4032 + t5513 + t5518 + t3892*t5411*t570 + t2812*t58*t89) + t44*t570*(t4040 + t4042 + t5533 + t5537 + t2812*t570*t62*t89 + t3892*t785*t89)) - 0.029427012384*(-1.*t44*t5472*t58 - 1.*t44*t5393*t570*t80 + t1682*(t3956 + t3965 + t5401 + t5407 - 1.*t3892*t5411*t570 - 1.*t2812*t58*t89) + t44*t570*(t3889 + t3901 + t5430 + t5440 - 1.*t3892*t716*t89 + t2812*t570*t80*t89)) + 0.158015*t284*(-1.*t44*t456*t5653*t570 - 1.*t44*t5716*t58 + t1768*(t4115 + t4140 + t5660 + t3417*t570 + t4109*t5411*t570 + t3427*t58*t89) + t44*t570*(t4173 + t4175 + t5677 + t3417*t456*t58 - 1.*t3427*t456*t570*t89 + t4109*t877*t89)) + 0.158015*t426*(-1.*t334*t44*t570*t5745 - 1.*t44*t58*t5838 + t1792*(t4211 + t4213 - 1.*t3417*t570 - 1.*t4109*t5411*t570 + t5780 - 1.*t3427*t58*t89) + t44*t570*(t4231 + t4233 - 1.*t334*t3417*t58 + t5810 + t334*t3427*t570*t89 - 1.*t4109*t89*t905)))*var2[12] - 0.5*(6.e-6*t1718 + t6002 + t6003 - 0.029427012384*(t1718*t5393 + t44*t570*(t4783 + t4788 + t6029 + t6032 + t4743*t716 + t2812*t785) + t1682*(t4711 - 1.*t4663*t570*t58 + t4743*t570*t89)) + 0.158015*t284*(t6155 + t44*t570*(t5086 + t5087 + t6156 + t6157 + t6159 - 1.*t4938*t877) + t1768*(t5054 + t4918*t570*t58 - 1.*t4938*t570*t89)) + 0.158015*t426*(t6100 + t1792*(t4930 - 1.*t4918*t570*t58 + t4938*t570*t89) + t44*t570*(t4967 + t4969 + t6107 + t6112 + t6115 + t4938*t905)) + 0.0031174510920000003*(t120*t5509 + t1718*(t4837 + t4663*t570*t58 - 1.*t4743*t570*t89) + t44*t570*(t4854 + t4860 + t5461 + t6073 - 1.*t4743*t785 - 1.*t2812*t956)))*var2[13] - 0.5*(0.158015*t1229*(t1768*t5653 + t44*t570*t5716) + 0.158015*t1208*(t1792*t5745 + t44*t570*t5838) + t6002 + t6003 + 0.158015*t284*(t6155 + t44*t570*(t5086 + t5328 + t6157 + t6159 + t6267 - 1.*t5240*t877) + t1768*(t5308 + t5185*t570*t58 - 1.*t5240*t570*t89)) + 0.158015*t426*(t6100 + t1792*(t5218 - 1.*t5185*t570*t58 + t5240*t570*t89) + t44*t570*(t4969 + t5275 + t6107 + t6115 + t6235 + t5240*t905)))*var2[14]);
  p_output1[5]=var2[13]*(-0.5*(0.008769*t570 + 0.000029*t334*t58 - 1.e-6*t456*t58 + 0.158015*t426*(t334*t570*(-1.*t4109*t570 + t5780 + t3346*t58 - 1.*t570*t6440) + t58*(-1.*t334*t3346*t570 - 1.*t334*t4109*t58 + t5810 - 1.*t334*t58*t6440) - 1.*t334*t58*t6447 + t570*t6474) + 0.158015*t284*(t456*t570*(t5660 + t4109*t570 - 1.*t3346*t58 + t570*t6440) + t58*(t5677 + t3346*t456*t570 + t4109*t456*t58 + t456*t58*t6440) - 1.*t456*t58*t6505 + t570*t6555) - 6.e-6*t58*t80 + 0.0031174510920000003*(-1.*t570*(t5513 + t5518 + t3892*t570 - 1.*t2798*t58)*t62 + t58*(t5533 + t5537 - 1.*t2798*t570*t62 - 1.*t3892*t58*t62) + t58*t62*t6311 + t570*(t5620 - 1.*t2798*t58*t62 - 1.*t2756*t80)) - 0.029427012384*(t570*(t5461 + t6416 + t6418) + t570*(t5401 + t5407 - 1.*t3892*t570 + t2798*t58)*t80 - 1.*t58*t6360*t80 + t58*(t5430 + t5440 - 1.*t2798*t570*t80 - 1.*t3892*t58*t80)))*var2[12] - 0.5*(-6.e-6*t570*t62 + t6613 + t6618 + 0.158015*t426*(t6619 + t58*(t375*t4924 + t6112 + t334*t4918*t6584 + t6621 + t6625 + t6632)) + 0.158015*t284*(t6646 + t58*(-1.*t334*t4924 + t6156 - 1.*t456*t4918*t6584 + t6676 + t6685 + t6686)) + 0.0031174510920000003*(-1.*t570*t6311*t80 + t58*(t5461 + t6073 + t6416 + t6418 + t4663*t62*t6584 - 1.*t2790*t80)) - 0.029427012384*(-1.*t570*t62*t6360 + t58*(t6029 + t6032 + t2790*t62 + t2798*t58*t62 + t2756*t80 + t4663*t6584*t80)))*var2[13] - 0.5*(0.158015*t1208*(t334*t570*t6447 + t58*t6474) + 0.158015*t1229*(t456*t570*t6505 + t58*t6555) + t6613 + t6618 + 0.158015*t426*(t6619 + t58*(t375*t5193 + t6235 + t334*t5185*t6584 + t6621 + t6625 + t6632)) + 0.158015*t284*(t6646 + t58*(-1.*t334*t5193 + t6267 - 1.*t456*t5185*t6584 + t6676 + t6685 + t6686)))*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[13]*(-0.5*(0.00019032974151987603*t62 + t6762 + t6763 + t6764 + t6773 - 0.0017906073870803524*t80)*var2[13] - 0.5*(0.158015*t1229*(0. - 0.078693*t334) + 0.158015*t1208*(0. + 0.125443*t375 + 0.04675*t456) + t6762 + t6763 + t6764 + t6773)*var2[14]);
  p_output1[13]=-0.5*(0.31603*t1229*t284 + 0.31603*t1208*t426)*var2[13]*var2[14];
  p_output1[14]=-0.5*(-0.019320336034999996*t1208 - 0.0009932822899999978*t1229)*var2[13]*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec14_go1_description.hh"

namespace SymFunction
{

void Ce1_vec14_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
