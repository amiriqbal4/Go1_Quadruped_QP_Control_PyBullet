/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:30:02 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t88;
  double t110;
  double t168;
  double t138;
  double t177;
  double t54;
  double t235;
  double t242;
  double t244;
  double t258;
  double t518;
  double t566;
  double t547;
  double t551;
  double t641;
  double t645;
  double t649;
  double t662;
  double t668;
  double t679;
  double t597;
  double t599;
  double t614;
  double t622;
  double t562;
  double t565;
  double t575;
  double t580;
  double t826;
  double t827;
  double t840;
  double t140;
  double t183;
  double t204;
  double t246;
  double t265;
  double t269;
  double t278;
  double t318;
  double t324;
  double t381;
  double t383;
  double t385;
  double t388;
  double t402;
  double t406;
  double t433;
  double t450;
  double t473;
  double t585;
  double t587;
  double t630;
  double t634;
  double t657;
  double t683;
  double t686;
  double t700;
  double t708;
  double t725;
  double t728;
  double t729;
  double t736;
  double t770;
  double t786;
  double t801;
  double t810;
  double t823;
  double t854;
  double t856;
  double t871;
  double t906;
  double t908;
  double t912;
  double t914;
  double t923;
  double t1094;
  double t1095;
  double t1097;
  double t1105;
  double t1114;
  double t1124;
  double t1155;
  double t1162;
  double t1164;
  double t1169;
  double t1192;
  double t1194;
  double t1334;
  double t1348;
  double t1375;
  double t1432;
  double t1435;
  double t1454;
  double t1413;
  double t1455;
  double t1458;
  double t1472;
  double t1499;
  double t1501;
  double t1504;
  double t1505;
  double t1512;
  double t1520;
  double t1521;
  double t1527;
  double t1530;
  double t1531;
  double t1534;
  double t1539;
  double t1555;
  double t1564;
  double t1632;
  double t1635;
  double t1637;
  double t1626;
  double t1627;
  double t1631;
  double t1594;
  double t1602;
  double t1614;
  double t1463;
  double t1578;
  double t1579;
  double t1406;
  double t1408;
  double t1410;
  double t1683;
  double t1688;
  double t1693;
  double t1644;
  double t1646;
  double t1667;
  double t1778;
  double t1779;
  double t1787;
  double t1991;
  double t2022;
  double t2028;
  double t2031;
  double t1988;
  double t2036;
  double t2047;
  double t2058;
  double t2073;
  double t2081;
  double t2082;
  double t2088;
  double t2093;
  double t2095;
  double t2096;
  double t2114;
  double t2115;
  double t2116;
  double t2167;
  double t2169;
  double t2135;
  double t2137;
  double t2161;
  double t2182;
  double t2178;
  double t1950;
  double t1958;
  double t1976;
  double t2056;
  double t2119;
  double t2120;
  double t2206;
  double t2211;
  double t2215;
  double t2336;
  double t2340;
  double t2375;
  double t2533;
  double t2547;
  double t2557;
  double t2501;
  double t2511;
  double t2518;
  double t2629;
  double t2639;
  double t2642;
  double t2581;
  double t2598;
  double t2614;
  double t1694;
  double t2984;
  double t2990;
  double t3000;
  double t1745;
  double t1853;
  double t1898;
  double t2220;
  double t3250;
  double t3258;
  double t3260;
  double t3235;
  double t2290;
  double t2398;
  double t2435;
  double t3022;
  double t3048;
  double t3056;
  double t1695;
  double t1698;
  double t1711;
  double t1754;
  double t1760;
  double t1761;
  double t3138;
  double t1854;
  double t1856;
  double t1865;
  double t3178;
  double t3186;
  double t1903;
  double t1910;
  double t1911;
  double t3248;
  double t3302;
  double t2229;
  double t2234;
  double t2235;
  double t3313;
  double t3322;
  double t2292;
  double t2301;
  double t2303;
  double t3396;
  double t3406;
  double t2402;
  double t2403;
  double t2406;
  double t3431;
  double t3439;
  double t2446;
  double t2464;
  double t2468;
  double t3116;
  double t3865;
  double t3871;
  double t3878;
  double t3887;
  double t3889;
  double t3162;
  double t2965;
  double t3066;
  double t4071;
  double t4087;
  double t4092;
  double t4099;
  double t4132;
  double t4137;
  double t4436;
  double t4440;
  double t4445;
  double t4457;
  double t4459;
  double t4461;
  double t4495;
  double t4496;
  double t4501;
  double t4514;
  double t4520;
  double t4531;
  double t2966;
  double t2977;
  double t3989;
  double t4000;
  double t3974;
  double t3977;
  double t3075;
  double t3079;
  double t3122;
  double t3125;
  double t4702;
  double t3881;
  double t3891;
  double t4706;
  double t3904;
  double t3913;
  double t3167;
  double t3170;
  double t3229;
  double t3231;
  double t3232;
  double t4274;
  double t4332;
  double t3332;
  double t3333;
  double t3342;
  double t3368;
  double t3369;
  double t3375;
  double t4138;
  double t4163;
  double t3416;
  double t3418;
  double t3423;
  double t4362;
  double t4368;
  double t4378;
  double t4411;
  double t4417;
  double t4421;
  double t4746;
  double t4747;
  double t4703;
  double t5032;
  double t5033;
  double t5036;
  double t4716;
  double t5051;
  double t5058;
  double t5061;
  double t4981;
  double t4988;
  double t4990;
  double t4386;
  double t4387;
  double t4389;
  double t4782;
  double t4807;
  double t5109;
  double t5112;
  double t5113;
  double t4817;
  double t4824;
  double t4399;
  double t4401;
  double t4402;
  double t4841;
  double t4861;
  double t4889;
  double t4896;
  double t5219;
  double t5221;
  double t5227;
  double t5232;
  double t5233;
  double t5234;
  double t4914;
  double t4925;
  double t4938;
  double t4939;
  double t3956;
  double t3959;
  double t5454;
  double t5462;
  double t5467;
  double t3843;
  double t3854;
  double t4023;
  double t4032;
  double t5450;
  double t5475;
  double t5390;
  double t5397;
  double t5400;
  double t4073;
  double t4076;
  double t4082;
  double t5621;
  double t5640;
  double t5647;
  double t5675;
  double t4226;
  double t4237;
  double t4249;
  double t5608;
  double t5750;
  double t5763;
  double t5772;
  double t5800;
  double t5813;
  double t5819;
  double t5859;
  double t5867;
  double t5869;
  double t1008;
  double t1009;
  double t1010;
  double t1025;
  double t1038;
  double t1046;
  double t5933;
  double t5939;
  double t5946;
  double t5952;
  double t5957;
  double t5958;
  double t5471;
  double t5481;
  double t6079;
  double t6080;
  double t6082;
  double t6066;
  double t6074;
  double t6077;
  double t5528;
  double t5685;
  double t6188;
  double t6198;
  double t6199;
  double t6202;
  double t6204;
  double t6208;
  double t5709;
  double t6078;
  double t6092;
  double t6098;
  double t6305;
  double t6306;
  double t6309;
  double t6312;
  double t6313;
  double t6314;
  double t5775;
  double t5777;
  double t6131;
  double t6151;
  double t6152;
  double t6201;
  double t6229;
  double t6230;
  double t6400;
  double t6403;
  double t6407;
  double t6413;
  double t6415;
  double t6416;
  double t5796;
  double t5825;
  double t5832;
  double t6252;
  double t6263;
  double t6266;
  double t6504;
  double t6505;
  double t6484;
  double t6486;
  double t6491;
  double t6481;
  double t6482;
  double t6498;
  double t6499;
  double t6508;
  double t6509;
  double t6521;
  double t6522;
  double t6524;
  double t5380;
  double t5385;
  double t5386;
  double t5387;
  double t5403;
  double t5415;
  double t5418;
  double t5568;
  double t5589;
  double t4197;
  double t4198;
  double t4202;
  double t4212;
  double t4342;
  double t4346;
  double t4347;
  double t4348;
  double t5598;
  double t5599;
  double t5603;
  double t5690;
  double t6712;
  double t6717;
  double t6730;
  double t5707;
  double t5711;
  double t6674;
  double t6676;
  double t6681;
  double t5713;
  double t5714;
  double t5787;
  double t5833;
  double t5909;
  double t5918;
  double t5921;
  double t5931;
  double t5951;
  double t5969;
  double t5974;
  double t5975;
  double t6011;
  double t1059;
  double t1060;
  double t1076;
  double t6015;
  double t6016;
  double t6018;
  double t6023;
  double t6039;
  double t6041;
  double t6044;
  double t6045;
  double t6054;
  double t6217;
  double t6222;
  double t6743;
  double t6226;
  double t6927;
  double t6938;
  double t6945;
  double t6912;
  double t6919;
  double t6923;
  double t6258;
  double t6767;
  double t6260;
  double t6275;
  double t6294;
  double t6295;
  double t6296;
  double t6299;
  double t6300;
  double t6398;
  double t6951;
  double t6973;
  double t6423;
  double t6424;
  double t7074;
  double t7083;
  double t7085;
  double t7103;
  double t7108;
  double t7109;
  double t6441;
  double t7007;
  double t7027;
  double t6460;
  double t6461;
  t88 = Cos(var1[16]);
  t110 = Cos(var1[5]);
  t168 = Sin(var1[16]);
  t138 = Sin(var1[15]);
  t177 = Sin(var1[5]);
  t54 = Sin(var1[3]);
  t235 = Cos(var1[3]);
  t242 = Cos(var1[15]);
  t244 = Cos(var1[4]);
  t258 = Sin(var1[4]);
  t518 = Cos(var1[17]);
  t566 = Sin(var1[17]);
  t547 = -1.*t518;
  t551 = 1. + t547;
  t641 = -1.*t518*t168;
  t645 = -1.*t88*t566;
  t649 = t641 + t645;
  t662 = t88*t518;
  t668 = -1.*t168*t566;
  t679 = t662 + t668;
  t597 = -0.1881*t551;
  t599 = -0.181814*t518;
  t614 = -0.12226899999999999*t566;
  t622 = t597 + t599 + t614;
  t562 = -0.213*t551;
  t565 = -0.335269*t518;
  t575 = -0.006286*t566;
  t580 = t562 + t565 + t575;
  t826 = t518*t168;
  t827 = t88*t566;
  t840 = t826 + t827;
  t140 = -1.*t88*t110*t138;
  t183 = t168*t177;
  t204 = t140 + t183;
  t246 = t242*t88*t244;
  t265 = t110*t168;
  t269 = t88*t138*t177;
  t278 = t265 + t269;
  t318 = -1.*t258*t278;
  t324 = t246 + t318;
  t381 = t110*t138*t168;
  t383 = t88*t177;
  t385 = t381 + t383;
  t388 = -1.*t242*t244*t168;
  t402 = t88*t110;
  t406 = -1.*t138*t168*t177;
  t433 = t402 + t406;
  t450 = -1.*t258*t433;
  t473 = t388 + t450;
  t585 = t518*t580;
  t587 = 0.1881*t566;
  t630 = t622*t566;
  t634 = 0. + t585 + t587 + t630;
  t657 = -1.*t110*t138*t649;
  t683 = t679*t177;
  t686 = t657 + t683;
  t700 = t242*t244*t649;
  t708 = t110*t679;
  t725 = t138*t649*t177;
  t728 = t708 + t725;
  t729 = -1.*t258*t728;
  t736 = t700 + t729;
  t770 = -0.1881*t518;
  t786 = -1.*t518*t622;
  t801 = t580*t566;
  t810 = 0. + t770 + t786 + t801;
  t823 = -1.*t110*t138*t679;
  t854 = t840*t177;
  t856 = t823 + t854;
  t871 = t242*t244*t679;
  t906 = t110*t840;
  t908 = t138*t679*t177;
  t912 = t906 + t908;
  t914 = -1.*t258*t912;
  t923 = t871 + t914;
  t1094 = -1.*t242*t88*t258;
  t1095 = -1.*t244*t278;
  t1097 = t1094 + t1095;
  t1105 = t242*t168*t258;
  t1114 = -1.*t244*t433;
  t1124 = t1105 + t1114;
  t1155 = -1.*t242*t649*t258;
  t1162 = -1.*t244*t728;
  t1164 = t1155 + t1162;
  t1169 = -1.*t242*t679*t258;
  t1192 = -1.*t244*t912;
  t1194 = t1169 + t1192;
  t1334 = t244*t138;
  t1348 = t242*t258*t177;
  t1375 = t1334 + t1348;
  t1432 = -0.032736*t88;
  t1435 = 0.003468*t168;
  t1454 = t1432 + t1435;
  t1413 = 0.061053*t138;
  t1455 = t242*t1454;
  t1458 = t1413 + t1455;
  t1472 = -1.*t88;
  t1499 = 1. + t1472;
  t1501 = -0.1881*t1499;
  t1504 = -0.191568*t88;
  t1505 = -0.032736*t168;
  t1512 = t1501 + t1504 + t1505;
  t1520 = t110*t1512;
  t1521 = -1.*t242;
  t1527 = 1. + t1521;
  t1530 = 0.04675*t1527;
  t1531 = 0.107803*t242;
  t1534 = -1.*t138*t1454;
  t1539 = t1530 + t1531 + t1534;
  t1555 = -1.*t1539*t177;
  t1564 = t1520 + t1555;
  t1632 = t244*t1458;
  t1635 = -1.*t258*t1564;
  t1637 = t1632 + t1635;
  t1626 = t138*t258;
  t1627 = -1.*t242*t244*t177;
  t1631 = t1626 + t1627;
  t1594 = t1458*t258;
  t1602 = t244*t1564;
  t1614 = t1594 + t1602;
  t1463 = -1.*t1458*t258;
  t1578 = -1.*t244*t1564;
  t1579 = t1463 + t1578;
  t1406 = t242*t88*t258;
  t1408 = t244*t278;
  t1410 = t1406 + t1408;
  t1683 = t110*t1539;
  t1688 = t1512*t177;
  t1693 = t1683 + t1688;
  t1644 = -1.*t138*t258;
  t1646 = t242*t244*t177;
  t1667 = t1644 + t1646;
  t1778 = -1.*t242*t168*t258;
  t1779 = t244*t433;
  t1787 = t1778 + t1779;
  t1991 = -0.1881*t168;
  t2022 = -1.*t168*t622;
  t2028 = t88*t580;
  t2031 = 0. + t1991 + t2022 + t2028;
  t1988 = 0.081307*t138;
  t2036 = t242*t2031;
  t2047 = 0. + t1988 + t2036;
  t2058 = -0.1881*t1499;
  t2073 = t88*t622;
  t2081 = t168*t580;
  t2082 = 0. + t2058 + t2073 + t2081;
  t2088 = t110*t2082;
  t2093 = 0.04675*t1527;
  t2095 = 0.128057*t242;
  t2096 = -1.*t138*t2031;
  t2114 = t2093 + t2095 + t2096;
  t2115 = -1.*t2114*t177;
  t2116 = 0. + t2088 + t2115;
  t2167 = t244*t2047;
  t2169 = -1.*t258*t2116;
  t2135 = t2047*t258;
  t2137 = t244*t2116;
  t2161 = 0. + t2135 + t2137;
  t2182 = 0. + t2167 + t2169;
  t2178 = t2167 + t2169;
  t1950 = t242*t649*t258;
  t1958 = t244*t728;
  t1976 = t1950 + t1958;
  t2056 = -1.*t2047*t258;
  t2119 = -1.*t244*t2116;
  t2120 = t2056 + t2119;
  t2206 = t110*t2114;
  t2211 = t2082*t177;
  t2215 = 0. + t2206 + t2211;
  t2336 = t242*t679*t258;
  t2340 = t244*t912;
  t2375 = t2336 + t2340;
  t2533 = t88*t110*t138;
  t2547 = -1.*t168*t177;
  t2557 = t2533 + t2547;
  t2501 = -1.*t110*t138*t168;
  t2511 = -1.*t88*t177;
  t2518 = t2501 + t2511;
  t2629 = t110*t138*t649;
  t2639 = -1.*t679*t177;
  t2642 = t2629 + t2639;
  t2581 = t110*t138*t679;
  t2598 = -1.*t840*t177;
  t2614 = t2581 + t2598;
  t1694 = -1.*t242*t110*t1693;
  t2984 = -1.*t110*t1539;
  t2990 = -1.*t1512*t177;
  t3000 = t2984 + t2990;
  t1745 = t1693*t204;
  t1853 = t242*t110*t1693;
  t1898 = -1.*t385*t1693;
  t2220 = t242*t110*t2215;
  t3250 = -1.*t110*t2114;
  t3258 = -1.*t2082*t177;
  t3260 = t3250 + t3258;
  t3235 = t2088 + t2115;
  t2290 = -1.*t2215*t686;
  t2398 = -1.*t242*t110*t2215;
  t2435 = t2215*t856;
  t3022 = t242*t177*t1693;
  t3048 = t278*t1693;
  t3056 = t1564*t204;
  t1695 = -1.*t1631*t1614;
  t1698 = -1.*t1375*t1637;
  t1711 = t1694 + t1695 + t1698;
  t1754 = t1410*t1614;
  t1760 = t324*t1637;
  t1761 = t1745 + t1754 + t1760;
  t3138 = -1.*t242*t177*t1693;
  t1854 = t1631*t1614;
  t1856 = t1375*t1637;
  t1865 = t1853 + t1854 + t1856;
  t3178 = -1.*t385*t1564;
  t3186 = -1.*t1693*t433;
  t1903 = -1.*t1614*t1787;
  t1910 = -1.*t1637*t473;
  t1911 = t1898 + t1903 + t1910;
  t3248 = t242*t110*t3235;
  t3302 = -1.*t242*t177*t2215;
  t2229 = t1631*t2161;
  t2234 = t1375*t2182;
  t2235 = t2220 + t2229 + t2234;
  t3313 = -1.*t2215*t728;
  t3322 = -1.*t3235*t686;
  t2292 = -1.*t2161*t1976;
  t2301 = -1.*t2182*t736;
  t2303 = t2290 + t2292 + t2301;
  t3396 = -1.*t242*t110*t3235;
  t3406 = t242*t177*t2215;
  t2402 = -1.*t1631*t2161;
  t2403 = -1.*t1375*t2182;
  t2406 = t2398 + t2402 + t2403;
  t3431 = t3235*t856;
  t3439 = t2215*t912;
  t2446 = t2161*t2375;
  t2464 = t2182*t923;
  t2468 = t2435 + t2446 + t2464;
  t3116 = t138*t1458;
  t3865 = -0.061053*t138;
  t3871 = -1.*t242*t1454;
  t3878 = t3865 + t3871;
  t3887 = 0.061053*t242;
  t3889 = t3887 + t1534;
  t3162 = t242*t1458*t168;
  t2965 = -1.*t138*t1458;
  t3066 = t242*t88*t1458;
  t4071 = t1988 + t2036;
  t4087 = -0.081307*t138;
  t4092 = -1.*t242*t2031;
  t4099 = t4087 + t4092;
  t4132 = 0.081307*t242;
  t4137 = t4132 + t2096;
  t4436 = -1.*t88*t244*t138;
  t4440 = -1.*t242*t88*t258*t177;
  t4445 = t4436 + t4440;
  t4457 = t244*t138*t168;
  t4459 = t242*t168*t258*t177;
  t4461 = t4457 + t4459;
  t4495 = -1.*t244*t138*t649;
  t4496 = -1.*t242*t649*t258*t177;
  t4501 = t4495 + t4496;
  t4514 = -1.*t244*t138*t679;
  t4520 = -1.*t242*t679*t258*t177;
  t4531 = t4514 + t4520;
  t2966 = t242*t177*t1564;
  t2977 = t2965 + t2966 + t1694;
  t3989 = -1.*t242*t1458;
  t4000 = -1.*t138*t3889;
  t3974 = -1.*t88*t138*t1458;
  t3977 = t242*t88*t3889;
  t3075 = t278*t1564;
  t3079 = t3066 + t3075 + t1745;
  t3122 = -1.*t242*t177*t1564;
  t3125 = t3116 + t3122 + t1853;
  t4702 = Power(t110,2);
  t3881 = t242*t1458;
  t3891 = t138*t3889;
  t4706 = Power(t177,2);
  t3904 = -1.*t138*t1458*t168;
  t3913 = t242*t3889*t168;
  t3167 = -1.*t1564*t433;
  t3170 = t3162 + t1898 + t3167;
  t3229 = t138*t2047;
  t3231 = -1.*t242*t177*t2116;
  t3232 = t3229 + t3231 + t2220;
  t4274 = t138*t4137;
  t4332 = -1.*t242*t4137*t649;
  t3332 = -1.*t242*t2047*t649;
  t3333 = -1.*t2116*t728;
  t3342 = t3332 + t3333 + t2290;
  t3368 = -1.*t138*t2047;
  t3369 = t242*t177*t2116;
  t3375 = t3368 + t3369 + t2398;
  t4138 = -1.*t138*t4137;
  t4163 = t242*t4137*t679;
  t3416 = t242*t2047*t679;
  t3418 = t2116*t912;
  t3423 = t3416 + t2435 + t3418;
  t4362 = -1.*t88*t138*t258;
  t4368 = t242*t88*t244*t177;
  t4378 = t4362 + t4368;
  t4411 = -1.*t138*t679*t258;
  t4417 = t242*t244*t679*t177;
  t4421 = t4411 + t4417;
  t4746 = -1.*t242*t88*t110*t1693;
  t4747 = t110*t3878*t204;
  t4703 = -1.*t242*t4702*t3878;
  t5032 = t3889*t258;
  t5033 = -1.*t244*t3878*t177;
  t5036 = t5032 + t5033;
  t4716 = t110*t138*t1693;
  t5051 = t244*t3889;
  t5058 = t3878*t258*t177;
  t5061 = t5051 + t5058;
  t4981 = t242*t258;
  t4988 = t244*t138*t177;
  t4990 = t4981 + t4988;
  t4386 = t138*t168*t258;
  t4387 = -1.*t242*t244*t168*t177;
  t4389 = t4386 + t4387;
  t4782 = t242*t4702*t3878;
  t4807 = -1.*t110*t138*t1693;
  t5109 = t242*t244;
  t5112 = -1.*t138*t258*t177;
  t5113 = t5109 + t5112;
  t4817 = -1.*t110*t3878*t385;
  t4824 = -1.*t242*t110*t168*t1693;
  t4399 = -1.*t138*t649*t258;
  t4401 = t242*t244*t649*t177;
  t4402 = t4399 + t4401;
  t4841 = t242*t4702*t4099;
  t4861 = -1.*t110*t138*t2215;
  t4889 = t242*t110*t649*t2215;
  t4896 = -1.*t110*t4099*t686;
  t5219 = t4137*t258;
  t5221 = -1.*t244*t4099*t177;
  t5227 = t5219 + t5221;
  t5232 = t244*t4137;
  t5233 = t4099*t258*t177;
  t5234 = t5232 + t5233;
  t4914 = -1.*t242*t4702*t4099;
  t4925 = t110*t138*t2215;
  t4938 = -1.*t242*t110*t679*t2215;
  t4939 = t110*t4099*t856;
  t3956 = -1.*t242*t1539;
  t3959 = t2965 + t3956;
  t5454 = 0.003468*t88;
  t5462 = 0.032736*t168;
  t5467 = t5454 + t5462;
  t3843 = t242*t1539;
  t3854 = t3116 + t3843;
  t4023 = -1.*t88*t138*t1539;
  t4032 = t1512*t168;
  t5450 = Power(t242,2);
  t5475 = Power(t138,2);
  t5390 = -1.*t88*t518;
  t5397 = t168*t566;
  t5400 = t5390 + t5397;
  t4073 = -1.*t138*t4071;
  t4076 = -1.*t242*t2114;
  t4082 = t4073 + t4076;
  t5621 = -0.1881*t88;
  t5640 = -1.*t88*t622;
  t5647 = -1.*t168*t580;
  t5675 = t5621 + t5640 + t5647;
  t4226 = t138*t4071;
  t4237 = t242*t2114;
  t4249 = t4226 + t4237;
  t5608 = t1991 + t2022 + t2028;
  t5750 = -1.*t110*t168;
  t5763 = -1.*t88*t138*t177;
  t5772 = t5750 + t5763;
  t5800 = t110*t649;
  t5813 = t138*t5400*t177;
  t5819 = t5800 + t5813;
  t5859 = -1.*t242*t88*t244;
  t5867 = -1.*t258*t5772;
  t5869 = t5859 + t5867;
  t1008 = t235*t385;
  t1009 = -1.*t54*t473;
  t1010 = t1008 + t1009;
  t1025 = t235*t686;
  t1038 = -1.*t54*t736;
  t1046 = t1025 + t1038;
  t5933 = -1.*t110*t138*t5400;
  t5939 = t649*t177;
  t5946 = t5933 + t5939;
  t5952 = t242*t244*t5400;
  t5957 = -1.*t258*t5819;
  t5958 = t5952 + t5957;
  t5471 = t5450*t88*t5467;
  t5481 = -1.*t242*t1458*t168;
  t6079 = t110*t1454;
  t6080 = t138*t5467*t177;
  t6082 = t6079 + t6080;
  t6066 = -1.*t110*t138*t5467;
  t6074 = t1454*t177;
  t6077 = t6066 + t6074;
  t5528 = t5450*t5467*t168;
  t5685 = t5450*t5675*t679;
  t6188 = -1.*t110*t138*t5675;
  t6198 = t5608*t177;
  t6199 = t6188 + t6198;
  t6202 = t110*t5608;
  t6204 = t138*t5675*t177;
  t6208 = t6202 + t6204;
  t5709 = -1.*t5450*t5675*t649;
  t6078 = -1.*t242*t110*t6077;
  t6092 = t385*t1693;
  t6098 = t6077*t204;
  t6305 = t242*t5467*t258;
  t6306 = t244*t6082;
  t6309 = t6305 + t6306;
  t6312 = t242*t244*t5467;
  t6313 = -1.*t258*t6082;
  t6314 = t6312 + t6313;
  t5775 = t244*t5772;
  t5777 = t1094 + t5775;
  t6131 = t242*t110*t6077;
  t6151 = -1.*t385*t6077;
  t6152 = -1.*t1693*t2557;
  t6201 = -1.*t242*t110*t6199;
  t6229 = t6199*t856;
  t6230 = t2215*t686;
  t6400 = t242*t5675*t258;
  t6403 = t244*t6208;
  t6407 = t6400 + t6403;
  t6413 = t242*t244*t5675;
  t6415 = -1.*t258*t6208;
  t6416 = t6413 + t6415;
  t5796 = t242*t5400*t258;
  t5825 = t244*t5819;
  t5832 = t5796 + t5825;
  t6252 = t242*t110*t6199;
  t6263 = -1.*t2215*t5946;
  t6266 = -1.*t6199*t686;
  t6504 = -0.12226899999999999*t518;
  t6505 = t6504 + t575;
  t6484 = -0.006286*t518;
  t6486 = 0.12226899999999999*t566;
  t6491 = t6484 + t6486;
  t6481 = 0.1881*t518;
  t6482 = t518*t622;
  t6498 = t518*t6491;
  t6499 = -1.*t580*t566;
  t6508 = t6505*t566;
  t6509 = t6481 + t6482 + t6498 + t6499 + t6508;
  t6521 = -1.*t518*t6505;
  t6522 = t6491*t566;
  t6524 = t585 + t6521 + t587 + t630 + t6522;
  t5380 = 1.e-6*t840;
  t5385 = 0.000029*t679;
  t5386 = -0.012847725605*t649*t810;
  t5387 = -0.128057*t679;
  t5403 = -0.04675*t5400;
  t5415 = t5387 + t5403;
  t5418 = -0.158015*t634*t5415;
  t5568 = 0.000029*t242*t649;
  t5589 = -1.e-6*t242*t5400;
  t4197 = t2082*t840;
  t4198 = t242*t4071*t679;
  t4202 = -1.*t138*t2114*t679;
  t4212 = t4197 + t4198 + t4202;
  t4342 = -1.*t242*t4071*t649;
  t4346 = t138*t2114*t649;
  t4347 = -1.*t2082*t679;
  t4348 = t4342 + t4346 + t4347;
  t5598 = t242*t4082*t649;
  t5599 = t242*t4071*t649;
  t5603 = -1.*t138*t2114*t649;
  t5690 = t2082*t679;
  t6712 = -1.*t168*t6505;
  t6717 = t88*t6491;
  t6730 = t6712 + t6717;
  t5707 = t242*t4249*t5400;
  t5711 = -1.*t2082*t649;
  t6674 = t88*t6505;
  t6676 = t168*t6491;
  t6681 = t6674 + t6676;
  t5713 = -1.*t242*t4071*t5400;
  t5714 = t138*t2114*t5400;
  t5787 = -0.158015*t810*t1976;
  t5833 = -0.158015*t634*t5832;
  t5909 = t54*t686;
  t5918 = t235*t736;
  t5921 = t5909 + t5918;
  t5931 = -0.158015*t810*t5921;
  t5951 = t54*t5946;
  t5969 = t235*t5958;
  t5974 = t5951 + t5969;
  t5975 = -0.158015*t634*t5974;
  t6011 = -0.158015*t810*t1046;
  t1059 = t235*t856;
  t1060 = -1.*t54*t923;
  t1076 = t1059 + t1060;
  t6015 = t235*t5946;
  t6016 = -1.*t54*t5958;
  t6018 = t6015 + t6016;
  t6023 = -0.158015*t634*t6018;
  t6039 = t110*t138*t5400;
  t6041 = -1.*t649*t177;
  t6044 = t6039 + t6041;
  t6045 = 1.e-6*t6044;
  t6054 = 0.000029*t686;
  t6217 = t686*t3375;
  t6222 = t242*t2047*t649;
  t6743 = t5450*t6730*t679;
  t6226 = t2116*t728;
  t6927 = -1.*t110*t138*t6730;
  t6938 = t6681*t177;
  t6945 = t6927 + t6938;
  t6912 = t110*t6681;
  t6919 = t138*t6730*t177;
  t6923 = t6912 + t6919;
  t6258 = t5946*t3232;
  t6767 = -1.*t5450*t6730*t649;
  t6260 = -1.*t242*t2047*t5400;
  t6275 = -1.*t2116*t5819;
  t6294 = 0.000029*t1976;
  t6295 = -1.*t242*t5400*t258;
  t6296 = -1.*t244*t5819;
  t6299 = t6295 + t6296;
  t6300 = 1.e-6*t6299;
  t6398 = t1976*t2406;
  t6951 = -1.*t242*t110*t6945;
  t6973 = t6945*t856;
  t6423 = t2161*t1976;
  t6424 = t2182*t736;
  t7074 = t242*t6730*t258;
  t7083 = t244*t6923;
  t7085 = t7074 + t7083;
  t7103 = t242*t244*t6730;
  t7108 = -1.*t258*t6923;
  t7109 = t7103 + t7108;
  t6441 = t5832*t2235;
  t7007 = t242*t110*t6945;
  t7027 = -1.*t6945*t686;
  t6460 = -1.*t2161*t5832;
  t6461 = -1.*t2182*t5958;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0031174510920000003*(-1.*t235*t324 - 1.*t204*t54) + 0.029427012384*(-1.*t235*t473 - 1.*t385*t54) - 0.158015*t634*(-1.*t54*t686 - 1.*t235*t736) - 0.158015*t810*(-1.*t54*t856 - 1.*t235*t923))*var2[1] - 0.5*(0.029427012384*t1010 - 0.0031174510920000003*(t204*t235 - 1.*t324*t54) - 0.158015*t1046*t634 - 0.158015*t1076*t810)*var2[2])*var2[16];
  p_output1[4]=(-0.5*(-0.0031174510920000003*t324 + 0.029427012384*t473 - 0.158015*t634*t736 - 0.158015*t810*t923)*var2[0] - 0.5*(0.0031174510920000003*t1097*t54 - 0.029427012384*t1124*t54 + 0.158015*t1164*t54*t634 + 0.158015*t1194*t54*t810)*var2[1] - 0.5*(-0.0031174510920000003*t1097*t235 + 0.029427012384*t1124*t235 - 0.158015*t1164*t235*t634 - 0.158015*t1194*t235*t810)*var2[2] - 0.5*(-0.008769*t1375 + 6.e-6*t324 + 0.029427012384*(t1410*(-1.*t1375*t1579 - 1.*t1375*t1614 - 1.*t1631*t1637 - 1.*t1637*t1667) + t1375*t1761 + t1711*t324 + t1631*(t1097*t1637 + t1410*t1637 + t1579*t324 + t1614*t324)) - 0.0031174510920000003*((t1375*t1579 + t1375*t1614 + t1631*t1637 + t1637*t1667)*t1787 + t1375*t1911 + t1865*t473 + t1631*(-1.*t1124*t1637 - 1.*t1637*t1787 - 1.*t1579*t473 - 1.*t1614*t473)) + 1.e-6*(-1.*t242*t244*t649 + t258*t728) - 0.158015*(t1976*(t1375*t2120 + t1375*t2161 + t1631*t2178 + t1667*t2182) + t1375*t2303 + t2235*t736 + t1631*(-1.*t1976*t2178 - 1.*t1164*t2182 - 1.*t2120*t736 - 1.*t2161*t736))*t810 + 0.000029*t923 - 0.158015*t634*((-1.*t1375*t2120 - 1.*t1375*t2161 - 1.*t1631*t2178 - 1.*t1667*t2182)*t2375 + t1375*t2468 + t2406*t923 + t1631*(t1194*t2182 + t2178*t2375 + t2120*t923 + t2161*t923)))*var2[3])*var2[16];
  p_output1[5]=(-0.5*(0.029427012384*t244*t2518 - 0.0031174510920000003*t244*t2557 - 0.158015*t244*t2642*t634 - 0.158015*t244*t2614*t810)*var2[0] - 0.5*(0.029427012384*(t235*t433 + t2518*t258*t54) - 0.0031174510920000003*(t235*t278 + t2557*t258*t54) - 0.158015*t634*(t258*t2642*t54 + t235*t728) - 0.158015*t810*(t258*t2614*t54 + t235*t912))*var2[1] - 0.5*(-0.0031174510920000003*(-1.*t235*t2557*t258 + t278*t54) + 0.029427012384*(-1.*t235*t2518*t258 + t433*t54) - 0.158015*t634*(-1.*t235*t258*t2642 + t54*t728) - 0.158015*t810*(-1.*t235*t258*t2614 + t54*t912))*var2[2] - 0.5*(0.008769*t110*t242*t244 + 6.e-6*t244*t2557 + 0.000029*t244*t2614 - 1.e-6*t244*t2642 + 0.029427012384*(-1.*t110*t1761*t242*t244 + t1711*t244*t2557 + t1410*(-1.*t110*t1564*t242 + t110*t1614*t242*t244 - 1.*t110*t1637*t242*t258 - 1.*t1631*t244*t3000 + t1375*t258*t3000 + t3022) + t1631*(t1614*t244*t2557 - 1.*t1637*t2557*t258 + t1410*t244*t3000 + t3048 + t3056 - 1.*t258*t3000*t324)) - 0.0031174510920000003*(-1.*t110*t1911*t242*t244 + t1865*t244*t2518 + t1787*(t110*t1564*t242 - 1.*t110*t1614*t242*t244 + t110*t1637*t242*t258 + t1631*t244*t3000 - 1.*t1375*t258*t3000 + t3138) + t1631*(-1.*t1614*t244*t2518 + t1637*t2518*t258 - 1.*t1787*t244*t3000 + t3178 + t3186 + t258*t3000*t473)) - 0.158015*(-1.*t110*t2303*t242*t244 + t2235*t244*t2642 + t1976*(-1.*t110*t2161*t242*t244 + t110*t2182*t242*t258 + t3248 + t1631*t244*t3260 - 1.*t1375*t258*t3260 + t3302) + t1631*(-1.*t2161*t244*t2642 + t2182*t258*t2642 - 1.*t1976*t244*t3260 + t3313 + t3322 + t258*t3260*t736))*t810 - 0.158015*t634*(-1.*t110*t242*t244*t2468 + t2406*t244*t2614 + t2375*(t110*t2161*t242*t244 - 1.*t110*t2182*t242*t258 - 1.*t1631*t244*t3260 + t1375*t258*t3260 + t3396 + t3406) + t1631*(t2161*t244*t2614 - 1.*t2182*t258*t2614 + t2375*t244*t3260 + t3431 + t3439 - 1.*t258*t3260*t923)))*var2[3] - 0.5*(0.008769*t177*t242 + 6.e-6*t278 + 0.029427012384*(t278*t2977 + t204*(t177*t242*t3000 + t3022) + t110*t242*(t1564*t2557 + t278*t3000 + t3048 + t3056) - 1.*t177*t242*t3079) - 0.0031174510920000003*(-1.*t177*t242*t3170 + (-1.*t177*t242*t3000 + t3138)*t385 + t3125*t433 + t110*t242*(-1.*t1564*t2518 + t3178 + t3186 - 1.*t3000*t433)) + 1.e-6*(-1.*t138*t177*t649 - 1.*t110*t679) - 0.158015*(-1.*t177*t242*t3342 + (-1.*t110*t2116*t242 + t3248 - 1.*t177*t242*t3260 + t3302)*t686 + t3232*t728 + t110*t242*(-1.*t2116*t2642 + t3313 + t3322 - 1.*t3260*t728))*t810 + 0.000029*t912 - 0.158015*t634*(-1.*t177*t242*t3423 + (t110*t2116*t242 + t177*t242*t3260 + t3396 + t3406)*t856 + t3375*t912 + t110*t242*(t2116*t2614 + t3431 + t3439 + t3260*t912)))*var2[4])*var2[16];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(-0.0031174510920000003*t4378 + 0.029427012384*t4389 - 0.158015*t4402*t634 - 0.158015*t4421*t810)*var2[0] - 0.5*(0.029427012384*(t110*t168*t235*t242 - 1.*t4461*t54) - 0.158015*t634*(-1.*t4501*t54 - 1.*t110*t235*t242*t649) - 0.158015*(-1.*t4531*t54 - 1.*t110*t235*t242*t679)*t810 - 0.0031174510920000003*(-1.*t4445*t54 - 1.*t110*t235*t242*t88))*var2[1] - 0.5*(0.029427012384*(t235*t4461 + t110*t168*t242*t54) - 0.158015*t634*(t235*t4501 - 1.*t110*t242*t54*t649) - 0.158015*(t235*t4531 - 1.*t110*t242*t54*t679)*t810 - 0.0031174510920000003*(t235*t4445 - 1.*t110*t242*t54*t88))*var2[2] - 0.5*(6.e-6*t4378 + 0.000029*t4421 - 0.008769*t4990 + 0.029427012384*(t1711*t4378 + t1761*t4990 + t1631*(t1614*t4378 + t1637*t4445 + t4746 + t4747 + t1410*t5036 + t324*t5061) + t1410*(t4703 + t4716 - 1.*t1614*t4990 - 1.*t1631*t5036 - 1.*t1375*t5061 - 1.*t1637*t5113)) - 0.0031174510920000003*(t1865*t4389 + t1911*t4990 + t1631*(-1.*t1614*t4389 - 1.*t1637*t4461 + t4817 + t4824 - 1.*t1787*t5036 - 1.*t473*t5061) + t1787*(t4782 + t4807 + t1614*t4990 + t1631*t5036 + t1375*t5061 + t1637*t5113)) + 1.e-6*(-1.*t177*t242*t244*t649 + t138*t258*t649) - 0.158015*(t2235*t4402 + t2303*t4990 + t1976*(t4841 + t4861 + t2161*t4990 + t2182*t5113 + t1631*t5227 + t1375*t5234) + t1631*(-1.*t2161*t4402 - 1.*t2182*t4501 + t4889 + t4896 - 1.*t1976*t5227 - 1.*t5234*t736))*t810 - 0.158015*t634*(t2406*t4421 + t2468*t4990 + t2375*(t4914 + t4925 - 1.*t2161*t4990 - 1.*t2182*t5113 - 1.*t1631*t5227 - 1.*t1375*t5234) + t1631*(t2161*t4421 + t2182*t4531 + t4938 + t4939 + t2375*t5227 + t5234*t923)))*var2[3] - 0.5*(0.008769*t110*t138 - 0.0031174510920000003*(t110*t168*t242*t3125 - 1.*t110*t138*t3170 + t385*(t138*t1564*t177 + t3881 + t3891 + t242*t3878*t4706 + t4782 + t4807) + t110*t242*(t1564*t168*t177*t242 + t3904 + t3913 + t177*t3878*t433 + t4817 + t4824)) + 1.e-6*t110*t242*t649 - 0.000029*t110*t242*t679 - 0.158015*(-1.*t110*t138*t3342 - 1.*t110*t242*t3232*t649 + (t138*t177*t2116 + t2047*t242 + t4274 + t242*t4099*t4706 + t4841 + t4861)*t686 + t110*t242*(t4332 + t4889 + t4896 + t138*t2047*t649 - 1.*t177*t2116*t242*t649 + t177*t4099*t728))*t810 - 6.e-6*t110*t242*t88 + 0.029427012384*(-1.*t110*t138*t3079 + t204*(-1.*t138*t1564*t177 + t3989 + t4000 + t4703 - 1.*t242*t3878*t4706 + t4716) - 1.*t110*t242*t2977*t88 + t110*t242*(-1.*t177*t278*t3878 + t3974 + t3977 + t4746 + t4747 + t1564*t177*t242*t88)) - 0.158015*t634*(-1.*t110*t138*t3423 - 1.*t110*t242*t3375*t679 + (-1.*t138*t177*t2116 - 1.*t2047*t242 + t4138 - 1.*t242*t4099*t4706 + t4914 + t4925)*t856 + t110*t242*(t4163 + t4938 + t4939 - 1.*t138*t2047*t679 + t177*t2116*t242*t679 - 1.*t177*t4099*t912)))*var2[4] - 0.5*(-0.008769*t242 + 1.e-6*t138*t649 - 0.000029*t138*t679 - 0.158015*t634*(t242*t4212 - 1.*t138*t4082*t679 + t242*(t138*t2114 - 1.*t242*t4071 - 1.*t242*t4099 + t4138)*t679 + t138*(t4163 - 1.*t2114*t242*t679 - 1.*t138*t4071*t679 - 1.*t138*t4099*t679)) - 0.158015*(t242*t4348 - 1.*t138*t4249*t649 + t242*(-1.*t138*t2114 + t242*t4071 + t242*t4099 + t4274)*t649 + t138*(t4332 + t2114*t242*t649 + t138*t4071*t649 + t138*t4099*t649))*t810 - 6.e-6*t138*t88 - 0.0031174510920000003*(t138*t168*t3854 - 1.*t168*t242*(-1.*t138*t1539 + t242*t3878 + t3881 + t3891) + t138*(-1.*t1539*t168*t242 - 1.*t138*t168*t3878 + t3904 + t3913) + t242*(-1.*t138*t1539*t168 + t3162 - 1.*t1512*t88)) + 0.029427012384*(t242*(t3066 + t4023 + t4032) - 1.*t138*t3959*t88 + t242*(t138*t1539 - 1.*t242*t3878 + t3989 + t4000)*t88 + t138*(t3974 + t3977 - 1.*t1539*t242*t88 - 1.*t138*t3878*t88)))*var2[5])*var2[16];
  p_output1[16]=(-0.5*(-0.0031174510920000003*t1787 + 0.029427012384*t5777 + t5787 + t5833)*var2[0] - 0.5*(-0.0031174510920000003*t1010 + 0.029427012384*(t235*t2557 - 1.*t54*t5869) + t6011 + t6023)*var2[1] - 0.5*(-0.0031174510920000003*(t235*t473 + t385*t54) + 0.029427012384*(t2557*t54 + t235*t5869) + t5931 + t5975)*var2[2] - 0.5*(6.e-6*t1787 + t6294 + t6300 + 0.029427012384*(t1711*t1787 + t1410*(t6078 - 1.*t1631*t6309 - 1.*t1375*t6314) + t1631*(t1614*t1787 + t1637*t473 + t6092 + t6098 + t1410*t6309 + t324*t6314)) - 0.0031174510920000003*(t1865*t5777 + t1787*(t6131 + t1631*t6309 + t1375*t6314) + t1631*(-1.*t1614*t5777 - 1.*t1637*t5869 + t6151 + t6152 - 1.*t1787*t6309 - 1.*t473*t6314)) - 0.158015*(t1976*(t6252 + t1631*t6407 + t1375*t6416) + t6441 + t1631*(t6263 + t6266 - 1.*t1976*t6407 + t6460 + t6461 - 1.*t6416*t736))*t810 - 0.158015*t634*(t6398 + t2375*(t6201 - 1.*t1631*t6407 - 1.*t1375*t6416) + t1631*(t6229 + t6230 + t2375*t6407 + t6423 + t6424 + t6416*t923)))*var2[3] - 0.5*(6.e-6*t385 + t6045 + t6054 + 0.029427012384*(t2977*t385 + t204*(-1.*t138*t242*t5467 + t6078 + t177*t242*t6082) + t110*t242*(t1564*t433 + t5471 + t5481 + t278*t6082 + t6092 + t6098)) - 0.0031174510920000003*(t2557*t3125 + t385*(t138*t242*t5467 - 1.*t177*t242*t6082 + t6131) + t110*t242*(t3066 + t5528 - 1.*t1564*t5772 - 1.*t433*t6082 + t6151 + t6152)) - 0.158015*(t6258 + (t138*t242*t5675 - 1.*t177*t242*t6208 + t6252)*t686 + t110*t242*(t5709 + t6260 + t6263 + t6266 + t6275 - 1.*t6208*t728))*t810 - 0.158015*t634*(t6217 + (-1.*t138*t242*t5675 + t6201 + t177*t242*t6208)*t856 + t110*t242*(t5685 + t6222 + t6226 + t6229 + t6230 + t6208*t912)))*var2[4] - 0.5*(-6.e-6*t168*t242 + t5568 + t5589 - 0.158015*(t5707 + t138*(t5709 + t5711 + t5713 + t5714 - 1.*t5475*t5675*t649 - 1.*t5608*t679))*t810 - 0.158015*t634*(t5598 + t138*(t5599 + t5603 + t5685 + t5690 + t5475*t5675*t679 + t5608*t840)) - 0.0031174510920000003*(-1.*t242*t3854*t88 + t138*(t3066 + t4023 + t4032 + t168*t5467*t5475 + t5528 - 1.*t1454*t88)) + 0.029427012384*(-1.*t168*t242*t3959 + t138*(t1454*t168 + t138*t1539*t168 + t5471 + t5481 + t1512*t88 + t5467*t5475*t88)))*var2[5] - 0.5*(0.00019032974151987603*t168 + t5380 + t5385 + t5386 + t5418 - 0.0017906073870803522*t88)*var2[15])*var2[16];
  p_output1[17]=var2[16]*(-0.5*(t5787 + t5833 - 0.158015*t1976*t6509 - 0.158015*t2375*t6524)*var2[0] - 0.5*(t6011 + t6023 - 0.158015*t1046*t6509 - 0.158015*t1076*t6524)*var2[1] - 0.5*(t5931 + t5975 - 0.158015*t5921*t6509 - 0.158015*t6524*(t54*t856 + t235*t923))*var2[2] - 0.5*(t6294 + t6300 - 0.158015*(t2375*t2406 + t1631*t2468)*t6509 - 0.158015*(t1976*t2235 + t1631*t2303)*t6524 - 0.158015*(t6441 + t1976*(t7007 + t1631*t7085 + t1375*t7109) + t1631*(t6263 + t6460 + t6461 + t7027 - 1.*t1976*t7085 - 1.*t7109*t736))*t810 - 0.158015*t634*(t6398 + t2375*(t6951 - 1.*t1631*t7085 - 1.*t1375*t7109) + t1631*(t6230 + t6423 + t6424 + t6973 + t2375*t7085 + t7109*t923)))*var2[3] - 0.5*(t6045 + t6054 - 0.158015*t6524*(t110*t242*t3342 + t3232*t686) - 0.158015*(t6258 + t686*(t138*t242*t6730 - 1.*t177*t242*t6923 + t7007) + t110*t242*(t6260 + t6263 + t6275 + t6767 + t7027 - 1.*t6923*t728))*t810 - 0.158015*t6509*(t110*t242*t3423 + t3375*t856) - 0.158015*t634*(t6217 + (-1.*t138*t242*t6730 + t177*t242*t6923 + t6951)*t856 + t110*t242*(t6222 + t6226 + t6230 + t6743 + t6973 + t6923*t912)))*var2[4] - 0.5*(t5568 + t5589 - 0.158015*(t138*t4348 + t242*t4249*t649)*t6524 - 0.158015*t6509*(t138*t4212 + t242*t4082*t679) - 0.158015*(t5707 + t138*(t5711 + t5713 + t5714 - 1.*t5475*t649*t6730 + t6767 - 1.*t6681*t679))*t810 - 0.158015*t634*(t5598 + t138*(t5599 + t5603 + t5690 + t6743 + t5475*t6730*t679 + t6681*t840)))*var2[5] - 0.5*(t5380 + t5385 + t5386 + t5418 - 0.158015*t6524*(0. + 0.081307*t679) - 0.158015*t6509*(0. - 0.04675*t649 - 0.128057*t840))*var2[15] - 0.5*(-0.31603*t634*t6509 - 0.31603*t6524*t810)*var2[16] - 0.5*(0.019320336034999996*t6509 + 0.0009932822899999978*t6524)*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec17_go1_description.hh"

namespace SymFunction
{

void Ce3_vec17_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
