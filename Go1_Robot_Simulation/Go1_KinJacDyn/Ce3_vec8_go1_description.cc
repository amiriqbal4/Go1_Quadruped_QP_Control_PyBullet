/*
 * Automatically Generated from Mathematica.
 * Tue 7 Mar 2023 21:29:28 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t201;
  double t270;
  double t233;
  double t190;
  double t273;
  double t115;
  double t306;
  double t309;
  double t317;
  double t376;
  double t590;
  double t619;
  double t598;
  double t601;
  double t745;
  double t750;
  double t787;
  double t820;
  double t826;
  double t834;
  double t691;
  double t702;
  double t709;
  double t715;
  double t603;
  double t610;
  double t641;
  double t644;
  double t975;
  double t982;
  double t986;
  double t240;
  double t277;
  double t279;
  double t367;
  double t379;
  double t386;
  double t396;
  double t399;
  double t411;
  double t431;
  double t432;
  double t436;
  double t449;
  double t463;
  double t473;
  double t488;
  double t516;
  double t517;
  double t651;
  double t676;
  double t725;
  double t740;
  double t813;
  double t859;
  double t867;
  double t881;
  double t884;
  double t891;
  double t913;
  double t918;
  double t920;
  double t937;
  double t940;
  double t947;
  double t962;
  double t987;
  double t996;
  double t1015;
  double t1036;
  double t1043;
  double t1048;
  double t1054;
  double t1056;
  double t1069;
  double t1306;
  double t1308;
  double t1317;
  double t1330;
  double t1331;
  double t1334;
  double t1351;
  double t1358;
  double t1360;
  double t1383;
  double t1390;
  double t1401;
  double t1640;
  double t1672;
  double t1678;
  double t1601;
  double t1633;
  double t1636;
  double t1639;
  double t1681;
  double t1689;
  double t1690;
  double t1701;
  double t1703;
  double t1735;
  double t1736;
  double t1747;
  double t1758;
  double t1767;
  double t1770;
  double t1781;
  double t1784;
  double t1794;
  double t1801;
  double t1804;
  double t1808;
  double t1550;
  double t1553;
  double t1568;
  double t1829;
  double t1836;
  double t1851;
  double t1868;
  double t1871;
  double t1872;
  double t1935;
  double t1938;
  double t1939;
  double t1901;
  double t1907;
  double t1908;
  double t1854;
  double t1859;
  double t1861;
  double t1587;
  double t1588;
  double t1595;
  double t2091;
  double t2092;
  double t2094;
  double t2173;
  double t2184;
  double t2188;
  double t2192;
  double t2171;
  double t2205;
  double t2207;
  double t2250;
  double t2254;
  double t2257;
  double t2261;
  double t2262;
  double t2264;
  double t2265;
  double t2266;
  double t2267;
  double t2269;
  double t2274;
  double t2325;
  double t2340;
  double t2307;
  double t2308;
  double t2313;
  double t2351;
  double t2342;
  double t2360;
  double t2362;
  double t2363;
  double t2229;
  double t2295;
  double t2297;
  double t2415;
  double t2437;
  double t2445;
  double t2565;
  double t2570;
  double t2571;
  double t2678;
  double t2691;
  double t2694;
  double t2698;
  double t2699;
  double t2721;
  double t2725;
  double t2726;
  double t2729;
  double t2731;
  double t2735;
  double t2739;
  double t1942;
  double t3031;
  double t3032;
  double t3038;
  double t1950;
  double t2111;
  double t2130;
  double t2447;
  double t3257;
  double t3268;
  double t3287;
  double t3245;
  double t2514;
  double t2578;
  double t2624;
  double t1929;
  double t1932;
  double t1945;
  double t3058;
  double t1956;
  double t1960;
  double t1967;
  double t3071;
  double t3085;
  double t2106;
  double t2107;
  double t2112;
  double t3121;
  double t2131;
  double t2132;
  double t2137;
  double t3163;
  double t3179;
  double t2385;
  double t2393;
  double t2457;
  double t3253;
  double t3298;
  double t2515;
  double t2528;
  double t2531;
  double t3312;
  double t3317;
  double t2574;
  double t2577;
  double t2582;
  double t3366;
  double t3383;
  double t2626;
  double t2633;
  double t2638;
  double t3476;
  double t3490;
  double t4062;
  double t4065;
  double t4066;
  double t4089;
  double t4090;
  double t4098;
  double t4116;
  double t4120;
  double t4121;
  double t4140;
  double t4141;
  double t4147;
  double t3132;
  double t3138;
  double t4221;
  double t4227;
  double t4233;
  double t4244;
  double t4247;
  double t3016;
  double t3091;
  double t4392;
  double t4416;
  double t4421;
  double t4425;
  double t4433;
  double t4435;
  double t3012;
  double t3017;
  double t4345;
  double t4359;
  double t3093;
  double t3100;
  double t4319;
  double t4322;
  double t3131;
  double t3133;
  double t4608;
  double t4613;
  double t4236;
  double t4249;
  double t3150;
  double t3152;
  double t4277;
  double t4291;
  double t3214;
  double t3215;
  double t3217;
  double t4528;
  double t4546;
  double t3330;
  double t3334;
  double t3338;
  double t3405;
  double t3408;
  double t3415;
  double t4437;
  double t4498;
  double t3426;
  double t3432;
  double t3462;
  double t3994;
  double t3998;
  double t3999;
  double t4885;
  double t4887;
  double t4888;
  double t4606;
  double t4612;
  double t4634;
  double t4645;
  double t4935;
  double t4936;
  double t4941;
  double t4915;
  double t4919;
  double t4921;
  double t4008;
  double t4009;
  double t4015;
  double t4900;
  double t4901;
  double t4911;
  double t4670;
  double t4672;
  double t4689;
  double t4690;
  double t4036;
  double t4042;
  double t4043;
  double t4017;
  double t4025;
  double t4028;
  double t4720;
  double t4732;
  double t4761;
  double t4766;
  double t5097;
  double t5100;
  double t5101;
  double t5082;
  double t5088;
  double t5093;
  double t4788;
  double t4801;
  double t4835;
  double t4836;
  double t5318;
  double t5321;
  double t5332;
  double t4304;
  double t4314;
  double t5425;
  double t5428;
  double t5429;
  double t4214;
  double t4215;
  double t4366;
  double t4372;
  double t5424;
  double t5433;
  double t4398;
  double t4403;
  double t4404;
  double t5557;
  double t5562;
  double t5567;
  double t5572;
  double t4513;
  double t4515;
  double t4516;
  double t5548;
  double t5340;
  double t5350;
  double t5354;
  double t5379;
  double t5383;
  double t5386;
  double t5648;
  double t5650;
  double t5658;
  double t1149;
  double t1162;
  double t1182;
  double t1195;
  double t1203;
  double t1208;
  double t5706;
  double t5714;
  double t5716;
  double t5718;
  double t5719;
  double t5720;
  double t5432;
  double t5441;
  double t5789;
  double t5791;
  double t5794;
  double t5772;
  double t5773;
  double t5777;
  double t5491;
  double t5579;
  double t5925;
  double t5926;
  double t5927;
  double t5930;
  double t5932;
  double t5934;
  double t5610;
  double t5786;
  double t5816;
  double t5826;
  double t6055;
  double t6056;
  double t6065;
  double t6047;
  double t6050;
  double t6052;
  double t5355;
  double t5359;
  double t5858;
  double t5887;
  double t5898;
  double t5929;
  double t5948;
  double t5950;
  double t6182;
  double t6186;
  double t6196;
  double t6172;
  double t6176;
  double t6178;
  double t5972;
  double t5377;
  double t5390;
  double t5391;
  double t6005;
  double t6010;
  double t6378;
  double t6384;
  double t6358;
  double t6366;
  double t6367;
  double t6347;
  double t6352;
  double t6368;
  double t6372;
  double t6390;
  double t6395;
  double t6398;
  double t6399;
  double t6411;
  double t5306;
  double t5309;
  double t5313;
  double t5317;
  double t5333;
  double t5335;
  double t5336;
  double t5374;
  double t5393;
  double t5516;
  double t5520;
  double t4443;
  double t4448;
  double t4454;
  double t4458;
  double t4568;
  double t4572;
  double t4576;
  double t4577;
  double t5530;
  double t5534;
  double t5543;
  double t5586;
  double t6521;
  double t6524;
  double t6529;
  double t5607;
  double t5619;
  double t6515;
  double t6517;
  double t6518;
  double t5624;
  double t5625;
  double t5678;
  double t5681;
  double t5700;
  double t5701;
  double t5717;
  double t5721;
  double t5722;
  double t5723;
  double t5745;
  double t1219;
  double t1246;
  double t1256;
  double t5746;
  double t5747;
  double t5750;
  double t5754;
  double t5910;
  double t5912;
  double t5915;
  double t5917;
  double t5920;
  double t5924;
  double t5943;
  double t6530;
  double t5945;
  double t6713;
  double t6716;
  double t6718;
  double t6693;
  double t6694;
  double t6698;
  double t5985;
  double t6557;
  double t5987;
  double t6012;
  double t6155;
  double t6158;
  double t6160;
  double t6162;
  double t6164;
  double t6170;
  double t6719;
  double t6734;
  double t6215;
  double t6228;
  double t6900;
  double t6901;
  double t6903;
  double t6882;
  double t6884;
  double t6894;
  double t6758;
  double t6291;
  double t6788;
  double t6307;
  double t6310;
  t201 = Cos(var1[7]);
  t270 = Sin(var1[5]);
  t233 = Sin(var1[6]);
  t190 = Cos(var1[5]);
  t273 = Sin(var1[7]);
  t115 = Sin(var1[3]);
  t306 = Cos(var1[3]);
  t309 = Cos(var1[4]);
  t317 = Cos(var1[6]);
  t376 = Sin(var1[4]);
  t590 = Cos(var1[8]);
  t619 = Sin(var1[8]);
  t598 = -1.*t590;
  t601 = 1. + t598;
  t745 = -1.*t590*t273;
  t750 = -1.*t201*t619;
  t787 = t745 + t750;
  t820 = t201*t590;
  t826 = -1.*t273*t619;
  t834 = t820 + t826;
  t691 = 0.1881*t601;
  t702 = 0.194386*t590;
  t709 = -0.12226899999999999*t619;
  t715 = t691 + t702 + t709;
  t603 = -0.213*t601;
  t610 = -0.335269*t590;
  t641 = -0.006286*t619;
  t644 = t603 + t610 + t641;
  t975 = t590*t273;
  t982 = t201*t619;
  t986 = t975 + t982;
  t240 = -1.*t190*t201*t233;
  t277 = t270*t273;
  t279 = t240 + t277;
  t367 = t309*t317*t201;
  t379 = t201*t270*t233;
  t386 = t190*t273;
  t396 = t379 + t386;
  t399 = -1.*t376*t396;
  t411 = t367 + t399;
  t431 = t201*t270;
  t432 = t190*t233*t273;
  t436 = t431 + t432;
  t449 = -1.*t309*t317*t273;
  t463 = t190*t201;
  t473 = -1.*t270*t233*t273;
  t488 = t463 + t473;
  t516 = -1.*t376*t488;
  t517 = t449 + t516;
  t651 = t590*t644;
  t676 = -0.1881*t619;
  t725 = t715*t619;
  t740 = 0. + t651 + t676 + t725;
  t813 = -1.*t190*t233*t787;
  t859 = t270*t834;
  t867 = t813 + t859;
  t881 = t309*t317*t787;
  t884 = t270*t233*t787;
  t891 = t190*t834;
  t913 = t884 + t891;
  t918 = -1.*t376*t913;
  t920 = t881 + t918;
  t937 = 0.1881*t590;
  t940 = -1.*t590*t715;
  t947 = t644*t619;
  t962 = 0. + t937 + t940 + t947;
  t987 = t270*t986;
  t996 = -1.*t190*t233*t834;
  t1015 = t987 + t996;
  t1036 = t309*t317*t834;
  t1043 = t190*t986;
  t1048 = t270*t233*t834;
  t1054 = t1043 + t1048;
  t1056 = -1.*t376*t1054;
  t1069 = t1036 + t1056;
  t1306 = -1.*t317*t201*t376;
  t1308 = -1.*t309*t396;
  t1317 = t1306 + t1308;
  t1330 = t317*t376*t273;
  t1331 = -1.*t309*t488;
  t1334 = t1330 + t1331;
  t1351 = -1.*t317*t376*t787;
  t1358 = -1.*t309*t913;
  t1360 = t1351 + t1358;
  t1383 = -1.*t317*t376*t834;
  t1390 = -1.*t309*t1054;
  t1401 = t1383 + t1390;
  t1640 = -0.032736*t201;
  t1672 = 0.003468*t273;
  t1678 = t1640 + t1672;
  t1601 = -1.*t317;
  t1633 = 1. + t1601;
  t1636 = -0.04675*t1633;
  t1639 = -0.107803*t317;
  t1681 = -1.*t233*t1678;
  t1689 = t1636 + t1639 + t1681;
  t1690 = -1.*t270*t1689;
  t1701 = -1.*t201;
  t1703 = 1. + t1701;
  t1735 = 0.1881*t1703;
  t1736 = 0.184632*t201;
  t1747 = -0.032736*t273;
  t1758 = t1735 + t1736 + t1747;
  t1767 = t190*t1758;
  t1770 = t1690 + t1767;
  t1781 = -1.*t376*t1770;
  t1784 = -0.061053*t233;
  t1794 = t317*t1678;
  t1801 = t1784 + t1794;
  t1804 = t309*t1801;
  t1808 = t1781 + t1804;
  t1550 = t317*t376*t270;
  t1553 = t309*t233;
  t1568 = t1550 + t1553;
  t1829 = -1.*t309*t317*t270;
  t1836 = t376*t233;
  t1851 = t1829 + t1836;
  t1868 = t309*t1770;
  t1871 = t376*t1801;
  t1872 = t1868 + t1871;
  t1935 = t190*t1689;
  t1938 = t270*t1758;
  t1939 = t1935 + t1938;
  t1901 = t317*t201*t376;
  t1907 = t309*t396;
  t1908 = t1901 + t1907;
  t1854 = -1.*t309*t1770;
  t1859 = -1.*t376*t1801;
  t1861 = t1854 + t1859;
  t1587 = t309*t317*t270;
  t1588 = -1.*t376*t233;
  t1595 = t1587 + t1588;
  t2091 = -1.*t317*t376*t273;
  t2092 = t309*t488;
  t2094 = t2091 + t2092;
  t2173 = 0.1881*t273;
  t2184 = -1.*t273*t715;
  t2188 = t201*t644;
  t2192 = 0. + t2173 + t2184 + t2188;
  t2171 = -0.078693*t233;
  t2205 = t317*t2192;
  t2207 = 0. + t2171 + t2205;
  t2250 = -0.04675*t1633;
  t2254 = -0.125443*t317;
  t2257 = -1.*t233*t2192;
  t2261 = t2250 + t2254 + t2257;
  t2262 = -1.*t270*t2261;
  t2264 = 0.1881*t1703;
  t2265 = t201*t715;
  t2266 = t273*t644;
  t2267 = 0. + t2264 + t2265 + t2266;
  t2269 = t190*t2267;
  t2274 = 0. + t2262 + t2269;
  t2325 = t309*t2207;
  t2340 = -1.*t376*t2274;
  t2307 = t376*t2207;
  t2308 = t309*t2274;
  t2313 = 0. + t2307 + t2308;
  t2351 = 0. + t2325 + t2340;
  t2342 = t2325 + t2340;
  t2360 = t317*t376*t787;
  t2362 = t309*t913;
  t2363 = t2360 + t2362;
  t2229 = -1.*t376*t2207;
  t2295 = -1.*t309*t2274;
  t2297 = t2229 + t2295;
  t2415 = t190*t2261;
  t2437 = t270*t2267;
  t2445 = 0. + t2415 + t2437;
  t2565 = t317*t376*t834;
  t2570 = t309*t1054;
  t2571 = t2565 + t2570;
  t2678 = t190*t201*t233;
  t2691 = -1.*t270*t273;
  t2694 = t2678 + t2691;
  t2698 = -1.*t201*t270;
  t2699 = -1.*t190*t233*t273;
  t2721 = t2698 + t2699;
  t2725 = t190*t233*t787;
  t2726 = -1.*t270*t834;
  t2729 = t2725 + t2726;
  t2731 = -1.*t270*t986;
  t2735 = t190*t233*t834;
  t2739 = t2731 + t2735;
  t1942 = -1.*t190*t317*t1939;
  t3031 = -1.*t190*t1689;
  t3032 = -1.*t270*t1758;
  t3038 = t3031 + t3032;
  t1950 = t1939*t279;
  t2111 = t190*t317*t1939;
  t2130 = -1.*t1939*t436;
  t2447 = t190*t317*t2445;
  t3257 = -1.*t190*t2261;
  t3268 = -1.*t270*t2267;
  t3287 = t3257 + t3268;
  t3245 = t2262 + t2269;
  t2514 = -1.*t2445*t867;
  t2578 = -1.*t190*t317*t2445;
  t2624 = t2445*t1015;
  t1929 = -1.*t1568*t1808;
  t1932 = -1.*t1851*t1872;
  t1945 = t1929 + t1932 + t1942;
  t3058 = t317*t270*t1939;
  t1956 = t1872*t1908;
  t1960 = t1808*t411;
  t1967 = t1950 + t1956 + t1960;
  t3071 = t1939*t396;
  t3085 = t1770*t279;
  t2106 = t1568*t1808;
  t2107 = t1851*t1872;
  t2112 = t2106 + t2107 + t2111;
  t3121 = -1.*t317*t270*t1939;
  t2131 = -1.*t1872*t2094;
  t2132 = -1.*t1808*t517;
  t2137 = t2130 + t2131 + t2132;
  t3163 = -1.*t1770*t436;
  t3179 = -1.*t1939*t488;
  t2385 = t1851*t2313;
  t2393 = t1568*t2351;
  t2457 = t2385 + t2393 + t2447;
  t3253 = t190*t317*t3245;
  t3298 = -1.*t317*t270*t2445;
  t2515 = -1.*t2313*t2363;
  t2528 = -1.*t2351*t920;
  t2531 = t2514 + t2515 + t2528;
  t3312 = -1.*t2445*t913;
  t3317 = -1.*t3245*t867;
  t2574 = -1.*t1851*t2313;
  t2577 = -1.*t1568*t2351;
  t2582 = t2574 + t2577 + t2578;
  t3366 = -1.*t190*t317*t3245;
  t3383 = t317*t270*t2445;
  t2626 = t2313*t2571;
  t2633 = t2351*t1069;
  t2638 = t2624 + t2626 + t2633;
  t3476 = t3245*t1015;
  t3490 = t2445*t1054;
  t4062 = -1.*t317*t201*t376*t270;
  t4065 = -1.*t309*t201*t233;
  t4066 = t4062 + t4065;
  t4089 = t317*t376*t270*t273;
  t4090 = t309*t233*t273;
  t4098 = t4089 + t4090;
  t4116 = -1.*t317*t376*t270*t787;
  t4120 = -1.*t309*t233*t787;
  t4121 = t4116 + t4120;
  t4140 = -1.*t317*t376*t270*t834;
  t4141 = -1.*t309*t233*t834;
  t4147 = t4140 + t4141;
  t3132 = t233*t1801;
  t3138 = t317*t1801*t273;
  t4221 = 0.061053*t233;
  t4227 = -1.*t317*t1678;
  t4233 = t4221 + t4227;
  t4244 = -0.061053*t317;
  t4247 = t4244 + t1681;
  t3016 = -1.*t233*t1801;
  t3091 = t317*t201*t1801;
  t4392 = t2171 + t2205;
  t4416 = 0.078693*t233;
  t4421 = -1.*t317*t2192;
  t4425 = t4416 + t4421;
  t4433 = -0.078693*t317;
  t4435 = t4433 + t2257;
  t3012 = t317*t270*t1770;
  t3017 = t3012 + t1942 + t3016;
  t4345 = -1.*t317*t1801;
  t4359 = -1.*t233*t4247;
  t3093 = t1770*t396;
  t3100 = t3091 + t3093 + t1950;
  t4319 = -1.*t201*t233*t1801;
  t4322 = t317*t201*t4247;
  t3131 = -1.*t317*t270*t1770;
  t3133 = t3131 + t2111 + t3132;
  t4608 = Power(t190,2);
  t4613 = Power(t270,2);
  t4236 = t317*t1801;
  t4249 = t233*t4247;
  t3150 = -1.*t1770*t488;
  t3152 = t3138 + t2130 + t3150;
  t4277 = -1.*t233*t1801*t273;
  t4291 = t317*t4247*t273;
  t3214 = t233*t2207;
  t3215 = -1.*t317*t270*t2274;
  t3217 = t3214 + t3215 + t2447;
  t4528 = t233*t4435;
  t4546 = -1.*t317*t4435*t787;
  t3330 = -1.*t317*t2207*t787;
  t3334 = -1.*t2274*t913;
  t3338 = t3330 + t3334 + t2514;
  t3405 = -1.*t233*t2207;
  t3408 = t317*t270*t2274;
  t3415 = t3405 + t3408 + t2578;
  t4437 = -1.*t233*t4435;
  t4498 = t317*t4435*t834;
  t3426 = t317*t2207*t834;
  t3432 = t2274*t1054;
  t3462 = t3426 + t2624 + t3432;
  t3994 = t309*t317*t201*t270;
  t3998 = -1.*t201*t376*t233;
  t3999 = t3994 + t3998;
  t4885 = t317*t376;
  t4887 = t309*t270*t233;
  t4888 = t4885 + t4887;
  t4606 = t190*t233*t1939;
  t4612 = -1.*t4608*t317*t4233;
  t4634 = -1.*t190*t317*t201*t1939;
  t4645 = t190*t4233*t279;
  t4935 = -1.*t309*t270*t4233;
  t4936 = t376*t4247;
  t4941 = t4935 + t4936;
  t4915 = t376*t270*t4233;
  t4919 = t309*t4247;
  t4921 = t4915 + t4919;
  t4008 = -1.*t309*t317*t270*t273;
  t4009 = t376*t233*t273;
  t4015 = t4008 + t4009;
  t4900 = t309*t317;
  t4901 = -1.*t376*t270*t233;
  t4911 = t4900 + t4901;
  t4670 = -1.*t190*t233*t1939;
  t4672 = t4608*t317*t4233;
  t4689 = -1.*t190*t317*t1939*t273;
  t4690 = -1.*t190*t4233*t436;
  t4036 = t309*t317*t270*t834;
  t4042 = -1.*t376*t233*t834;
  t4043 = t4036 + t4042;
  t4017 = t309*t317*t270*t787;
  t4025 = -1.*t376*t233*t787;
  t4028 = t4017 + t4025;
  t4720 = t4608*t317*t4425;
  t4732 = -1.*t190*t233*t2445;
  t4761 = t190*t317*t2445*t787;
  t4766 = -1.*t190*t4425*t867;
  t5097 = -1.*t309*t270*t4425;
  t5100 = t376*t4435;
  t5101 = t5097 + t5100;
  t5082 = t376*t270*t4425;
  t5088 = t309*t4435;
  t5093 = t5082 + t5088;
  t4788 = -1.*t4608*t317*t4425;
  t4801 = t190*t233*t2445;
  t4835 = -1.*t190*t317*t2445*t834;
  t4836 = t190*t4425*t1015;
  t5318 = -1.*t201*t590;
  t5321 = t273*t619;
  t5332 = t5318 + t5321;
  t4304 = -1.*t317*t1689;
  t4314 = t3016 + t4304;
  t5425 = 0.003468*t201;
  t5428 = 0.032736*t273;
  t5429 = t5425 + t5428;
  t4214 = t317*t1689;
  t4215 = t3132 + t4214;
  t4366 = -1.*t201*t233*t1689;
  t4372 = t1758*t273;
  t5424 = Power(t317,2);
  t5433 = Power(t233,2);
  t4398 = -1.*t233*t4392;
  t4403 = -1.*t317*t2261;
  t4404 = t4398 + t4403;
  t5557 = 0.1881*t201;
  t5562 = -1.*t201*t715;
  t5567 = -1.*t273*t644;
  t5572 = t5557 + t5562 + t5567;
  t4513 = t233*t4392;
  t4515 = t317*t2261;
  t4516 = t4513 + t4515;
  t5548 = t2173 + t2184 + t2188;
  t5340 = -1.*t201*t270*t233;
  t5350 = -1.*t190*t273;
  t5354 = t5340 + t5350;
  t5379 = t190*t787;
  t5383 = t270*t233*t5332;
  t5386 = t5379 + t5383;
  t5648 = -1.*t309*t317*t201;
  t5650 = -1.*t376*t5354;
  t5658 = t5648 + t5650;
  t1149 = t306*t436;
  t1162 = -1.*t115*t517;
  t1182 = t1149 + t1162;
  t1195 = t306*t867;
  t1203 = -1.*t115*t920;
  t1208 = t1195 + t1203;
  t5706 = t270*t787;
  t5714 = -1.*t190*t233*t5332;
  t5716 = t5706 + t5714;
  t5718 = t309*t317*t5332;
  t5719 = -1.*t376*t5386;
  t5720 = t5718 + t5719;
  t5432 = t5424*t201*t5429;
  t5441 = -1.*t317*t1801*t273;
  t5789 = t190*t1678;
  t5791 = t270*t233*t5429;
  t5794 = t5789 + t5791;
  t5772 = t270*t1678;
  t5773 = -1.*t190*t233*t5429;
  t5777 = t5772 + t5773;
  t5491 = t5424*t5429*t273;
  t5579 = t5424*t5572*t834;
  t5925 = t270*t5548;
  t5926 = -1.*t190*t233*t5572;
  t5927 = t5925 + t5926;
  t5930 = t190*t5548;
  t5932 = t270*t233*t5572;
  t5934 = t5930 + t5932;
  t5610 = -1.*t5424*t5572*t787;
  t5786 = -1.*t190*t317*t5777;
  t5816 = t5777*t279;
  t5826 = t1939*t436;
  t6055 = t309*t5794;
  t6056 = t317*t376*t5429;
  t6065 = t6055 + t6056;
  t6047 = -1.*t376*t5794;
  t6050 = t309*t317*t5429;
  t6052 = t6047 + t6050;
  t5355 = t309*t5354;
  t5359 = t1306 + t5355;
  t5858 = t190*t317*t5777;
  t5887 = -1.*t1939*t2694;
  t5898 = -1.*t5777*t436;
  t5929 = -1.*t190*t317*t5927;
  t5948 = t2445*t867;
  t5950 = t5927*t1015;
  t6182 = t309*t5934;
  t6186 = t317*t376*t5572;
  t6196 = t6182 + t6186;
  t6172 = -1.*t376*t5934;
  t6176 = t309*t317*t5572;
  t6178 = t6172 + t6176;
  t5972 = t190*t317*t5927;
  t5377 = t317*t376*t5332;
  t5390 = t309*t5386;
  t5391 = t5377 + t5390;
  t6005 = -1.*t5927*t867;
  t6010 = -1.*t2445*t5716;
  t6378 = -0.12226899999999999*t590;
  t6384 = t6378 + t641;
  t6358 = -0.006286*t590;
  t6366 = 0.12226899999999999*t619;
  t6367 = t6358 + t6366;
  t6347 = -0.1881*t590;
  t6352 = t590*t715;
  t6368 = t590*t6367;
  t6372 = -1.*t644*t619;
  t6390 = t6384*t619;
  t6395 = t6347 + t6352 + t6368 + t6372 + t6390;
  t6398 = -1.*t590*t6384;
  t6399 = t6367*t619;
  t6411 = t651 + t6398 + t676 + t725 + t6399;
  t5306 = 1.e-6*t986;
  t5309 = 0.000029*t834;
  t5313 = 0.012434674395*t787*t962;
  t5317 = 0.125443*t834;
  t5333 = 0.04675*t5332;
  t5335 = t5317 + t5333;
  t5336 = -0.158015*t740*t5335;
  t5374 = -0.158015*t962*t2363;
  t5393 = -0.158015*t740*t5391;
  t5516 = 0.000029*t317*t787;
  t5520 = -1.e-6*t317*t5332;
  t4443 = t2267*t986;
  t4448 = t317*t4392*t834;
  t4454 = -1.*t233*t2261*t834;
  t4458 = t4443 + t4448 + t4454;
  t4568 = -1.*t317*t4392*t787;
  t4572 = t233*t2261*t787;
  t4576 = -1.*t2267*t834;
  t4577 = t4568 + t4572 + t4576;
  t5530 = t317*t4404*t787;
  t5534 = t317*t4392*t787;
  t5543 = -1.*t233*t2261*t787;
  t5586 = t2267*t834;
  t6521 = -1.*t273*t6384;
  t6524 = t201*t6367;
  t6529 = t6521 + t6524;
  t5607 = t317*t4516*t5332;
  t5619 = -1.*t2267*t787;
  t6515 = t201*t6384;
  t6517 = t273*t6367;
  t6518 = t6515 + t6517;
  t5624 = -1.*t317*t4392*t5332;
  t5625 = t233*t2261*t5332;
  t5678 = t115*t867;
  t5681 = t306*t920;
  t5700 = t5678 + t5681;
  t5701 = -0.158015*t962*t5700;
  t5717 = t115*t5716;
  t5721 = t306*t5720;
  t5722 = t5717 + t5721;
  t5723 = -0.158015*t740*t5722;
  t5745 = -0.158015*t962*t1208;
  t1219 = t306*t1015;
  t1246 = -1.*t115*t1069;
  t1256 = t1219 + t1246;
  t5746 = t306*t5716;
  t5747 = -1.*t115*t5720;
  t5750 = t5746 + t5747;
  t5754 = -0.158015*t740*t5750;
  t5910 = 0.000029*t867;
  t5912 = -1.*t270*t787;
  t5915 = t190*t233*t5332;
  t5917 = t5912 + t5915;
  t5920 = 1.e-6*t5917;
  t5924 = t3415*t867;
  t5943 = t317*t2207*t787;
  t6530 = t5424*t6529*t834;
  t5945 = t2274*t913;
  t6713 = -1.*t190*t233*t6529;
  t6716 = t270*t6518;
  t6718 = t6713 + t6716;
  t6693 = t270*t233*t6529;
  t6694 = t190*t6518;
  t6698 = t6693 + t6694;
  t5985 = t3217*t5716;
  t6557 = -1.*t5424*t6529*t787;
  t5987 = -1.*t317*t2207*t5332;
  t6012 = -1.*t2274*t5386;
  t6155 = 0.000029*t2363;
  t6158 = -1.*t317*t376*t5332;
  t6160 = -1.*t309*t5386;
  t6162 = t6158 + t6160;
  t6164 = 1.e-6*t6162;
  t6170 = t2582*t2363;
  t6719 = -1.*t190*t317*t6718;
  t6734 = t6718*t1015;
  t6215 = t2313*t2363;
  t6228 = t2351*t920;
  t6900 = t309*t6698;
  t6901 = t317*t376*t6529;
  t6903 = t6900 + t6901;
  t6882 = -1.*t376*t6698;
  t6884 = t309*t317*t6529;
  t6894 = t6882 + t6884;
  t6758 = t190*t317*t6718;
  t6291 = t2457*t5391;
  t6788 = -1.*t6718*t867;
  t6307 = -1.*t2313*t5391;
  t6310 = -1.*t2351*t5720;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0031174510920000003*(-1.*t115*t279 - 1.*t306*t411) + 0.029427012384*(-1.*t115*t436 - 1.*t306*t517) - 0.158015*t740*(-1.*t115*t867 - 1.*t306*t920) - 0.158015*(-1.*t1015*t115 - 1.*t1069*t306)*t962)*var2[1] - 0.5*(0.029427012384*t1182 - 0.0031174510920000003*(t279*t306 - 1.*t115*t411) - 0.158015*t1208*t740 - 0.158015*t1256*t962)*var2[2])*var2[7];
  p_output1[4]=(-0.5*(-0.0031174510920000003*t411 + 0.029427012384*t517 - 0.158015*t740*t920 - 0.158015*t1069*t962)*var2[0] - 0.5*(0.0031174510920000003*t115*t1317 - 0.029427012384*t115*t1334 + 0.158015*t115*t1360*t740 + 0.158015*t115*t1401*t962)*var2[1] - 0.5*(-0.0031174510920000003*t1317*t306 + 0.029427012384*t1334*t306 - 0.158015*t1360*t306*t740 - 0.158015*t1401*t306*t962)*var2[2] - 0.5*(0.000029*t1069 - 0.008769*t1568 - 6.e-6*t411 + 0.029427012384*((-1.*t1595*t1808 - 1.*t1808*t1851 - 1.*t1568*t1861 - 1.*t1568*t1872)*t1908 + t1568*t1967 + t1945*t411 + t1851*(t1317*t1808 + t1808*t1908 + t1861*t411 + t1872*t411)) - 0.0031174510920000003*((t1595*t1808 + t1808*t1851 + t1568*t1861 + t1568*t1872)*t2094 + t1568*t2137 + t2112*t517 + t1851*(-1.*t1334*t1808 - 1.*t1808*t2094 - 1.*t1861*t517 - 1.*t1872*t517)) - 0.158015*((-1.*t1568*t2297 - 1.*t1568*t2313 - 1.*t1851*t2342 - 1.*t1595*t2351)*t2571 + t1851*(t1069*t2297 + t1069*t2313 + t1401*t2351 + t2342*t2571) + t1069*t2582 + t1568*t2638)*t740 + 1.e-6*(-1.*t309*t317*t787 + t376*t913) - 0.158015*((t1568*t2297 + t1568*t2313 + t1851*t2342 + t1595*t2351)*t2363 + t1568*t2531 + t2457*t920 + t1851*(-1.*t1360*t2351 - 1.*t2342*t2363 - 1.*t2297*t920 - 1.*t2313*t920))*t962)*var2[3])*var2[7];
  p_output1[5]=(-0.5*(-0.0031174510920000003*t2694*t309 + 0.029427012384*t2721*t309 - 0.158015*t2729*t309*t740 - 0.158015*t2739*t309*t962)*var2[0] - 0.5*(-0.0031174510920000003*(t115*t2694*t376 + t306*t396) + 0.029427012384*(t115*t2721*t376 + t306*t488) - 0.158015*t740*(t115*t2729*t376 + t306*t913) - 0.158015*(t1054*t306 + t115*t2739*t376)*t962)*var2[1] - 0.5*(-0.0031174510920000003*(-1.*t2694*t306*t376 + t115*t396) + 0.029427012384*(-1.*t2721*t306*t376 + t115*t488) - 0.158015*t740*(-1.*t2729*t306*t376 + t115*t913) - 0.158015*(t1054*t115 - 1.*t2739*t306*t376)*t962)*var2[2] - 0.5*(-6.e-6*t2694*t309 - 1.e-6*t2729*t309 + 0.000029*t2739*t309 + 0.008769*t190*t309*t317 + 0.029427012384*(t1945*t2694*t309 - 1.*t190*t1967*t309*t317 + t1908*(t3058 - 1.*t1851*t3038*t309 - 1.*t1770*t190*t317 + t1872*t190*t309*t317 + t1568*t3038*t376 - 1.*t1808*t190*t317*t376) + t1851*(t3071 + t3085 + t1872*t2694*t309 + t1908*t3038*t309 - 1.*t1808*t2694*t376 - 1.*t3038*t376*t411)) - 0.0031174510920000003*(t2112*t2721*t309 - 1.*t190*t2137*t309*t317 + t2094*(t1851*t3038*t309 + t3121 + t1770*t190*t317 - 1.*t1872*t190*t309*t317 - 1.*t1568*t3038*t376 + t1808*t190*t317*t376) + t1851*(-1.*t1872*t2721*t309 - 1.*t2094*t3038*t309 + t3163 + t3179 + t1808*t2721*t376 + t3038*t376*t517)) - 0.158015*(t2582*t2739*t309 - 1.*t190*t2638*t309*t317 + t1851*(t2313*t2739*t309 + t2571*t309*t3287 + t3476 + t3490 - 1.*t2351*t2739*t376 - 1.*t1069*t3287*t376) + t2571*(t190*t2313*t309*t317 - 1.*t1851*t309*t3287 + t3366 + t3383 - 1.*t190*t2351*t317*t376 + t1568*t3287*t376))*t740 - 0.158015*(t2457*t2729*t309 - 1.*t190*t2531*t309*t317 + t2363*(-1.*t190*t2313*t309*t317 + t3253 + t1851*t309*t3287 + t3298 + t190*t2351*t317*t376 - 1.*t1568*t3287*t376) + t1851*(-1.*t2313*t2729*t309 - 1.*t2363*t309*t3287 + t3312 + t3317 + t2351*t2729*t376 + t3287*t376*t920))*t962)*var2[3] - 0.5*(0.000029*t1054 + 0.008769*t270*t317 - 6.e-6*t396 + 0.029427012384*(-1.*t270*t3100*t317 + t279*(t3058 + t270*t3038*t317) + t3017*t396 + t190*t317*(t1770*t2694 + t3071 + t3085 + t3038*t396)) - 0.0031174510920000003*(-1.*t270*t3152*t317 + (t3121 - 1.*t270*t3038*t317)*t436 + t3133*t488 + t190*t317*(-1.*t1770*t2721 + t3163 + t3179 - 1.*t3038*t488)) - 0.158015*(t1015*(t190*t2274*t317 + t270*t317*t3287 + t3366 + t3383) + t1054*t3415 - 1.*t270*t317*t3462 + t190*t317*(t2274*t2739 + t1054*t3287 + t3476 + t3490))*t740 + 1.e-6*(-1.*t233*t270*t787 - 1.*t190*t834) - 0.158015*(-1.*t270*t317*t3338 + (-1.*t190*t2274*t317 + t3253 - 1.*t270*t317*t3287 + t3298)*t867 + t3217*t913 + t190*t317*(-1.*t2274*t2729 + t3312 + t3317 - 1.*t3287*t913))*t962)*var2[4])*var2[7];
  p_output1[6]=(-0.5*(-0.0031174510920000003*t3999 + 0.029427012384*t4015 - 0.158015*t4028*t740 - 0.158015*t4043*t962)*var2[0] - 0.5*(-0.0031174510920000003*(-1.*t190*t201*t306*t317 - 1.*t115*t4066) + 0.029427012384*(t190*t273*t306*t317 - 1.*t115*t4098) - 0.158015*t740*(-1.*t115*t4121 - 1.*t190*t306*t317*t787) - 0.158015*(-1.*t115*t4147 - 1.*t190*t306*t317*t834)*t962)*var2[1] - 0.5*(-0.0031174510920000003*(-1.*t115*t190*t201*t317 + t306*t4066) + 0.029427012384*(t115*t190*t273*t317 + t306*t4098) - 0.158015*t740*(t306*t4121 - 1.*t115*t190*t317*t787) - 0.158015*(t306*t4147 - 1.*t115*t190*t317*t834)*t962)*var2[2] - 0.5*(-6.e-6*t3999 + 0.000029*t4043 - 0.008769*t4888 + 0.029427012384*(t1945*t3999 + t1967*t4888 + t1908*(t4606 + t4612 - 1.*t1872*t4888 - 1.*t1808*t4911 - 1.*t1568*t4921 - 1.*t1851*t4941) + t1851*(t1872*t3999 + t1808*t4066 + t4634 + t4645 + t411*t4921 + t1908*t4941)) - 0.0031174510920000003*(t2112*t4015 + t2137*t4888 + t2094*(t4670 + t4672 + t1872*t4888 + t1808*t4911 + t1568*t4921 + t1851*t4941) + t1851*(-1.*t1872*t4015 - 1.*t1808*t4098 + t4689 + t4690 - 1.*t2094*t4941 - 1.*t4921*t517)) - 0.158015*(t2582*t4043 + t2638*t4888 + t2571*(t4788 + t4801 - 1.*t2313*t4888 - 1.*t2351*t4911 - 1.*t1568*t5093 - 1.*t1851*t5101) + t1851*(t2313*t4043 + t2351*t4147 + t4835 + t4836 + t1069*t5093 + t2571*t5101))*t740 + 1.e-6*(-1.*t270*t309*t317*t787 + t233*t376*t787) - 0.158015*(t2457*t4028 + t2531*t4888 + t2363*(t4720 + t4732 + t2313*t4888 + t2351*t4911 + t1568*t5093 + t1851*t5101) + t1851*(-1.*t2313*t4028 - 1.*t2351*t4121 + t4761 + t4766 - 1.*t2363*t5101 - 1.*t5093*t920))*t962)*var2[3] - 0.5*(0.008769*t190*t233 + 6.e-6*t190*t201*t317 + 0.029427012384*(-1.*t190*t233*t3100 - 1.*t190*t201*t3017*t317 + t279*(-1.*t1770*t233*t270 + t4345 + t4359 + t4606 + t4612 - 1.*t317*t4233*t4613) + t190*t317*(t1770*t201*t270*t317 - 1.*t270*t396*t4233 + t4319 + t4322 + t4634 + t4645)) - 0.0031174510920000003*(-1.*t190*t233*t3152 + t190*t273*t3133*t317 + t436*(t1770*t233*t270 + t4236 + t4249 + t317*t4233*t4613 + t4670 + t4672) + t190*t317*(t1770*t270*t273*t317 + t4277 + t4291 + t4689 + t4690 + t270*t4233*t488)) + 1.e-6*t190*t317*t787 - 0.000029*t190*t317*t834 - 0.158015*t740*(-1.*t190*t233*t3462 + t1015*(-1.*t2274*t233*t270 - 1.*t2207*t317 + t4437 - 1.*t317*t4425*t4613 + t4788 + t4801) - 1.*t190*t317*t3415*t834 + t190*t317*(-1.*t1054*t270*t4425 + t4498 + t4835 + t4836 - 1.*t2207*t233*t834 + t2274*t270*t317*t834)) - 0.158015*(-1.*t190*t233*t3338 - 1.*t190*t317*t3217*t787 + (t2274*t233*t270 + t2207*t317 + t4528 + t317*t4425*t4613 + t4720 + t4732)*t867 + t190*t317*(t4546 + t4761 + t4766 + t2207*t233*t787 - 1.*t2274*t270*t317*t787 + t270*t4425*t913))*t962)*var2[4] - 0.5*(6.e-6*t201*t233 - 0.008769*t317 - 0.0031174510920000003*((-1.*t1758*t201 - 1.*t1689*t233*t273 + t3138)*t317 + t233*t273*t4215 - 1.*t273*t317*(-1.*t1689*t233 + t317*t4233 + t4236 + t4249) + t233*(-1.*t1689*t273*t317 - 1.*t233*t273*t4233 + t4277 + t4291)) + 0.029427012384*(-1.*t201*t233*t4314 + t233*(-1.*t1689*t201*t317 - 1.*t201*t233*t4233 + t4319 + t4322) + t201*t317*(t1689*t233 - 1.*t317*t4233 + t4345 + t4359) + t317*(t3091 + t4366 + t4372)) + 1.e-6*t233*t787 - 0.000029*t233*t834 - 0.158015*t740*(t317*t4458 - 1.*t233*t4404*t834 + t317*(t2261*t233 - 1.*t317*t4392 - 1.*t317*t4425 + t4437)*t834 + t233*(t4498 - 1.*t2261*t317*t834 - 1.*t233*t4392*t834 - 1.*t233*t4425*t834)) - 0.158015*(t317*t4577 - 1.*t233*t4516*t787 + t317*(-1.*t2261*t233 + t317*t4392 + t317*t4425 + t4528)*t787 + t233*(t4546 + t2261*t317*t787 + t233*t4392*t787 + t233*t4425*t787))*t962)*var2[5])*var2[7];
  p_output1[7]=(-0.5*(-0.0031174510920000003*t2094 + 0.029427012384*t5359 + t5374 + t5393)*var2[0] - 0.5*(-0.0031174510920000003*t1182 + 0.029427012384*(t2694*t306 - 1.*t115*t5658) + t5745 + t5754)*var2[1] - 0.5*(-0.0031174510920000003*(t115*t436 + t306*t517) + 0.029427012384*(t115*t2694 + t306*t5658) + t5701 + t5723)*var2[2] - 0.5*(-6.e-6*t2094 + 0.029427012384*(t1945*t2094 + t1908*(t5786 - 1.*t1568*t6052 - 1.*t1851*t6065) + t1851*(t1872*t2094 + t1808*t517 + t5816 + t5826 + t411*t6052 + t1908*t6065)) - 0.0031174510920000003*(t2112*t5359 + t2094*(t5858 + t1568*t6052 + t1851*t6065) + t1851*(-1.*t1872*t5359 - 1.*t1808*t5658 + t5887 + t5898 - 1.*t517*t6052 - 1.*t2094*t6065)) + t6155 + t6164 - 0.158015*(t6170 + t2571*(t5929 - 1.*t1568*t6178 - 1.*t1851*t6196) + t1851*(t5948 + t5950 + t1069*t6178 + t2571*t6196 + t6215 + t6228))*t740 - 0.158015*(t2363*(t5972 + t1568*t6178 + t1851*t6196) + t6291 + t1851*(t6005 + t6010 - 1.*t2363*t6196 + t6307 + t6310 - 1.*t6178*t920))*t962)*var2[3] - 0.5*(-6.e-6*t436 + 0.029427012384*(t3017*t436 + t279*(-1.*t233*t317*t5429 + t5786 + t270*t317*t5794) + t190*t317*(t1770*t488 + t5432 + t5441 + t396*t5794 + t5816 + t5826)) - 0.0031174510920000003*(t2694*t3133 + t436*(t233*t317*t5429 - 1.*t270*t317*t5794 + t5858) + t190*t317*(t3091 - 1.*t1770*t5354 + t5491 - 1.*t488*t5794 + t5887 + t5898)) + t5910 + t5920 - 0.158015*(t5924 + t1015*(-1.*t233*t317*t5572 + t5929 + t270*t317*t5934) + t190*t317*(t5579 + t1054*t5934 + t5943 + t5945 + t5948 + t5950))*t740 - 0.158015*(t5985 + (t233*t317*t5572 - 1.*t270*t317*t5934 + t5972)*t867 + t190*t317*(t5610 + t5987 + t6005 + t6010 + t6012 - 1.*t5934*t913))*t962)*var2[4] - 0.5*(6.e-6*t273*t317 + 0.029427012384*(-1.*t273*t317*t4314 + t233*(t1758*t201 + t1678*t273 + t1689*t233*t273 + t5432 + t201*t5429*t5433 + t5441)) - 0.0031174510920000003*(-1.*t201*t317*t4215 + t233*(-1.*t1678*t201 + t3091 + t4366 + t4372 + t273*t5429*t5433 + t5491)) + t5516 + t5520 - 0.158015*(t5607 + t233*(t5610 + t5619 + t5624 + t5625 - 1.*t5433*t5572*t787 - 1.*t5548*t834))*t962 - 0.158015*t740*(t5530 + t233*(t5534 + t5543 + t5579 + t5586 + t5433*t5572*t834 + t5548*t986)))*var2[5] - 0.5*(0.0017906073870803522*t201 - 0.00019032974151987603*t273 + t5306 + t5309 + t5313 + t5336)*var2[6])*var2[7];
  p_output1[8]=var2[7]*(-0.5*(t5374 + t5393 - 0.158015*t2363*t6395 - 0.158015*t2571*t6411)*var2[0] - 0.5*(t5745 + t5754 - 0.158015*t1208*t6395 - 0.158015*t1256*t6411)*var2[1] - 0.5*(t5701 + t5723 - 0.158015*t5700*t6395 - 0.158015*(t1015*t115 + t1069*t306)*t6411)*var2[2] - 0.5*(t6155 + t6164 - 0.158015*(t2571*t2582 + t1851*t2638)*t6395 - 0.158015*(t2363*t2457 + t1851*t2531)*t6411 - 0.158015*(t6170 + t2571*(t6719 - 1.*t1568*t6894 - 1.*t1851*t6903) + t1851*(t5948 + t6215 + t6228 + t6734 + t1069*t6894 + t2571*t6903))*t740 - 0.158015*(t6291 + t2363*(t6758 + t1568*t6894 + t1851*t6903) + t1851*(t6010 + t6307 + t6310 + t6788 - 1.*t2363*t6903 - 1.*t6894*t920))*t962)*var2[3] - 0.5*(t5910 + t5920 - 0.158015*(t1015*t3415 + t190*t317*t3462)*t6395 - 0.158015*(t5924 + t1015*(-1.*t233*t317*t6529 + t270*t317*t6698 + t6719) + t190*t317*(t5943 + t5945 + t5948 + t6530 + t1054*t6698 + t6734))*t740 - 0.158015*t6411*(t190*t317*t3338 + t3217*t867) - 0.158015*(t5985 + (t233*t317*t6529 - 1.*t270*t317*t6698 + t6758)*t867 + t190*t317*(t5987 + t6010 + t6012 + t6557 + t6788 - 1.*t6698*t913))*t962)*var2[4] - 0.5*(t5516 + t5520 - 0.158015*t6411*(t233*t4577 + t317*t4516*t787) - 0.158015*t6395*(t233*t4458 + t317*t4404*t834) - 0.158015*(t5607 + t233*(t5619 + t5624 + t5625 + t6557 - 1.*t5433*t6529*t787 - 1.*t6518*t834))*t962 - 0.158015*t740*(t5530 + t233*(t5534 + t5543 + t5586 + t6530 + t5433*t6529*t834 + t6518*t986)))*var2[5] - 0.5*(t5306 + t5309 + t5313 + t5336 - 0.158015*t6411*(0. - 0.078693*t834) - 0.158015*t6395*(0. + 0.04675*t787 + 0.125443*t986))*var2[6] - 0.5*(-0.31603*t6395*t740 - 0.31603*t6411*t962)*var2[7] - 0.5*(0.019320336034999996*t6395 + 0.0009932822900000022*t6411)*var2[8]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec8_go1_description.hh"

namespace SymFunction
{

void Ce3_vec8_go1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
